{
    "project": {
        "name": "xeogl",
        "description": "A WebGL-based 3D visualization engine from xeoLabs",
        "version": "1.0.0",
        "url": "http://xeogl.org/",
        "logo": "../assets/images/logo.png"
    },
    "files": {
        "src/_renderer/chunks/chunk.js": {
            "name": "src/_renderer/chunks/chunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/chunkFactory.js": {
            "name": "src/_renderer/chunks/chunkFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/geometryChunk.js": {
            "name": "src/_renderer/chunks/geometryChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/chunks/viewportChunk.js": {
            "name": "src/_renderer/chunks/viewportChunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/arrayBuffer.js": {
            "name": "src/_renderer/webgl/arrayBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/attribute.js": {
            "name": "src/_renderer/webgl/attribute.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/program.js": {
            "name": "src/_renderer/webgl/program.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/renderBuffer.js": {
            "name": "src/_renderer/webgl/renderBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/shader.js": {
            "name": "src/_renderer/webgl/shader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/webgl/webgl.js": {
            "name": "src/_renderer/webgl/webgl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/object.js": {
            "name": "src/_renderer/object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/program.js": {
            "name": "src/_renderer/program.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programFactory.js": {
            "name": "src/_renderer/programFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programSource.js": {
            "name": "src/_renderer/programSource.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/programSourceFactory.js": {
            "name": "src/_renderer/programSourceFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/renderer.js": {
            "name": "src/_renderer/renderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_renderer/states.js": {
            "name": "src/_renderer/states.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_utils/inheritance.js": {
            "name": "src/_utils/inheritance.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/_utils/map.js": {
            "name": "src/_utils/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/animation/_module.js": {
            "name": "src/animation/_module.js",
            "modules": {
                "animation": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/animation/cameraFlightAnimation.js": {
            "name": "src/animation/cameraFlightAnimation.js",
            "modules": {},
            "classes": {
                "CameraFlightAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/animation/morphTargets.js": {
            "name": "src/animation/morphTargets.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/_module.js": {
            "name": "src/boundaries/_module.js",
            "modules": {
                "boundaries": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/boundary2d.js": {
            "name": "src/boundaries/boundary2d.js",
            "modules": {},
            "classes": {
                "Boundary2D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/boundaries/boundary3d.js": {
            "name": "src/boundaries/boundary3d.js",
            "modules": {},
            "classes": {
                "Boundary3D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/camera/_module.js": {
            "name": "src/camera/_module.js",
            "modules": {
                "camera": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/camera/camera.js": {
            "name": "src/camera/camera.js",
            "modules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/canvas/_module.js": {
            "name": "src/canvas/_module.js",
            "modules": {
                "canvas": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/canvas/canvas.js": {
            "name": "src/canvas/canvas.js",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/canvas/spinner.js": {
            "name": "src/canvas/spinner.js",
            "modules": {},
            "classes": {
                "Spinner": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/_module.js": {
            "name": "src/clipping/_module.js",
            "modules": {
                "clipping": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/clip.js": {
            "name": "src/clipping/clip.js",
            "modules": {},
            "classes": {
                "Clip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/clipping/clips.js": {
            "name": "src/clipping/clips.js",
            "modules": {},
            "classes": {
                "Clips": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/configs/_module.js": {
            "name": "src/configs/_module.js",
            "modules": {
                "configs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/configs/configs.js": {
            "name": "src/configs/configs.js",
            "modules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/_module.js": {
            "name": "src/controls/_module.js",
            "modules": {
                "controls": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/cameraControl.js": {
            "name": "src/controls/cameraControl.js",
            "modules": {},
            "classes": {
                "CameraControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/cameraController.js": {
            "name": "src/controls/cameraController.js",
            "modules": {},
            "classes": {
                "CameraController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/inputControl.js": {
            "name": "src/controls/inputControl.js",
            "modules": {},
            "classes": {
                "InputControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardAxisCamera.js": {
            "name": "src/controls/keyboardAxisCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardPanCamera.js": {
            "name": "src/controls/keyboardPanCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardRotateCamera.js": {
            "name": "src/controls/keyboardRotateCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/keyboardZoomCamera.js": {
            "name": "src/controls/keyboardZoomCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mousePanCamera.js": {
            "name": "src/controls/mousePanCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mousePickEntity.js": {
            "name": "src/controls/mousePickEntity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mouseRotateCamera.js": {
            "name": "src/controls/mouseRotateCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/controls/mouseZoomCamera.js": {
            "name": "src/controls/mouseZoomCamera.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/emphasis/_module.js": {
            "name": "src/emphasis/_module.js",
            "modules": {
                "emphasis": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/emphasis/outline.js": {
            "name": "src/emphasis/outline.js",
            "modules": {},
            "classes": {
                "Outline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/emphasis/xray.js": {
            "name": "src/emphasis/xray.js",
            "modules": {},
            "classes": {
                "XRay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/entities/_module.js": {
            "name": "src/entities/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/entities/entity.js": {
            "name": "src/entities/entity.js",
            "modules": {},
            "classes": {
                "Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/_module.js": {
            "name": "src/geometry/_module.js",
            "modules": {
                "geometry": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/aabbGeometry.js": {
            "name": "src/geometry/aabbGeometry.js",
            "modules": {},
            "classes": {
                "AABBGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/boxGeometry.js": {
            "name": "src/geometry/boxGeometry.js",
            "modules": {},
            "classes": {
                "BoxGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/cylinderGeometry.js": {
            "name": "src/geometry/cylinderGeometry.js",
            "modules": {},
            "classes": {
                "CylinderGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/geometry.js": {
            "name": "src/geometry/geometry.js",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/latheGeometry.js": {
            "name": "src/geometry/latheGeometry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/obbGeometry.js": {
            "name": "src/geometry/obbGeometry.js",
            "modules": {},
            "classes": {
                "OBBGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/pathGeometry.js": {
            "name": "src/geometry/pathGeometry.js",
            "modules": {},
            "classes": {
                "PathGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/planeGeometry.js": {
            "name": "src/geometry/planeGeometry.js",
            "modules": {},
            "classes": {
                "PlaneGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/sphereGeometry.js": {
            "name": "src/geometry/sphereGeometry.js",
            "modules": {},
            "classes": {
                "SphereGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/geometry/torusGeometry.js": {
            "name": "src/geometry/torusGeometry.js",
            "modules": {},
            "classes": {
                "TorusGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/_module.js": {
            "name": "src/input/_module.js",
            "modules": {
                "input": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/input/input.js": {
            "name": "src/input/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/_module.js": {
            "name": "src/lighting/_module.js",
            "modules": {
                "lighting": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/ambientLight.js": {
            "name": "src/lighting/ambientLight.js",
            "modules": {},
            "classes": {
                "AmbientLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/cubeTexture.js": {
            "name": "src/lighting/cubeTexture.js",
            "modules": {},
            "classes": {
                "CubeTexture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/dirLight.js": {
            "name": "src/lighting/dirLight.js",
            "modules": {},
            "classes": {
                "DirLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/fog.js": {
            "name": "src/lighting/fog.js",
            "modules": {},
            "classes": {
                "Fog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/lights.js": {
            "name": "src/lighting/lights.js",
            "modules": {},
            "classes": {
                "Lights": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/pointLight.js": {
            "name": "src/lighting/pointLight.js",
            "modules": {},
            "classes": {
                "PointLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/shadow.js": {
            "name": "src/lighting/shadow.js",
            "modules": {},
            "classes": {
                "Shadow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lighting/spotLight.js": {
            "name": "src/lighting/spotLight.js",
            "modules": {},
            "classes": {
                "SpotLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/_module.js": {
            "name": "src/materials/_module.js",
            "modules": {
                "materials": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/materials/fresnel.js": {
            "name": "src/materials/fresnel.js",
            "modules": {},
            "classes": {
                "Fresnel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/material.js": {
            "name": "src/materials/material.js",
            "modules": {},
            "classes": {
                "Material": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/metallicMaterial.js": {
            "name": "src/materials/metallicMaterial.js",
            "modules": {},
            "classes": {
                "MetallicMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/phongMaterial.js": {
            "name": "src/materials/phongMaterial.js",
            "modules": {},
            "classes": {
                "PhongMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/specularMaterial.js": {
            "name": "src/materials/specularMaterial.js",
            "modules": {},
            "classes": {
                "SpecularMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/materials/texture.js": {
            "name": "src/materials/texture.js",
            "modules": {},
            "classes": {
                "Texture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/math/_module.js": {
            "name": "src/math/_module.js",
            "modules": {
                "math": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/math.js": {
            "name": "src/math/math.js",
            "modules": {},
            "classes": {
                "xeogl.math.math": 1
            },
            "fors": {},
            "namespaces": {
                "xeogl.math": 1
            }
        },
        "src/math/mathBoundaries.js": {
            "name": "src/math/mathBoundaries.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathCurves.js": {
            "name": "src/math/mathCurves.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathGeometry.js": {
            "name": "src/math/mathGeometry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathGeometryBuild.2.js": {
            "name": "src/math/mathGeometryBuild.2.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathGeometryBuild.js": {
            "name": "src/math/mathGeometryBuild.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathKDTree.js": {
            "name": "src/math/mathKDTree.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/math/mathRays.js": {
            "name": "src/math/mathRays.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/models/_module.js": {
            "name": "src/models/_module.js",
            "modules": {
                "models": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/models/model.js": {
            "name": "src/models/model.js",
            "modules": {},
            "classes": {
                "Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/outline/_module.js": {
            "name": "src/outline/_module.js",
            "modules": {
                "outline": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/_module.js": {
            "name": "src/rendering/_module.js",
            "modules": {
                "rendering": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/viewport.js": {
            "name": "src/rendering/viewport.js",
            "modules": {},
            "classes": {
                "Viewport": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/_module.js": {
            "name": "src/transforms/_module.js",
            "modules": {
                "transforms": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/frustum.js": {
            "name": "src/transforms/frustum.js",
            "modules": {},
            "classes": {
                "Frustum": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/lookat.js": {
            "name": "src/transforms/lookat.js",
            "modules": {},
            "classes": {
                "Lookat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/ortho.js": {
            "name": "src/transforms/ortho.js",
            "modules": {},
            "classes": {
                "Ortho": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/perspective.js": {
            "name": "src/transforms/perspective.js",
            "modules": {},
            "classes": {
                "Perspective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/quaternion.js": {
            "name": "src/transforms/quaternion.js",
            "modules": {},
            "classes": {
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/rotate.js": {
            "name": "src/transforms/rotate.js",
            "modules": {},
            "classes": {
                "Rotate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/scale.js": {
            "name": "src/transforms/scale.js",
            "modules": {},
            "classes": {
                "Scale": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/transform.js": {
            "name": "src/transforms/transform.js",
            "modules": {},
            "classes": {
                "Transform": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/transforms/translate.js": {
            "name": "src/transforms/translate.js",
            "modules": {},
            "classes": {
                "Translate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/component.js": {
            "name": "src/component.js",
            "modules": {},
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/scene.js": {
            "name": "src/scene.js",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/xeogl.js": {
            "name": "src/xeogl.js",
            "modules": {
                "xeogl": 1
            },
            "classes": {
                "xeogl": 1
            },
            "fors": {},
            "namespaces": {
                "xeogl": 1
            }
        },
        "examples/js/animation/_module.js": {
            "name": "examples/js/animation/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/animation/cameraFollowAnimation.js": {
            "name": "examples/js/animation/cameraFollowAnimation.js",
            "modules": {},
            "classes": {
                "CameraFollowAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/animation/cameraPath.js": {
            "name": "examples/js/animation/cameraPath.js",
            "modules": {},
            "classes": {
                "CameraPath": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/animation/cameraPathAnimation.js": {
            "name": "examples/js/animation/cameraPathAnimation.js",
            "modules": {},
            "classes": {
                "CameraPathAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/annotations/_module.js": {
            "name": "examples/js/annotations/_module.js",
            "modules": {
                "annotations": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/annotations/annotation.js": {
            "name": "examples/js/annotations/annotation.js",
            "modules": {},
            "classes": {
                "Annotation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/annotations/pin.js": {
            "name": "examples/js/annotations/pin.js",
            "modules": {},
            "classes": {
                "Pin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/annotations/region.js": {
            "name": "examples/js/annotations/region.js",
            "modules": {},
            "classes": {
                "Region": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/annotations/ruler.js": {
            "name": "examples/js/annotations/ruler.js",
            "modules": {},
            "classes": {
                "Ruler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/controls/BIMPickingControl.js": {
            "name": "examples/js/controls/BIMPickingControl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/controls/_module.js": {
            "name": "examples/js/controls/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/controls/bimCameraControl.js": {
            "name": "examples/js/controls/bimCameraControl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/controls/mousePickControl.js": {
            "name": "examples/js/controls/mousePickControl.js",
            "modules": {},
            "classes": {
                "MousePickControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/effects/_module.js": {
            "name": "examples/js/effects/_module.js",
            "modules": {
                "effects": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/effects/cardboardEffect.js": {
            "name": "examples/js/effects/cardboardEffect.js",
            "modules": {},
            "classes": {
                "CardboardEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/effects/stereoEffect.js": {
            "name": "examples/js/effects/stereoEffect.js",
            "modules": {},
            "classes": {
                "StereoEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/_module.js": {
            "name": "examples/js/curves/_module.js",
            "modules": {
                "curves": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/cubicBezierCurve.js": {
            "name": "examples/js/curves/cubicBezierCurve.js",
            "modules": {},
            "classes": {
                "CubicBezierCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/curve.js": {
            "name": "examples/js/curves/curve.js",
            "modules": {},
            "classes": {
                "Curve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/path.js": {
            "name": "examples/js/curves/path.js",
            "modules": {},
            "classes": {
                "Path": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/quadraticBezierCurve.js": {
            "name": "examples/js/curves/quadraticBezierCurve.js",
            "modules": {},
            "classes": {
                "QuadraticBezierCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/curves/splineCurve.js": {
            "name": "examples/js/curves/splineCurve.js",
            "modules": {},
            "classes": {
                "SplineCurve": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/generation/_module.js": {
            "name": "examples/js/generation/_module.js",
            "modules": {
                "generation": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/generation/geometryBuilder.js": {
            "name": "examples/js/generation/geometryBuilder.js",
            "modules": {},
            "classes": {
                "GeometryBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/generation/voxelGeometryBuilder.js": {
            "name": "examples/js/generation/voxelGeometryBuilder.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/skyboxes/_module.js": {
            "name": "examples/js/skyboxes/_module.js",
            "modules": {
                "skyboxes": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/skyboxes/skybox.js": {
            "name": "examples/js/skyboxes/skybox.js",
            "modules": {},
            "classes": {
                "Skybox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/stories/_module.js": {
            "name": "examples/js/stories/_module.js",
            "modules": {
                "stories": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/stories/annotationStory.js": {
            "name": "examples/js/stories/annotationStory.js",
            "modules": {},
            "classes": {
                "AnnotationStory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/stories/story.js": {
            "name": "examples/js/stories/story.js",
            "modules": {},
            "classes": {
                "Story": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/_module.js": {
            "name": "examples/js/geometry/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/heightmapGeometry.js": {
            "name": "examples/js/geometry/heightmapGeometry.js",
            "modules": {},
            "classes": {
                "HeightmapGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/nintendo3DSGeometry.js": {
            "name": "examples/js/geometry/nintendo3DSGeometry.js",
            "modules": {},
            "classes": {
                "Nintendo3DSGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/objGeometry.js": {
            "name": "examples/js/geometry/objGeometry.js",
            "modules": {},
            "classes": {
                "OBJGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/teapotGeometry.js": {
            "name": "examples/js/geometry/teapotGeometry.js",
            "modules": {},
            "classes": {
                "TeapotGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/geometry/vectorTextGeometry.js": {
            "name": "examples/js/geometry/vectorTextGeometry.js",
            "modules": {},
            "classes": {
                "VectorTextGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/marking/_module.js": {
            "name": "examples/js/marking/_module.js",
            "modules": {
                "marking": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/marking/pointMarkings.js": {
            "name": "examples/js/marking/pointMarkings.js",
            "modules": {},
            "classes": {
                "PointMarkings": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/OBJModel.js": {
            "name": "examples/js/models/OBJModel.js",
            "modules": {},
            "classes": {
                "OBJModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/_module.js": {
            "name": "examples/js/models/_module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/buildableModel.js": {
            "name": "examples/js/models/buildableModel.js",
            "modules": {},
            "classes": {
                "BuildableModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/glTFModel.js": {
            "name": "examples/js/models/glTFModel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/glTFModel2.js": {
            "name": "examples/js/models/glTFModel2.js",
            "modules": {},
            "classes": {
                "GLTFModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/models/sceneJSModel.js": {
            "name": "examples/js/models/sceneJSModel.js",
            "modules": {},
            "classes": {
                "SceneJSModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/zspace/_module.js": {
            "name": "examples/js/zspace/_module.js",
            "modules": {
                "zspace": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/zspace/zSpaceEffect.js": {
            "name": "examples/js/zspace/zSpaceEffect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/zspace/zSpaceEffect_complete.js": {
            "name": "examples/js/zspace/zSpaceEffect_complete.js",
            "modules": {},
            "classes": {
                "ZSpaceEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/zspace/zSpaceStylusControl.js": {
            "name": "examples/js/zspace/zSpaceStylusControl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/zspace/zSpaceStylusControlV2.js": {
            "name": "examples/js/zspace/zSpaceStylusControlV2.js",
            "modules": {},
            "classes": {
                "ZSpaceStylusControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/_module.js": {
            "name": "examples/js/helpers/_module.js",
            "modules": {
                "helpers": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/aabbHelper.js": {
            "name": "examples/js/helpers/aabbHelper.js",
            "modules": {},
            "classes": {
                "AABBHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/axisHelper.js": {
            "name": "examples/js/helpers/axisHelper.js",
            "modules": {},
            "classes": {
                "AxisHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/clipHelper.js": {
            "name": "examples/js/helpers/clipHelper.js",
            "modules": {},
            "classes": {
                "ClipHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/labelHelper.js": {
            "name": "examples/js/helpers/labelHelper.js",
            "modules": {},
            "classes": {
                "LabelHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/mousePickHelper.js": {
            "name": "examples/js/helpers/mousePickHelper.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/obbHelper.js": {
            "name": "examples/js/helpers/obbHelper.js",
            "modules": {},
            "classes": {
                "OBBHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/planeHelper.js": {
            "name": "examples/js/helpers/planeHelper.js",
            "modules": {},
            "classes": {
                "PlaneHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/pointLightHelper.js": {
            "name": "examples/js/helpers/pointLightHelper.js",
            "modules": {},
            "classes": {
                "PointLightHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/splineCurveHelper.js": {
            "name": "examples/js/helpers/splineCurveHelper.js",
            "modules": {
                "entities": 1
            },
            "classes": {
                "SplineCurveHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "examples/js/helpers/viewCube.js": {
            "name": "examples/js/helpers/viewCube.js",
            "modules": {},
            "classes": {
                "ViewCube": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "xeogl": {
            "name": "xeogl",
            "submodules": {
                "animation": 1,
                "boundaries": 1,
                "camera": 1,
                "canvas": 1,
                "clipping": 1,
                "configs": 1,
                "controls": 1,
                "interaction": 1,
                "emphasis": 1,
                "entities": 1,
                "geometry": 1,
                "input": 1,
                "lighting": 1,
                "materials": 1,
                "math": 1,
                "models": 1,
                "outline": 1,
                "rendering": 1,
                "transforms": 1,
                "annotations": 1,
                "effects": 1,
                "curves": 1,
                "generation": 1,
                "skyboxes": 1,
                "stories": 1,
                "marking": 1,
                "zspace": 1,
                "helpers": 1
            },
            "classes": {
                "CameraFlightAnimation": 1,
                "Boundary2D": 1,
                "Boundary3D": 1,
                "Camera": 1,
                "Canvas": 1,
                "Spinner": 1,
                "Clip": 1,
                "Clips": 1,
                "Configs": 1,
                "CameraControl": 1,
                "CameraController": 1,
                "InputControl": 1,
                "Outline": 1,
                "XRay": 1,
                "Entity": 1,
                "AABBGeometry": 1,
                "BoxGeometry": 1,
                "CylinderGeometry": 1,
                "Geometry": 1,
                "OBBGeometry": 1,
                "PathGeometry": 1,
                "PlaneGeometry": 1,
                "SphereGeometry": 1,
                "TorusGeometry": 1,
                "Input": 1,
                "AmbientLight": 1,
                "CubeTexture": 1,
                "DirLight": 1,
                "Fog": 1,
                "Lights": 1,
                "PointLight": 1,
                "Shadow": 1,
                "SpotLight": 1,
                "Fresnel": 1,
                "Material": 1,
                "MetallicMaterial": 1,
                "PhongMaterial": 1,
                "SpecularMaterial": 1,
                "Texture": 1,
                "xeogl.math.math": 1,
                "Model": 1,
                "Viewport": 1,
                "Frustum": 1,
                "Lookat": 1,
                "Ortho": 1,
                "Perspective": 1,
                "Quaternion": 1,
                "Rotate": 1,
                "Scale": 1,
                "Transform": 1,
                "Translate": 1,
                "Component": 1,
                "Scene": 1,
                "xeogl": 1,
                "CameraFollowAnimation": 1,
                "CameraPath": 1,
                "CameraPathAnimation": 1,
                "Annotation": 1,
                "Pin": 1,
                "Region": 1,
                "Ruler": 1,
                "MousePickControl": 1,
                "CardboardEffect": 1,
                "StereoEffect": 1,
                "CubicBezierCurve": 1,
                "Curve": 1,
                "Path": 1,
                "QuadraticBezierCurve": 1,
                "SplineCurve": 1,
                "GeometryBuilder": 1,
                "Skybox": 1,
                "AnnotationStory": 1,
                "Story": 1,
                "HeightmapGeometry": 1,
                "Nintendo3DSGeometry": 1,
                "OBJGeometry": 1,
                "TeapotGeometry": 1,
                "VectorTextGeometry": 1,
                "PointMarkings": 1,
                "OBJModel": 1,
                "BuildableModel": 1,
                "GLTFModel": 1,
                "SceneJSModel": 1,
                "ZSpaceEffect": 1,
                "ZSpaceStylusControl": 1,
                "AABBHelper": 1,
                "AxisHelper": 1,
                "ClipHelper": 1,
                "LabelHelper": 1,
                "OBBHelper": 1,
                "PlaneHelper": 1,
                "PointLightHelper": 1
            },
            "fors": {},
            "namespaces": {
                "xeogl.math": 1,
                "xeogl": 1
            },
            "tag": "main",
            "file": "examples/js/helpers/pointLightHelper.js",
            "line": 1,
            "description": "The xeogl namespace.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*"
                }
            ],
            "extends": "renderer.State",
            "itemtype": "main"
        },
        "animation": {
            "name": "animation",
            "submodules": {},
            "classes": {
                "CameraFlightAnimation": 1,
                "CameraFollowAnimation": 1,
                "CameraPath": 1,
                "CameraPathAnimation": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 1,
            "description": "Components for animating state within Scenes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this MorphTarget in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MorphTarget.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "targets",
                            "description": "The morph targets.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "factor",
                            "description": "The morph factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "boundaries": {
            "name": "boundaries",
            "submodules": {},
            "classes": {
                "Boundary2D": 1,
                "Boundary3D": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/boundaries/boundary3d.js",
            "line": 1,
            "description": "Components to support spatial queries (eg. collisions etc)."
        },
        "camera": {
            "name": "camera",
            "submodules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/camera/camera.js",
            "line": 1,
            "description": "Camera components."
        },
        "canvas": {
            "name": "canvas",
            "submodules": {},
            "classes": {
                "Canvas": 1,
                "Spinner": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/canvas/spinner.js",
            "line": 1,
            "description": "Canvas-related things."
        },
        "clipping": {
            "name": "clipping",
            "submodules": {},
            "classes": {
                "Clip": 1,
                "Clips": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/clipping/clips.js",
            "line": 1,
            "description": "Components for cross-section views of Entities."
        },
        "configs": {
            "name": "configs",
            "submodules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/configs/configs.js",
            "line": 1,
            "description": "Components for managing Scene configuration."
        },
        "controls": {
            "name": "controls",
            "submodules": {},
            "classes": {
                "CameraControl": 1,
                "InputControl": 1,
                "MousePickControl": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/controls/mousePickControl.js",
            "line": 1,
            "description": "Components for controlling things with user input.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Entity",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardAxisCamera. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this KeyboardAxisCamera is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "interaction": {
            "name": "interaction",
            "submodules": {},
            "classes": {
                "CameraController": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "description": "A **CameraController** is the base class for components that control Cameras.",
            "file": "src/controls/cameraController.js",
            "line": 1
        },
        "emphasis": {
            "name": "emphasis",
            "submodules": {},
            "classes": {
                "Outline": 1,
                "XRay": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/emphasis/xray.js",
            "line": 1,
            "description": "Emphasis effect components."
        },
        "entities": {
            "name": "entities",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "SplineCurveHelper": 1,
                "Entity": 1,
                "PointLightHelper": 1,
                "ViewCube": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/viewCube.js",
            "line": 207,
            "description": "Shows the shape and control points of {{#crossLink \"SplineCurve\"}}{{/crossLink}}",
            "tag": "module"
        },
        "geometry": {
            "name": "geometry",
            "submodules": {},
            "classes": {
                "AABBGeometry": 1,
                "BoxGeometry": 1,
                "CylinderGeometry": 1,
                "Geometry": 1,
                "OBBGeometry": 1,
                "PathGeometry": 1,
                "PlaneGeometry": 1,
                "SphereGeometry": 1,
                "TorusGeometry": 1,
                "HeightmapGeometry": 1,
                "Nintendo3DSGeometry": 1,
                "OBJGeometry": 1,
                "TeapotGeometry": 1,
                "VectorTextGeometry": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 1,
            "description": "Components for defining geometry.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this LatheGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this LatheGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "points",
                            "description": "Profile points.",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "segments",
                            "description": "Number of revolution segments.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "4"
                        },
                        {
                            "name": "phiStart",
                            "description": "Angle in degrees at which revolution starts.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "phiLength",
                            "description": "Length of revolution in degrees.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "360"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "input": {
            "name": "input",
            "submodules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/input/input.js",
            "line": 1,
            "description": "Components for capturing user input."
        },
        "lighting": {
            "name": "lighting",
            "submodules": {},
            "classes": {
                "AmbientLight": 1,
                "CubeTexture": 1,
                "DirLight": 1,
                "Fog": 1,
                "Lights": 1,
                "PointLight": 1,
                "Shadow": 1,
                "SpotLight": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/spotLight.js",
            "line": 1,
            "description": "Components for defining light sources."
        },
        "materials": {
            "name": "materials",
            "submodules": {},
            "classes": {
                "Fresnel": 1,
                "Material": 1,
                "MetallicMaterial": 1,
                "PhongMaterial": 1,
                "SpecularMaterial": 1,
                "Texture": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/texture.js",
            "line": 1,
            "description": "Components to define the surface appearance of Entities."
        },
        "math": {
            "name": "math",
            "submodules": {},
            "classes": {
                "xeogl.math.math": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "xeogl.math": 1
            },
            "module": "xeogl",
            "namespace": "",
            "file": "src/math/math.js",
            "line": 12,
            "description": "Math utilities.",
            "static": 1
        },
        "models": {
            "name": "models",
            "submodules": {},
            "classes": {
                "Model": 1,
                "OBJModel": 1,
                "BuildableModel": 1,
                "GLTFModel": 1,
                "SceneJSModel": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/models/sceneJSModel.js",
            "line": 1,
            "description": "Models are units of xeogl content."
        },
        "outline": {
            "name": "outline",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/outline/_module.js",
            "line": 1,
            "description": "An outline rendering effect for emphasis."
        },
        "rendering": {
            "name": "rendering",
            "submodules": {},
            "classes": {
                "Viewport": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/rendering/viewport.js",
            "line": 1,
            "description": "Components that influence the way entities are rendered with WebGL."
        },
        "transforms": {
            "name": "transforms",
            "submodules": {},
            "classes": {
                "Frustum": 1,
                "Lookat": 1,
                "Ortho": 1,
                "Perspective": 1,
                "Quaternion": 1,
                "Rotate": 1,
                "Scale": 1,
                "Transform": 1,
                "Translate": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/translate.js",
            "line": 1,
            "description": "Modelling transform components."
        },
        "annotations": {
            "name": "annotations",
            "submodules": {},
            "classes": {
                "Annotation": 1,
                "Pin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/annotations/pin.js",
            "line": 1,
            "description": "Components for annotating entities."
        },
        "effects": {
            "name": "effects",
            "submodules": {},
            "classes": {
                "CardboardEffect": 1,
                "StereoEffect": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/effects/stereoEffect.js",
            "line": 1,
            "description": "Components for viewing effects."
        },
        "curves": {
            "name": "curves",
            "submodules": {},
            "classes": {
                "CubicBezierCurve": 1,
                "Curve": 1,
                "Path": 1,
                "QuadraticBezierCurve": 1,
                "SplineCurve": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/splineCurve.js",
            "line": 1,
            "description": "Components for defining 3D curves."
        },
        "generation": {
            "name": "generation",
            "submodules": {},
            "classes": {
                "GeometryBuilder": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 1,
            "description": "Components for generating xeogl content.",
            "is_constructor": 1
        },
        "skyboxes": {
            "name": "skyboxes",
            "submodules": {},
            "classes": {
                "Skybox": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/skyboxes/skybox.js",
            "line": 1,
            "description": "Skybox components."
        },
        "stories": {
            "name": "stories",
            "submodules": {},
            "classes": {
                "AnnotationStory": 1,
                "Story": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/stories/story.js",
            "line": 5,
            "description": "UI presentation components."
        },
        "marking": {
            "name": "marking",
            "submodules": {},
            "classes": {
                "PointMarkings": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/marking/pointMarkings.js",
            "line": 1,
            "description": "Components for drawing marks on entities."
        },
        "zspace": {
            "name": "zspace",
            "submodules": {},
            "classes": {
                "ZSpaceEffect": 1,
                "ZSpaceStylusControl": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 1,
            "description": "Components for zSpace integration"
        },
        "helpers": {
            "name": "helpers",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/_module.js",
            "line": 1,
            "description": "Components to help visualise other components."
        }
    },
    "classes": {
        "CameraFlightAnimation": {
            "name": "CameraFlightAnimation",
            "shortname": "CameraFlightAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 1,
            "description": "A **CameraFlightAnimation** jumps or flies a {{#crossLink \"Camera\"}}{{/crossLink}} to look at a given target.\n\n<a href=\"../../examples/#animation_camera_flight\"><img src=\"http://i.giphy.com/3o7TKP0jN800EQ99EQ.gif\"></img></a>\n\n## Overview\n\n* Requires that the {{#crossLink \"Camera\"}}{{/crossLink}} have a {{#crossLink \"Lookat\"}}{{/crossLink}} for its {{#crossLink \"Camera/view:property\"}}view{{/crossLink}} transform.\n* Can be attached to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.\n* Can be made to either fly or jump to its target.\n* While busy flying to a target, it can be stopped, or redirected to fly to a different target.\n\nA CameraFlightAnimation's target can be:\n\n* specific ````eye````, ````look```` and ````up```` positions,\n* a World-space {{#crossLink \"Boundary3D\"}}{{/crossLink}},\n* an instance or ID of any {{#crossLink \"Component\"}}{{/crossLink}} subtype that provides a World-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} in a \"worldBoundary\" property, or\n* an axis-aligned World-space bounding box (AABB).\n\nWhen a CameraFlightAnimation's target is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} or AABB, you can configure its {{#crossLink \"CameraFlightAnimation/fit:property\"}}{{/crossLink}}\nand {{#crossLink \"CameraFlightAnimation/fitFOV:property\"}}{{/crossLink}} properties to make it stop at the point where the target\noccupies a certain amount of the field-of-view.\n\n## Examples\n\n* [Flying to random Entities](../../examples/#animation_camera_flight)\n\n## Flying to an Entity\n\nFlying to an {{#crossLink \"Entity\"}}{{/crossLink}} (which provides a World-space\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} via its {{#crossLink \"Entity/worldBoundary:property\"}}{{/crossLink}} property):\n\n````Javascript\nvar camera = new xeogl.Camera();\n\n// Create a CameraFlightAnimation that takes one second to fly\n// the default Scene's default Camera to each specified target\nvar cameraFlight = new xeogl.CameraFlightAnimation({\n   fit: true, // Default\n   fitFOV: 45, // Default, degrees\n   duration: 1 // Default, seconds\n}, function() {\n          // Arrived\n      });\n\n// Create a Entity, which gets all the default components\nvar entity = new Entity();\n\n// Fly to the Entity's worldBoundary\ncameraFlight.flyTo(entity);\n````\n## Flying to a position\n\nFlying the CameraFlightAnimation from the previous example to specified eye, look and up positions:\n\n````Javascript\ncameraFlight.flyTo({\n   eye: [-5,-5,-5],\n   look: [0,0,0]\n   up: [0,1,0],\n   duration: 1 // Default, seconds\n}, function() {\n         // Arrived\n     });\n````\n\n## Flying to a Boundary3D\n\nFlying the CameraFlightAnimation from the previous two examples explicitly to the World-space\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} of the {{#crossLink \"Entity\"}}{{/crossLink}} property):\n\n````Javascript\ncameraFlight.flyTo(entity.worldBoundary);\n````\n\n## Flying to an AABB\n\nFlying the CameraFlightAnimation from the previous two examples explicitly to the {{#crossLink \"Boundary3D\"}}Boundary3D's{{/crossLink}}\naxis-aligned bounding box:\n\n````Javascript\nvar worldBoundary = entity.worldBoundary;\n\nvar aabb = worldBoundary.aabb;\n\ncameraFlight.flyTo(aabb);\n````",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg.id",
                    "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cfg.meta",
                    "description": "Optional map of user-defined metadata to attach to this CameraFlightAnimation.",
                    "type": "String:Object",
                    "optional": true
                },
                {
                    "name": "cfg.camera",
                    "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraFlightAnimation. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                    "type": "Number|String|Camera",
                    "optional": true
                },
                {
                    "name": "cfg.fit",
                    "description": "When true, will ensure that when this CameraFlightAnimation has flown or jumped to a boundary\nit will adjust the distance between the {{#crossLink \"CameraFlightAnimation/camera:property\"}}camera{{/crossLink}}'s {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}}\nand {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} position so as to ensure that the target boundary is filling the view volume.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "cfg.fitFOV",
                    "description": "How much field-of-view, in degrees, that a target boundary should\nfill the canvas when fitting the {{#crossLink \"Camera\"}}Camera{{/crossLink}} to the target boundary.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "45"
                },
                {
                    "name": "cfg.trail",
                    "description": "When true, will cause this CameraFlightAnimation to point the {{#crossLink \"Camera\"}}{{/crossLink}} in the direction that it is travelling.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cfg.duration",
                    "description": "Flight duration, in seconds, when calling {{#crossLink \"CameraFlightAnimation/flyTo:method\"}}{{/crossLink}}.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "extends": "Component"
        },
        "Boundary2D": {
            "name": "Boundary2D",
            "shortname": "Boundary2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/boundaries/boundary2d.js",
            "line": 1,
            "description": "A **Boundary2D** is a Canvas-space 2D boundary.\n\n<a href=\"../../examples/#boundaries_entity_canvas_aabb\"><img src=\"http://i.giphy.com/3oriO8fJ8f70AfXdUA.gif\"></img></a>\n\n## Overview\n\nA Boundary2D provides its spatial info in these properties:\n\n* {{#crossLink \"Boundary2D/aabb:property\"}}{{/crossLink}} - an axis-aligned box (AABB) as a four-element Float32Array\ncontaining the min/max extents of the axis-aligned volume, ie. ````[xmin,ymin,xmax,ymax]````, and\n* {{#crossLink \"Boundary2D/center:property\"}}{{/crossLink}} - the center point as a two-element Float32Array containing elements ````[x,y]````.\n\nThe following components have Boundary2Ds:\n\n* An {{#crossLink \"Entity\"}}{{/crossLink}} provides its Canvas-space boundary via\nits {{#crossLink \"Entity/canvasBoundary:property\"}}{{/crossLink}} property\n\n<img src=\"../../../assets/images/Boundary2D.png\"></img>\n\n## Examples\n\n* [Visualizing an Entity's Canvas-space boundary](../../examples/#boundaries_entity_canvas_aabb)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} provides its Canvas-space boundary as a Boundary2D that encloses\nits {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntransformation by the Entity's {{#crossLink \"Entity/transform:property\"}}modelling transform{{/crossLink}}\nand {{#crossLink \"Entity/camera:property\"}}projection transform{{/crossLink}}.\n\nIn the example below we'll create an {{#crossLink \"Entity\"}}{{/crossLink}}, get its Boundary2D, subscribe to updates on it,\nthen animate the {{#crossLink \"Entity\"}}Entity's{{/crossLink}} {{#crossLink \"Translate\"}}{{/crossLink}}\nwhich gives us a running update of the Boundary2D's moving extents via our update handler.\n\n```` javascript\n// Entity With a Geometry and Transform\n\nvar entity = new xeogl.Entity({\n       geometry: new xeogl.BoxGeometry(),\n       transform: new xeogl.Translate({\n           xyz: [-5, 0, 0]\n       })\n });\n\n// Subscribe to updates to the Boundary2D\n\nvar canvasBoundary = entity.canvasBoundary;\n\ncanvasBoundary.on(\"updated\", function() {\n       aabb = canvasBoundary.aabb;\n       center = canvasBoundary.center;\n\n       //...\n   });\n\n// Animate the modelling transform;\n// on each tick, this will update the Boundary2D and fire our\n// handler, enabling us to track the changing boundary.\n\nvar x = 0;\n\nentity.scene.on(\"tick\", function() {\n   entity.transform.xyz: [x, 0, 0];\n   x += 0.5;\n});\n````",
            "submodule": "boundaries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Boundary2D within xeogl's default {{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Boundary.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "Optional initial canvas-space 2D axis-aligned bounding volume (AABB).",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "center",
                            "description": "Optional initial canvas-space 2D center",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "getDirty",
                            "description": "Optional callback to check if parent component has new OBB and matrix.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getOBB",
                            "description": "Optional callback to get new view-space 3D OBB from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getMatrix",
                            "description": "Optional callback to get new projection matrix from parent.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Boundary3D": {
            "name": "Boundary3D",
            "shortname": "Boundary3D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/boundaries/boundary3d.js",
            "line": 1,
            "description": "A **Boundary3D** provides the 3D extents of its parent component in either the Local, World or View coordinate systems.\n\n<a href=\"../../examples/#animation_camera_follow\"><img src=\"http://i.giphy.com/l0HlHcuzAjhMQ8YSY.gif\"></img></a>\n\n## Overview\n\nA Boundary3D provides its spatial info in these properties:\n\n* {{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}} - an oriented box (OBB) as a 32-element Float32Array\ncontaining homogeneous coordinates for the eight corner vertices, ie. each having elements [x,y,z,w].\n* {{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}} - an axis-aligned box (AABB) in a six-element Float32Array\ncontaining the min/max extents of the axis-aligned volume, ie. ````[xmin,ymin,zmin,xmax,ymax,zmax]````,\n* {{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}} - the center point as a three-element Float32Array containing elements ````[x,y,z]```` and\n\nAs shown in the diagram below, the following xeogl components have Boundary3Ds:\n\n* A {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}} provides the **World**-space boundary of all its {{#crossLink \"Entity\"}}Entities{{/crossLink}}\n* A {{#crossLink \"Geometry/localBoundary:property\"}}Geometry's localBoundary{{/crossLink}} provides the **Local**-space boundary of its {{#crossLink \"Geometry/positions:property\"}}positions{{/crossLink}}\n* An {{#crossLink \"Entity/localBoundary:property\"}}Entity's localBoundary{{/crossLink}} (also) provides the **Local**-space boundary of its {{#crossLink \"Geometry\"}}{{/crossLink}}\n* An {{#crossLink \"Entity/worldBoundary:property\"}}Entity's worldBoundary {{/crossLink}} provides the **World**-space boundary of\nits {{#crossLink \"Geometry\"}}Geometry's{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntheir transformation by the {{#crossLink \"Entity/transform:property\"}}Entity's Modelling transform{{/crossLink}}.\n* An {{#crossLink \"Entity/viewBoundary:property\"}}Entity's viewBoundary{{/crossLink}} provides the **View**-space boundary of\nits {{#crossLink \"Geometry\"}}Geometry's{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntheir transformation by both the {{#crossLink \"Entity/transform:property\"}}Entity's Modelling transform{{/crossLink}} **and** {{#crossLink \"Camera/view:property\"}}Viewing transform{{/crossLink}}.\n* A {{#crossLink \"Model/worldBoundary:property\"}}Model's worldBoundary{{/crossLink}} provides the **World**-space boundary of all its {{#crossLink \"Entity\"}}Entities{{/crossLink}}\n\nThe diagram also shows an {{#crossLink \"Entity/canvasBoundary:property\"}}Entity's canvasBoundary{{/crossLink}}, which is a {{#crossLink \"Boundary2D\"}}{{/crossLink}} that provides the **Canvas**-space boundary of the {{#crossLink \"Geometry\"}}Geometry's{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntheir transformation by the {{#crossLink \"Entity/transform:property\"}}Entity's Modelling transform{{/crossLink}}, {{#crossLink \"Camera/view:property\"}}Viewing transform{{/crossLink}}\nand {{#crossLink \"Camera/project:property\"}}Projection transform{{/crossLink}}.\n\n<br>\n<img src=\"../../../assets/images/Boundary3D.png\"></img>\n\n## Examples\n\n* [Entity World-space boundary](../../examples/#boundaries_entity_world_aabb)\n* [Entity View-space boundary](../../examples/#boundaries_entity_view_aabb)\n* [Entity Canvas-space boundary](../../examples/#boundaries_entity_canvas_aabb)\n* [Flying camera to Entity World-space boundaries](../../examples/#animation_camera_flyTo_boundary)\n* [Model World-space boundary](../../examples/#boundaries_model_world_aabb)\n* [Following an Entity with a Camera](../../examples/#animation_camera_follow)\n* [Following an Entity with a Camera, keeping Entity fitted to view volume](../../examples/#animation_camera_follow_fitToView)\n\n## Usage\n\nIn the example below we'll get the World-space Boundary3D of an {{#crossLink \"Entity\"}}{{/crossLink}}, subscribe to updates on the Boundary3D,\nthen animate the {{#crossLink \"Entity\"}}Entity's{{/crossLink}} modelling transform, which gives our callback a running update\nof the moving Boundary3D extents.\n\n```` javascript\n// Entity With a Geometry and Transform\n\nvar entity = new xeogl.Entity({\n       geometry: new xeogl.BoxGeometry(),\n       transform: new xeogl.Translate({\n           xyz: [-5, 0, 0]\n       })\n });\n\n// Subscribe to updates to the Boundary3D\n\nvar worldBoundary = entity.worldBoundary;\n\nworldBoundary.on(\"updated\", function() {\n       obb = worldBoundary.obb;\n       aabb = worldBoundary.aabb;\n       center = worldBoundary.center;\n       //...\n   });\n\n// Animate the modelling transform;\n// on each tick, this will update the Boundary3D and fire our\n// callback, which enables us to track the changing boundary.\n\nvar x = 0;\n\nentity.scene.on(\"tick\", function() {\n   translate.xyz: [x, 0, 0];\n   x += 0.5;\n});\n````",
            "submodule": "boundaries",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Boundary3D within xeogl's default {{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Boundary3D.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "obb",
                            "description": "Optional initial 3D object-aligned bounding volume (OBB).",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "Optional initial 3D axis-aligned bounding volume (AABB).",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "center",
                            "description": "Optional initial 3D center.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "getDirty",
                            "description": "Optional callback to check if parent component has new OBB, positions or transform matrix.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getOBB",
                            "description": "Optional callback to get new OBB from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getMatrix",
                            "description": "Optional callback to get new transform matrix from parent.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getPositions",
                            "description": "Optional callback to get new positions from parent.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/camera/camera.js",
            "line": 1,
            "description": "A **Camera** defines viewing and projection transforms for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n## Overview\n\n*  A Camera is composed of a viewing and projection {{#crossLink \"Transform\"}}{{/crossLink}}.\n* The viewing transform is usually a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}. Having the viewing transform as a\nseparate component from the Camera allows us to switch the Camera between multiple, existing viewpoints by simply re-attaching it to\ndifferent viewing transform components (ie. {{#crossLink \"Lookat\"}}Lookats{{/crossLink}}).\n*  By default, each Camera has its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}} transform,\n(which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}) and default\n{{#crossLink \"Scene/project:property\"}}{{/crossLink}} transform (which is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}).\nYou would override those with your own transform components as necessary.\n\n<img src=\"../../../assets/images/Camera.png\"></img>\n\n## Examples\n\n* [Perspective Camera](../../examples/#transforms_camera_project_perspective)\n* [Orthographic Camera](../../examples/#transforms_camera_project_ortho)\n* [Automatically following an Entity with a Camera](../../examples/#animation_camera_follow)\n* [Animating a Camera along a path](../../examples/#animation_camera_path_interpolation)\n\n## Usage\n\nThe example below defines an {{#crossLink \"Entity\"}}{{/crossLink}} that has a Camera with\na {{#crossLink \"Lookat\"}}{{/crossLink}} view transform and a {{#crossLink \"Perspective\"}}{{/crossLink}} projection transform.\n\n```` javascript\nvar entity = new xeogl.Entity({\n    camera: new xeogl.Camera({\n        view: new xeogl.Lookat({\n            eye: [0, 0, 10],\n            look: [0, 0, 0],\n            up: [0, 1, 0]\n        }),\n        project: new xeogl.Perspective({\n            fov: 60,\n            near: 0.1,\n            far: 1000\n        })\n    }),\n    geometry: new xeogl.TorusGeometry()\n});\n\nentity.scene.on(\"tick\", function () {\n\n    var lookat = entity.camera.view;\n\n    lookat.rotateEyeY(0.5);\n    lookat.rotateEyeX(0.3);\n});\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Camera within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Camera by ID within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} later.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "view",
                            "description": "ID or instance of a view transform within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}} transform,\nwhich is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.",
                            "type": "String|xeogl.Transform",
                            "optional": true
                        },
                        {
                            "name": "project",
                            "description": "ID or instance of a projection transform\nwithin the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/project:property\"}}{{/crossLink}} transform,\nwhich is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.",
                            "type": "String|xeogl.Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/canvas/canvas.js",
            "line": 1,
            "description": "A **Canvas** manages a {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s HTML canvas and its WebGL context.\n\n## Overview\n\n* Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Canvas as a read-only property on itself.\n* When a {{#crossLink \"Scene\"}}Scene{{/crossLink}} is configured with the ID of\nan existing <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>, then\nthe Canvas will bind to that, otherwise the Canvas will automatically create its own.\n* A Canvas will fire a {{#crossLink \"Canvas/boundary:event\"}}{{/crossLink}} event whenever\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> resizes.\n* A Canvas is responsible for obtaining a WebGL context from\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>.\n* A Canvas also fires a {{#crossLink \"Canvas/webglContextLost:event\"}}{{/crossLink}} event when the WebGL context is\nlost, and a {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} when it is restored again.\n* The various components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will transparently recover on\nthe {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} event.\n\n<img src=\"../../../assets/images/Canvas.png\"></img>\n\nA Canvas also has\n\n* a {{#crossLink \"Spinner\"}}{{/crossLink}}, which shows a busy spinner when a {{#crossLink \"Model\"}}{{/crossLink}}\nis loading, or when directed by application logic, and\n\n## Examples\n\n* [Multiple canvases/scenes in a page](../../examples/#scenes_multipleScenes)\n* [Taking canvas snapshots](../../examples/#canvas_snapshot)\n* [Transparent canvas with background image](../../examples/#canvas_transparent)\n* [Canvas with multiple viewports](../../examples/#canvas_multipleViewports)\n\n## Usage\n\nIn the example below, we're creating a {{#crossLink \"Scene\"}}Scene{{/crossLink}} without specifying an HTML canvas element\nfor it. This causes the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s Canvas component to create its own default element\nwithin the page. Then we subscribe to various events fired by that Canvas component.\n\n```` javascript\nvar scene = new xeogl.Scene();\n\n// Get the Canvas off the Scene\n// Since we did not configure the Scene with the ID of a DOM canvas element,\n// the Canvas will create its own canvas element in the DOM\nvar canvas = scene.canvas;\n\n// Get the WebGL context off the Canvas\nvar gl = canvas.gl;\n\n// Subscribe to Canvas size updates\ncanvas.on(\"size\", function(e) {\n       var width = e.width;\n       var height = e.height;\n       var aspect = e.aspect;\n       //...\n    });\n\n// Subscribe to WebGL context loss events on the Canvas\ncanvas.on(\"webglContextLost\", function() {\n       //...\n    });\n\n// Subscribe to WebGL context restored events on the Canvas\ncanvas.on(\"webglContextRestored\", function(gl) {\n       var newContext = gl;\n       //...\n    });\n````\n\nWhen we want to bind the Canvas to an existing HTML canvas element, configure the\n{{#crossLink \"Scene\"}}{{/crossLink}} with the ID of the element, like this:\n\n```` javascript\n// Create a Scene, this time configuring it with the\n// ID of an existing DOM canvas element\nvar scene = new xeogl.Scene({\n         canvasId: \"myCanvas\"\n    });\n\n// ..and the rest of this example can be the same as the previous example.\n\n````\n\nThe {{#crossLink \"Scene\"}}{{/crossLink}} will attempt to get use WebGL 2, or fall back on WebGL 1\nif that's absent. If you just want WebGL 1, disable WebGL 2 like so:\n\n```` javascript\nvar scene = new xeogl.Scene({\n         canvasId: \"myCanvas\",\n         webgl2 : true\n    });\n\n// ..and the rest of this example can be the same as the previous examples.\n\n````",
            "submodule": "canvas",
            "static": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene",
                    "type": "Scene"
                }
            ],
            "extends": "Component"
        },
        "Spinner": {
            "name": "Spinner",
            "shortname": "Spinner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/canvas/spinner.js",
            "line": 1,
            "description": "A Spinner displays a spinner animation at the center of its {{#crossLink \"Canvas\"}}{{/crossLink}} while things are loading or otherwise busy.\n\n## Overview\n\n* Spinners are normally shown by {{#crossLink \"Model\"}}Models{{/crossLink}} while they are loading, however they may also\nbe shown by any application code that wants to indicate business.\n* By default, they are also shown by components that load assets, such as {{#crossLink \"Texture\"}}{{/crossLink}}. You\ncan disable that by flipping the Spinner's {{#crossLink \"Spinner/textures:property\"}}{{/crossLink}} property.\n* A Spinner component has a {{#crossLink \"Spinner/processes:property\"}}{{/crossLink}} count that indicates how many\nactive processes it currently represents. As a process starts, a process would increment {{#crossLink \"Spinner/processes:property\"}}{{/crossLink}}, then as it\ncompletes (or fails), would decrement it again.\n* A Spinner is only visible while {{#crossLink \"Spinner/processes:property\"}}{{/crossLink}} is greater than zero.\n\n<img src=\"../../../assets/images/Spinner.png\"></img>\n\n## Examples\n\n* [Loading glTF model with spinner](../../examples/#importing_gltf_gearbox)\n\n## Usage\n\n````javascript\nvar spinner = myScene.canvas.spinner;\n\n// Increment count of busy processes represented by the spinner;\n// assuming the count was zero, this now shows the spinner\nspinner.processes++;\n\n// Increment the count again, by some other process;\n// spinner already visible, now requires two decrements\n// before it becomes invisible again\nspinner.processes++;\n\n// Decrement the count; count still greater\n// than zero, so spinner remains visible\nspinner.process--;\n\n// Decrement the count; count now zero,\n// so spinner becomes invisible\nspinner.process--;\n````\n\nBy default, a Spinner shows while resources are loading for components like\n{{#crossLink \"Texture\"}}{{/crossLink}}. We can disable that like this:\n\n````javascript\n// Don't show while resources are loading for Textures etc.\nspinner.textures = false;\n````",
            "submodule": "canvas",
            "extends": "Component"
        },
        "Clip": {
            "name": "Clip",
            "shortname": "Clip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/clipping/clip.js",
            "line": 1,
            "description": "A **Clip** is an arbitrarily-aligned World-space clipping plane.\n\n<a href=\"../../examples/#clipping_userClipPlanes\"><img src=\"../../../assets/images/screenshots/Clips.png\"></img></a>\n\n## Overview\n\n* Used to slice portions off objects, to create cross-section views or reveal interiors.\n* Is contained within {{#crossLink \"Clips\"}}{{/crossLink}} components, which are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* Has a World-space position in {{#crossLink \"Clip/pos:property\"}}{{/crossLink}} and a orientation in {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.\n* Discards elements from the half-space in the direction of {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.\n* Can be be enabled or disabled via its {{#crossLink \"Clip/active:property\"}}{{/crossLink}} property.\n\n<img src=\"../../../assets/images/Clips.png\"></img>\n\n## Usage\n\nIn the example below, we have an {{#crossLink \"Entity\"}}{{/crossLink}} that's attached by a {{#crossLink \"Clips\"}}{{/crossLink}}\nthat contains two {{#crossLink \"Clip\"}}{{/crossLink}} components.  The first {{#crossLink \"Clip\"}}{{/crossLink}} is on the\npositive diagonal, while the second is on the negative diagonal. The {{#crossLink \"Entity\"}}Entity's{{/crossLink}} {{#crossLink \"Geometry\"}}{{/crossLink}}\nis a box, which will get two of its corners clipped off.\n\n````javascript\n// Create a set of Clip planes\nclips = new xeogl.Clip({\n   clips: [\n\n       // Clip plane on negative diagonal\n       new xeogl.Clip({\n           pos: [1.0, 1.0, 1.0],\n           dir: [-1.0, -1.0, -1.0],\n           active: true\n       }),\n\n       // Clip plane on positive diagonal\n       new xeogl.Clip({\n           pos: [-1.0, -1.0, -1.0],\n           dir: [1.0, 1.0, 1.0],\n           active: true\n       })\n   ]\n});\n\n// Create an Entity that's clipped by our Clip planes\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.BoxGeometry(),\n    clips: clips,\n    clippable: true // Enable clipping (default)\n});\n````\n\n### Switching clipping on and off for an Entity\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}}'s {{#crossLink \"Entity/clippable:property\"}}{{/crossLink}} property indicates\nwhether or not it is affected by Clip components.\n\nYou can switch it at any time, like this:\n\n```` javascript\n// Disable clipping for the Entity\nentity.clippable = false;\n\n// Enable clipping for the Entity\nentity.clippable = true;\n````",
            "submodule": "clipping",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clip in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Clip configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Clip by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clip.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Indicates whether or not this Clip is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "pos",
                            "description": "World-space position of the clipping plane.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "dir",
                            "description": "Vector perpendicular to the plane surface, indicating its orientation.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0 -1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Clips": {
            "name": "Clips",
            "shortname": "Clips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/clipping/clips.js",
            "line": 1,
            "description": "A **Clips** applies a set of {{#crossLink \"Clip\"}}{{/crossLink}} planes to attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nSee {{#crossLink \"Clip\"}}{{/crossLink}} for more info.",
            "submodule": "clipping",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clips in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clips.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "Array containing either IDs or instances of\n{{#crossLink \"Clip\"}}Clip{{/crossLink}} components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "Array(String)|Array(xeogl.Clip)",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Configs": {
            "name": "Configs",
            "shortname": "Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/configs/configs.js",
            "line": 1,
            "description": "A **Configs** holds configuration properties for the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n## Overview\n\n\n* Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Configs on itself as a read-only property.\n* Config property values are set on a Configs using its {{#crossLink \"Configs/set:method\"}}{{/crossLink}} method,\nand changes to properties may be subscribed to using {{#crossLink \"Component/on:method\"}}{{/crossLink}}.\n* You can define your own properties in a Configs, but take care not to clobber the native properties used by\nxeogl (see table below).\n\n\n<img src=\"../../../assets/images/Configs.png\"></img>\n\n## Native xeogl config properties\n\nDon't use the following names for your own Configs properties, because these are already used by xeogl:\n\n| Name  | Description  |\n|---|---|\n| TODO  | TODO  |\n| TODO  | TODO  |\n\n\n## Usage\n\nIn this example, we're subscribing to change events for a {{#crossLink \"Scene\"}}Scene's{{/crossLink}} \"foo\" configuration property, then updating that\nproperty, which fires a change event.\n\n````Javascript\nvar scene = new xeogl.Scene();\n\nvar configs = scene.configs;\n\n// Subscribe to change of a Configs property.\n// The subscriber is also immediately notified of the current value via the callback.\nconfigs.on(\"foo\", function(value) {\n   console.log(\"foo = \" + value);\n});\n\n// Create and set a Configs property, firing our change handler:\nconfigs.set(\"foo\", \"Hello!\");\n\n// Read the current value of a Configs property.\n// Normally we would asynchronously subscribe with #on though, to be sure that\n// we're getting the latest changes to the property.\nvar bar = configs.props[\"bar\"];\n````",
            "submodule": "configs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene - creates this component in the default scene when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Config values.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "CameraControl": {
            "name": "CameraControl",
            "shortname": "CameraControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/controls/cameraControl.js",
            "line": 1,
            "description": "A **CameraControl** pans, rotates and zooms a {{#crossLink \"Camera\"}}{{/crossLink}} with the mouse and keyboard,\nas well as switches it between preset left, right, anterior, posterior, superior and inferior views.\n\n## Overview\n\n* CameraControl requires that its pans both {{#crossLink \"Camera\"}}Camera{{/crossLink}} have a {{#crossLink \"Lookat\"}}{{/crossLink}} for its {{#crossLink \"Camera/view:property\"}}viewing transform{{/crossLink}}.\n* The table below shows what CameraControl does for various user input.\n<br>\n\n| Input | Result |\n|:--------:|:----:|\n| Mouse drag, arrow keys | orbits {{#crossLink \"Lookat/eye:property\"}}camera.view.eye{{/crossLink}} around {{#crossLink \"Lookat/look:property\"}}camera.view.look{{/crossLink}}|\n| Z,X keys | pans both {{#crossLink \"Lookat/eye:property\"}}camera.view.eye{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}camera.view.look{{/crossLink}} forwards and backwards  along the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}->{{#crossLink \"Lookat/look:property\"}}look{{/crossLink}} vector. |\n| A,D keys | pans both {{#crossLink \"Lookat/eye:property\"}}camera.view.eye{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}camera.view.look{{/crossLink}} sideways, along the vector perpendicular to {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}->{{#crossLink \"Lookat/look:property\"}}look{{/crossLink}} and {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}}->{{#crossLink \"Lookat/up:property\"}}up{{/crossLink}}. |\n| W,S keys | pans both {{#crossLink \"Lookat/eye:property\"}}camera.view.eye{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}camera.view.look{{/crossLink}} up and down, along the {{#crossLink \"Lookat/up:property\"}}up{{/crossLink}} vector. |\n| 1,2,3,4,5,6 keys | Align {{#crossLink \"Lookat\"}}camera.view{{/crossLink}} to look at center of entire {{#crossLink \"Scene\"}}{{/crossLink}} from vantage points on the -X, +X, -Z, +Z, -Y and +Y World-space axis. |\n| Click on {{#crossLink \"Entity\"}}{{/crossLink}} | Flies {{#crossLink \"Lookat\"}}camera.view{{/crossLink}} to look at {{#crossLink \"Entity\"}}{{/crossLink}}, stops when filling the canvas. |\n| Mouse wheel or '+' and '-' keys | moves {{#crossLink \"Lookat/eye:property\"}}camera.view.eye{{/crossLink}} towards and away from {{#crossLink \"Lookat/look:property\"}}camera.view.look{{/crossLink}}. |\n\n## Examples\n\n* [CameraControl example](../../examples/#interaction_camera_CameraControl)\n\n## Usage\n\n````Javascript\nvar camera = new xeogl.Camera({\n\n    view: new xeogl.Lookat({\n        eye: [0, 0, 10],\n        look: [0, 0, 0],\n        up: [0, 1, 0]\n    }),\n\n    project: new xeogl.Perspective({\n        fov: 60,\n        near: 0.1,\n        far: 1000\n    })\n});\n\nvar entity = new xeogl.Entity({\n    camera: camera,\n    geometry: new xeogl.BoxGeometry()\n});\n\nvar cameraControl = new xeogl.CameraControl({\n    camera: camera,\n\n    // \"First person\" mode rotates look about eye.\n    // By default however, we orbit eye about look.\n    firstPerson: false\n});\n\n````",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraControl.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraControl. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this CameraControl is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "firstPerson",
                    "description": "Whether or not this CameraControl is in \"first person\" mode.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "extends": "Component"
        },
        "CameraController": {
            "name": "CameraController",
            "shortname": "CameraController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/controls/cameraController.js",
            "line": 1,
            "description": "A **CameraController** is the base class for components that control Cameras.",
            "submodule": "interaction",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this CameraController in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraController.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} for this CameraController.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraController. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this CameraController is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "InputControl": {
            "name": "InputControl",
            "shortname": "InputControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/controls/inputControl.js",
            "line": 1,
            "description": "* \"hoverEnter\" - Hover enters a new object\n * \"hover\" -  Hover continues over an object - fired continuously as mouse moves over an object\n * \"hoverSurface\" - Hover continues over an object surface - fired continuously as mouse moves over an object\n * \"hoverLeave\"  - Hover has left the last object we were hovering over\n * \"hoverOff\" - Hover continues over empty space - fired continuously as mouse moves over nothing\n * \"pickedObject\" - Clicked or tapped object\n * \"pickedSurface\" -  Clicked or tapped object, with event containing surface intersection details\n * \"doublePickedObject\" - Double-clicked or double-tapped object\n * \"doublePickedSurface\" - Double-clicked or double-tapped object, with event containing surface intersection details\n * \"pickedNothing\" - Clicked or tapped, but not on any objects\n * \"doublePickedNothing\" - Double-clicked or double-tapped, but not on any objects\nInputControl only fires \"hover\" events when the mouse is up.\nFor efficiency, InputControl only does surface intersection picking when you subscribe to \"doublePickedObject\" and\n \"doublePickedSurface\" events. Therefore, only subscribe to those when you're OK with the overhead incurred by the\n surface intersection tests.",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this InputControl.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\n Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this InputControl. Defaults to the\n parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "firstPerson",
                    "description": "Whether or not this InputControl is in \"first person\" mode.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "walking",
                    "description": "Whether or not this InputControl is in \"walking\" mode.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "doublePickFlyTo",
                    "description": "Whether to fly the camera to each {{#crossLink \"Entity\"}}{{/crossLink}} that's double-clicked.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "extends": "Component"
        },
        "Outline": {
            "name": "Outline",
            "shortname": "Outline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/emphasis/outline.js",
            "line": 1,
            "description": "A **Outline** renders an outline around attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Usage\n\n````javascript\n\nvar outline = new xeogl.Outline({\n   thickness: 15,      // Default\n   color: [1,0,0]      // Default\n});\n\nnew xeogl.Entity({\n    geometry: new xeogl.TorusGeometry(),\n    outline: outline,\n    outlined: false  // Hide the outline (default)\n});\n\nnew xeogl.Entity({\n    geometry: new xeogl.BoxGeometry(),\n    outline: outline,\n    outlined: true  // Show the outline\n});\n````",
            "submodule": "emphasis",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Outline within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Outline configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Outline.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "thickness",
                            "description": "Thickness of the outline in pixels.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "15"
                        },
                        {
                            "name": "color",
                            "description": "The RGB outline color.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1,1,0]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "XRay": {
            "name": "XRay",
            "shortname": "XRay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/emphasis/xray.js",
            "line": 1,
            "description": "A **XRay** renders attached an X-ray view of attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Usage\n\n````javascript\n\nvar xray = new xeogl.XRay({\n   thickness: 15,      // Default\n   color: [1,0,0]      // Default\n});\n\nnew xeogl.Entity({\n    geometry: new xeogl.TorusGeometry(),\n    xray: xray,\n    xrayed: false\n});\n\nnew xeogl.Entity({\n    geometry: new xeogl.BoxGeometry(),\n    xray: xray,\n    xrayed: true\n});\n````",
            "submodule": "emphasis",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this XRay within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "XRay configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this XRay.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "thickness",
                            "description": "Thickness of the XRay in pixels.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "15"
                        },
                        {
                            "name": "color",
                            "description": "The RGB XRay color.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1,1,0]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/entities/entity.js",
            "line": 1,
            "description": "An **Entity** is an object within a xeogl {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n## Overview\n\nSee the {{#crossLink \"Scene\"}}Scene{{/crossLink}} class documentation for more information on Entities.\n\n<img src=\"../../../assets/images/Entity.png\"></img>\n\n## Examples\n\n* [Entity with TorusGeometry and MetallicMaterial](../../examples/#entities_examples_metallicTorus)\n\n## Boundaries\n\n#### Local-space\n\nA Entity provides its Local-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}}.\n\n```` javascript\nvar scene = new xeogl.Scene();\n\nvar geometry = new xeogl.Geometry(myScene, {\n     //...\n});\n\nvar entity = new xeogl.Entity(myScene, {\n      geometry: myGeometry,\n      transform: translate\n});\n\n// Get the Local-space Boundary3D\nvar localBoundary = entity.localBoundary;\n\n// Get Local-space entity-aligned bounding box (OBB),\n// which is an array of eight vertices that describes\n// the box that is aligned with the Entity's Geometry\nvar obb = localBoundary.obb;\n\n// Get the Local-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = localBoundary.aabb;\n\n// get the Local-space center of the Entity:\nvar center = localBoundary.center;\n````\n\n#### World-space\n\nA Entity provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} after\ntransformation by the Entity's {{#crossLink \"Entity/transform:property\"}}Modelling transform{{/crossLink}}.\n\n```` javascript\nvar entity = new xeogl.Entity({\n   geometry: new xeogl.TorusGeometry(),\n   transform: new xeogl.Translate({\n       xyz: [-5, 0, 0]\n   })\n});\n\n// Get the World-space boundary\nvar worldBoundary = entity.worldBoundary;\n\n// Get the boundary as an entity-aligned bounding box (OBB), which is a flattened array\nof eight 3D vertices that describes the box that is aligned with the Entity\nvar obb = worldBoundary.obb;\n\n// Get the boundary as an axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = worldBoundary.aabb;\n\n````\n\n#### View-space\n\nA Entity also provides its View-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry/positions:property\"}}Geometry positions{{/crossLink}} after\ntheir transformation by the {{#crossLink \"Camera/view:property\"}}View{{/crossLink}} and\n{{#crossLink \"Entity/transform:property\"}}Modelling{{/crossLink}} transforms.\n\n```` javascript\n// Get the View-space Boundary3D\nvar viewBoundary = entity.viewBoundary;\n\n// Get View-space entity-aligned bounding box (OBB),\n// which is an array of eight vertices that describes\n// the box that is aligned with the Entity\nvar obb = viewBoundary.obb;\n\n// Get the View-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = viewBoundary.aabb;\n\n// get the View-space center of the Entity:\nvar center = viewBoundary.center;\n````\n\n#### View-space\n\nA Entity also provides its Canvas-space boundary as a {{#crossLink \"Boundary2D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry/positions:property\"}}Geometry positions{{/crossLink}} after\ntheir transformation by the {{#crossLink \"Entity/transform:property\"}}Modelling{{/crossLink}},\n{{#crossLink \"Camera/view:property\"}}View{{/crossLink}} and {{#crossLink \"Camera/project:property\"}}Projection{{/crossLink}} transforms.\n\n```` javascript\n// Get the Canvas-space Boundary2D\nvar canvasBoundary = entity.canvasBoundary;\n\n// Get the Canvas-space axis-aligned bounding box (ABB),\n// which contains the extents of the boundary on each axis\nvar aabb = canvasBoundary.aabb;\n\n// get the Canvas-space center of the Entity:\nvar center = canvasBoundary.center;\n````\n\n## Skyboxes\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} has a {{#crossLink \"Entity/stationary:property\"}}{{/crossLink}} property\nthat will cause it to never translate with respect to the viewpoint, while still rotationg, as if always far away.\n\nThis is useful for using Entities as skyboxes, like so:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.BoxGeometry({\n        xSize: 1000,\n        ySize: 1000,\n        zSize: 1000\n    }),\n\n    material: new xeogl.PhongMaterial({\n        diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n        })\n    }),\n\n    stationary: true // Locks position with respect to viewpoint\n});\n````\n\n## Billboarding\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} has a {{#crossLink \"Entity/billboard:property\"}}{{/crossLink}} property\nthat can make it behave as a billboard.\n\nTwo billboard types are supported:\n\n* **Spherical** billboards are free to rotate their {{#crossLink \"Entity\"}}Entities{{/crossLink}} in any direction and always face the {{#crossLink \"Camera\"}}{{/crossLink}} perfectly.\n* **Cylindrical** billboards rotate their {{#crossLink \"Entity\"}}Entities{{/crossLink}} towards the {{#crossLink \"Camera\"}}{{/crossLink}}, but only about the Y-axis.\n\nNote that {{#crossLink \"Scale\"}}{{/crossLink}} transformations to have no effect on billboarded {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe example below shows a box that remains rotated directly towards the viewpoint, using spherical billboarding:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.BoxGeometry(),\n\n    material: new xeogl.PhongMaterial({\n        diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n        })\n    }),\n\n    billboard: \"spherical\"\n});\n````\n\n#### Examples\n\n* [Spherical billboards](../../examples/#transforms_billboard_spherical)\n* [Cylindrical billboards](../../examples/#transforms_billboard_cylindrical)\n* [Clouds using billboards](../../examples/#transforms_billboard_spherical_clouds)",
            "submodule": "entities",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Entity within xeogl's default {{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Entity.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to attach to this Entity.  Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "ID or instance of a {{#crossLink \"Clips\"}}Clips{{/crossLink}} to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}}.",
                            "type": "String|Clips",
                            "optional": true
                        },
                        {
                            "name": "geometry",
                            "description": "ID or instance of a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/geometry:property\"}}geometry{{/crossLink}}, which is a 2x2x2 box.",
                            "type": "String|Geometry",
                            "optional": true
                        },
                        {
                            "name": "lights",
                            "description": "ID or instance of a {{#crossLink \"Lights\"}}Lights{{/crossLink}} to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}}.",
                            "type": "String|Lights",
                            "optional": true
                        },
                        {
                            "name": "material",
                            "description": "ID or instance of a {{#crossLink \"Material\"}}Material{{/crossLink}} to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/material:property\"}}material{{/crossLink}}.",
                            "type": "String|Material",
                            "optional": true
                        },
                        {
                            "name": "morphTargets",
                            "description": "ID or instance of a {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault instance, {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}}.",
                            "type": "String|MorphTargets",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "ID or instance of a modelling transform to attach to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}} (which is an identity matrix which performs no transformation).",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "viewport",
                            "description": "ID or instance of a {{#crossLink \"Viewport\"}}{{/crossLink}} attached to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/viewport:property\"}}{{/crossLink}}, which is automatically resizes to the canvas.",
                            "type": "String|Viewport",
                            "optional": true
                        },
                        {
                            "name": "outline",
                            "description": "ID or instance of an {{#crossLink \"Outline\"}}{{/crossLink}} attached to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/outline:property\"}}{{/crossLink}}.",
                            "type": "String|Outline",
                            "optional": true
                        },
                        {
                            "name": "xray",
                            "description": "ID or instance of a {{#crossLink \"XRay\"}}{{/crossLink}} attached to this Entity. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/xray:property\"}}{{/crossLink}}.",
                            "type": "String|XRay",
                            "optional": true
                        },
                        {
                            "name": "visible",
                            "description": "Indicates if this Entity is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "culled",
                            "description": "Indicates if this Entity is culled from view.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "pickable",
                            "description": "Indicates if this Entity is pickable.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "clippable",
                            "description": "Indicates if this Entity is clippable by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "xrayed",
                            "description": "Whether to render this Entity as X-rayed, as configured by the Entity's {{#crossLink \"XRay\"}}{{/crossLink}} component.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "collidable",
                            "description": "Whether this Entity is included in boundary calculations.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "castShadow",
                            "description": "Whether this Entity casts shadows.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "receiveShadow",
                            "description": "Whether this Entity receives shadows.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "outlined",
                            "description": "Whether an outline is rendered around this entity, as configured by the Entity's {{#crossLink \"Outline\"}}{{/crossLink}} component",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "layer",
                            "description": "Indicates this Entity's rendering priority, typically used for transparency sorting,",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "stationary",
                            "description": "Disables the effect of {{#crossLink \"Lookat\"}}view transform{{/crossLink}} translations for this Entity. This is useful for skybox Entities.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "billboard",
                            "description": "Specifies the billboarding behaviour for this Entity. Options are \"none\", \"spherical\" and \"cylindrical\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"none\""
                        },
                        {
                            "name": "loading",
                            "description": "Flag which indicates that this Entity is freshly loaded. This will increment the\n{{#crossLink \"Spinner/processes:property\"}}Spinner processes{{/crossLink}} count, and then when this Entity is first\nrendered, will decrement the count again.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "AABBGeometry": {
            "name": "AABBGeometry",
            "shortname": "AABBGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/aabbGeometry.js",
            "line": 1,
            "description": "An **AABBGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that shows the extents of a World-space axis-aligned bounding box (AABB).\n\n<a href=\"../../examples/#geometry_primitives_AABBGeometry\"><img src=\"http://i.giphy.com/3o6ZsSVy0NKXZ1vDSo.gif\"></img></a>\n\n## Overview\n\n* A World-space AABB is an axis-aligned box given as a six-element array containing the min/max extents of an axis-aligned volume, ie. ````[xmin,ymin,zmin,xmax,ymax,zmax]````.\n* Set a AABBGeometry's {{#crossLink \"AABBGeometry/aabb:property\"}}{{/crossLink}} property to an AABB to fix the AABBGeometry to those extents, or\n* set a AABBGeometry's {{#crossLink \"AABBGeometry/boundary:property\"}}{{/crossLink}} property to a {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nto make it dynamically fit itself to changes in the {{#crossLink \"Boundary3D\"}}{{/crossLink}}'s {{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}} extents.\n\n## Examples\n\n* [Rendering an AABBGeometry](../../examples/#geometry_primitives_AABBGeometry)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a AABBGeometry that shows the extents of the\nWorld-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} of another {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\n// First Entity with a TorusGeometry\nvar torus = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry()\n});\n\n// Second Entity with an AABBGeometry that shows a wireframe box\n// for the World-space boundary of the first Entity\n\nvar boundaryHelper = new xeogl.Entity({\n\n    geometry: new xeogl.AABBGeometry({\n        boundary: torus.worldBoundary\n    }),\n\n    material: new xeogl.PhongMaterial({\n        diffuse: [0.5, 1.0, 0.5],\n        emissive: [0.5, 1.0, 0.5],\n        lineWidth:2\n    })\n});\n````\n\nNow whenever our torus {{#crossLink \"Entity\"}}{{/crossLink}} changes shape or position, our AABBGeometry will automatically\nupdate to stay fitted to it.\n\nWe could also directly configure the AABBGeometry with\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}}'s {{#crossLink \"Boundary3D/aabb:property\"}}AABB{{/crossLink}}:\n\n````javascript\nvar boundaryHelper2 = new xeogl.Entity({\n\n    geometry: new xeogl.AABBGeometry({\n        boundary: torus.worldBoundary.aabb\n    }),\n\n    material: new xeogl.PhongMaterial({\n        diffuse: [0.5, 1.0, 0.5],\n        emissive: [0.5, 1.0, 0.5],\n        lineWidth:2\n    })\n});\n````\nNote that, without the reference to a {{#crossLink \"Boundary3D\"}}{{/crossLink}}, our second AABBGeometry is fixed to the\ngiven AABB and will not automatically update whenever our torus {{#crossLink \"Entity\"}}{{/crossLink}} changes shape or position.",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this AABBGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AABBGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "boundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
                            "type": "Number|String|Boundary3D",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "An axis-aligned box (AABB) in a six-element Float32Array\ncontaining the min/max extents of the axis-aligned volume, ie. ````(xmin,ymin,zmin,xmax,ymax,zmax)````.",
                            "type": "Float32Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "BoxGeometry": {
            "name": "BoxGeometry",
            "shortname": "BoxGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/boxGeometry.js",
            "line": 1,
            "description": "A **BoxGeometry** is a parameterized {{#crossLink \"Geometry\"}}{{/crossLink}} that defines a box-shaped mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_box\"><img src=\"../../assets/images/screenshots/BoxGeometry.png\"></img></a>\n\n## Overview\n\n* Dynamically modify a BoxGeometry's dimensions at any time by updating its {{#crossLink \"BoxGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"BoxGeometry/xSize:property\"}}{{/crossLink}}, {{#crossLink \"BoxGeometry/ySize:property\"}}{{/crossLink}} and {{#crossLink \"BoxGeometry/zSize:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n\n## Examples\n\n* [Textured BoxGeometry](../../examples/#geometry_primitives_box)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a BoxGeometry and a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} with\ndiffuse {{#crossLink \"Texture\"}}{{/crossLink}}:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.BoxGeometry({\n       center: [0,0,0],\n       xSize: 1,  // Half-size on each axis; BoxGeometry is actually two units big on each side.\n       ySize: 1,\n       zSize: 1\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this BoxGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values for a BoxGeometry are 'points', 'lines' and 'triangles'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "xSize",
                            "description": "Half-size on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "ySize",
                            "description": "Half-size on the Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "zSize",
                            "description": "Half-size on the Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "CylinderGeometry": {
            "name": "CylinderGeometry",
            "shortname": "CylinderGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/cylinderGeometry.js",
            "line": 1,
            "description": "A **CylinderGeometry** is a parameterized {{#crossLink \"Geometry\"}}{{/crossLink}} that defines a cylinder-shaped mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_cylinder\"><img src=\"../../assets/images/screenshots/CylinderGeometry.png\"></img></a>\n\n## Overview\n\n* Dynamically modify a CylinderGeometry's shape at any time by updating its {{#crossLink \"CylinderGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"CylinderGeometry/radiusTop:property\"}}{{/crossLink}}, {{#crossLink \"CylinderGeometry/radiusBottom:property\"}}{{/crossLink}}, {{#crossLink \"CylinderGeometry/height:property\"}}{{/crossLink}},\n{{#crossLink \"CylinderGeometry/radialSegments:property\"}}{{/crossLink}}, {{#crossLink \"CylinderGeometry/heightSegments:property\"}}{{/crossLink}} and\n{{#crossLink \"CylinderGeometry/openEnded:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n\n## Examples\n\n* [Textured CylinderGeometry](../../examples/#geometry_primitives_cylinder)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a CylinderGeometry and a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} with\ndiffuse {{#crossLink \"Texture\"}}{{/crossLink}}:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.CylinderGeometry({\n        center: [0,0,0],\n        radiusTop: 2.0,\n        radiusBottom: 2.0,\n        height: 5.0,\n        radialSegments: 20,\n        heightSegments: 1,\n        openEnded: false\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this CylinderGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CylinderGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values for a CylinderGeometry are 'points', 'lines' and 'triangles'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position of the CylinderGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "radiusTop",
                            "description": "Radius of top.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "radiusBottom",
                            "description": "Radius of bottom.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "height",
                            "description": "Height.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "radialSegments",
                            "description": "Number of segments around the CylinderGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60"
                        },
                        {
                            "name": "heightSegments",
                            "description": "Number of vertical segments.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "openEnded",
                            "description": "Whether or not the CylinderGeometry has solid caps on the ends.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/geometry.js",
            "line": 1,
            "description": "A **Geometry** defines a mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_triangles_texture\"><img src=\"../../assets/images/screenshots/BoxGeometry.png\"></img></a>\n\n## Overview\n\n* Like everything in xeogl, all properties on a Geometry are dynamically editable.\n* Set a Geometry's {{#crossLink \"Geometry/autoNormals:property\"}}{{/crossLink}} ````true```` to make the Geometry automatically generate it's vertex normal vectors from its {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} and {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}.\n* When no shape is specified, a Geometry will be a 2x2x2 box by default.\n* A {{#crossLink \"Scene\"}}{{/crossLink}} provides a 2x2x2 box for {{#crossLink \"Entity\"}}Entities{{/crossLink}}\nby default when they are not configured with a Geometry.\n* A Geometry provides its local-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n<img src=\"../../../assets/images/Geometry.png\"></img>\n\n## Examples\n\n* [Simple triangle mesh](../../examples/#geometry_triangles)\n* [Triangle mesh with diffuse texture](../../examples/#geometry_triangles_texture)\n* [Triangle mesh with vertex colors](../../examples/#geometry_triangles_vertexColors)\n* [Wireframe box](../../examples/#geometry_lines)\n* [Dynamically modifying a TorusGeometry](../../examples/#geometry_modifying)\n\n## Usage\n\n### Default shape</a>\n\nIf you create a Geometry with no specified shape, it will default to a box-shaped triangle mesh with dimensions 2x2x2:\n\n```` javascript\nvar entity = new xeogl.Entity({\n   geometry: new xeogl.Geometry() // 2x2x2 box\n});\n````\n\n### Scene's default Geometry\n\nIf you create an {{#crossLink \"Entity\"}}{{/crossLink}} with no Geometry, it will inherit its {{#crossLink \"Scene\"}}Scene's{{/crossLink}}\ndefault {{#crossLink \"Scene/geometry:property\"}}{{/crossLink}}, which is a 2x2x2 triangle mesh box:\n\n```` javascript\nvar entity2 = new xeogl.Entity();\n````\n\n### Sharing among Entities\n\nxeogl components can be shared among multiple {{#crossLink \"Entity\"}}Entities{{/crossLink}}. For components like\nGeometry and {{#crossLink \"Texture\"}}{{/crossLink}}, this can provide significant memory\nand performance savings. To render the example below, xeogl will issue two draw WebGL calls, one for\neach {{#crossLink \"Entity\"}}{{/crossLink}}, but will only need to bind the Geometry's arrays once on WebGL.\n\n```` javascript\nvar boxGeometry = new xeogl.BoxGeometry();\n\nnew xeogl.Entity({\n   geometry: boxGeometry\n});\n\nnew xeogl.Entity({\n   geometry: boxGeometry,\n   transform:  new xeogl.Translate({\n       xyz: [5, 0, 0\n   })\n});\n````\n\n### Creating a custom Geometry\n\nLet's create an {{#crossLink \"Entity\"}}{{/crossLink}} with a custom Geometry that's a quad-shaped triangle mesh:\n\n```` javascript\nvar quadGeometry = new xeogl.Geometry({\n\n       // Supported primitives are 'points', 'lines', 'line-loop', 'line-strip', 'triangles',\n       // 'triangle-strip' and 'triangle-fan'\n       primitive: \"triangles\",\n\n       // Vertex positions\n       positions : [\n           -1.0, -1.0, 1.0,  // 0\n            1.0, -1.0, 1.0,  // 1\n            1.0,  1.0, 1.0,  // 2\n           -1.0,  1.0, 1.0   // 3\n       ],\n\n       // Vertex colors\n       colors: [\n           1.0,  1.0,  1.0,  1.0, // 0\n           1.0,  0.0,  0.0,  1.0, // 1\n           0.0,  1.0,  0.0,  1.0, // 2\n           0.0,  0.0,  1.0,  1.0  // 3\n       ],\n\n       // Vertex normals\n       normals: [\n           0, 0, 1, // 0\n           0, 0, 1, // 1\n           0, 0, 1, // 2\n           0, 0, 1  // 3\n       ],\n\n       // UV coordinates\n       uv: [\n           0, 0, // 0\n           1, 0, // 1\n           1, 1, // 2\n           1, 0  // 3\n       ],\n\n       // Triangle indices\n       indices: [\n           0,  1,  2,\n           0,  2,  3\n       ]\n});\n\nvar quadEntity = new xeogl.Entity({\n   geometry: quadGeometry\n});\n````\n## Editing Geometry\n\nRecall that everything in xeogl is dynamically editable. Let's update the\n{{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} to reverse the direction of the triangles:\n\n````javascript\ncustomGeometry.indices = [ 2, 1, 0, 3, 2, 0 ];\n````\n\nNow let's make it wireframe by changing its primitive type from ````triangles```` to ````lines````:\n\n````javascript\nquadGeometry.primitive = \"lines\";\n````\n\n````javascript\n````\n\n### Getting the Local-space boundary\n\nWe can get a Geometry's Local-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} like so:\n\n````javascript\nvar localBoundary = quadGeometry.localBoundary;\n\nlocalBoundary.on(\"updated\", function() {\n\n       obb = localBoundary.obb;\n       aabb = localBoundary.aabb;\n       center = localBoundary.center;\n\n       //...\n   });\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Geometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "usage",
                            "description": "The Geometry's usage type. Accepted values are 'static', 'dynamic' and 'stream'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"statis\""
                        },
                        {
                            "name": "positions",
                            "description": "Positions array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "normals",
                            "description": "Vertex normal vectors array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv",
                            "description": "UVs array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "colors",
                            "description": "Vertex colors.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "tangents",
                            "description": "Vertex tangents.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "indices",
                            "description": "Indices array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "autoNormals",
                            "description": "Set true to automatically generate normal vectors from the positions and indices, if those are supplied.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "OBBGeometry": {
            "name": "OBBGeometry",
            "shortname": "OBBGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/obbGeometry.js",
            "line": 1,
            "description": "An **OBBGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that shows the extents of a World-space entity-oriented bounding box (OBB).\n\n<a href=\"../../examples/#geometry_primitives_OBBGeometry\"><img src=\"http://i.giphy.com/3o6ZsSVy0NKXZ1vDSo.gif\"></img></a>\n\n## Overview\n\n* A World-space OBB a bounding box that's oriented to its contents, given as a 32-element array containing the homogeneous coordinates for the eight corner vertices, ie. each having elements [x,y,z,w].\n* Set an OBBGeometry's {{#crossLink \"OBBGeometry/obb:property\"}}{{/crossLink}} property to an OBB to fix it to those extents, or\n* Set an OBBGeometry's {{#crossLink \"OBBGeometry/boundary:property\"}}{{/crossLink}} property to a {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nto make it dynamically fit itself to changes in the {{#crossLink \"Boundary3D\"}}{{/crossLink}}'s {{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}} extents.\n\n## Examples\n\n* [Rendering an OBBGeometry](../../examples/#geometry_primitives_OBBGeometry)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a OBBGeometry that shows the extents of the\nWorld-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} of another {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\n// First Entity with a TorusGeometry\nvar torus = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry()\n});\n\n// Second Entity with an OBBGeometry that shows a wireframe box\n// for the World-space boundary of the first Entity\n\nvar boundaryHelper = new xeogl.Entity({\n\n    geometry: new xeogl.OBBGeometry({\n        boundary: torus.worldBoundary\n    }),\n\n    material: new xeogl.PhongMaterial({\n        diffuse: [0.5, 1.0, 0.5],\n        emissive: [0.5, 1.0, 0.5],\n        lineWidth:2\n    })\n});\n````\n\nNow whenever our torus {{#crossLink \"Entity\"}}{{/crossLink}} changes shape or position, our OBBGeometry will automatically\nupdate to stay fitted to it.\n\nWe could also directly configure the OBBGeometry with\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}}'s {{#crossLink \"Boundary3D/obb:property\"}}OBB{{/crossLink}}:\n\n````javascript\nvar boundaryHelper2 = new xeogl.Entity({\n\n    geometry: new xeogl.OBBGeometry({\n        boundary: torus.worldBoundary.obb\n    }),\n\n    material: new xeogl.PhongMaterial({\n        diffuse: [0.5, 1.0, 0.5],\n        emissive: [0.5, 1.0, 0.5],\n        lineWidth:2\n    })\n});\n````\nNote that, without the reference to a {{#crossLink \"Boundary3D\"}}{{/crossLink}}, our second OBBGeometry is fixed to the\ngiven OBB and will not automatically update whenever our torus {{#crossLink \"Entity\"}}{{/crossLink}} changes shape or position.",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this OBBGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this OBBGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "boundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
                            "type": "Number|String|Boundary3D",
                            "optional": true
                        },
                        {
                            "name": "obb",
                            "description": "An entity-oriented box (OBB) in a 32-element Float32Array\ncontaining homogeneous coordinates for the eight corner vertices, ie. each having elements (x,y,z,w).",
                            "type": "Float32Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "PathGeometry": {
            "name": "PathGeometry",
            "shortname": "PathGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/pathGeometry.js",
            "line": 1,
            "description": "A **PathGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that is defined by a {{#crossLink \"Curve\"}}{{/crossLink}}.\n## Usage\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a PathGeometry, a {{#crossLink \"Path\"}}{{/crossLink}} and\n a {{#crossLink \"PhongMaterial\"}}{{/crossLink}}:\n````javascript\n new xeogl.Entity({\n    geometry: new xeogl.PathGeometry({\n       divisions: 10,\n       path: new xeogl.Path({\n           // Subpaths\n           curves: [\n                new xeogl.CubicBezierCurve({\n                    v0: [-10, 0, 0],\n                    v1: [-5, 15, 0],\n                    v2: [20, 15, 0],\n                    v3: [10, 0, 0]\n                }),\n                new xeogl.QuadraticBezierCurve({\n                    v0: [10, 0, 0],\n                    v1: [30, 15, 0],\n                    v2: [20, 0, 0]\n                }),\n                new xeogl.SplineCurve({\n                    points: [\n                        [20, 0, 0],\n                        [-5, 15, 0],\n                        [20, 15, 0],\n                        [10, 0, 0]\n                    ]\n                })\n            ]\n        })\n     }),\n    material: new xeogl.PhongMaterial(\n        diffuse: [1,0,0]\n     })\n });\n ````",
            "submodule": "geometry",
            "extends": "Geometry"
        },
        "PlaneGeometry": {
            "name": "PlaneGeometry",
            "shortname": "PlaneGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/planeGeometry.js",
            "line": 1,
            "description": "A **PlaneGeometry** is a parameterized {{#crossLink \"Geometry\"}}{{/crossLink}} that defines a plane-shaped mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_plane\"><img src=\"../../assets/images/screenshots/PlaneGeometry.png\"></img></a>\n\n## Overview\n\n* A PlaneGeometry lies in the X-Z plane.\n* Dynamically modify it's shape at any time by updating its {{#crossLink \"PlaneGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"PlaneGeometry/xSize:property\"}}{{/crossLink}}, {{#crossLink \"PlaneGeometry/zSize:property\"}}{{/crossLink}}, {{#crossLink \"PlaneGeometry/xSegments:property\"}}{{/crossLink}} and\n{{#crossLink \"PlaneGeometry/zSegments:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n\n## Examples\n\n* [Textured PlaneGeometry](../../examples/#geometry_primitives_plane)\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a PlaneGeometry and a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} with\ndiffuse {{#crossLink \"Texture\"}}{{/crossLink}}:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.PlaneGeometry({\n        primitive: \"triangles\",\n        center: [0,0,0],\n        xSize: 2,\n        zSize: 2,\n        xSegments: 10,\n        zSegments: 10,\n        lod: 1.0 // Default\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this PlaneGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PlaneGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values for a PlaneGeometry are 'points', 'lines' and 'triangles'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position of the PlaneGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "xSize",
                            "description": "Dimension on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "zSize",
                            "description": "Dimension on the Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "xSegments",
                            "description": "Number of segments on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "zSegments",
                            "description": "Number of segments on the Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "SphereGeometry": {
            "name": "SphereGeometry",
            "shortname": "SphereGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/sphereGeometry.js",
            "line": 1,
            "description": "A **SphereGeometry** is a parameterized {{#crossLink \"Geometry\"}}{{/crossLink}} that defines a sphere-shaped mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_sphere\"><img src=\"../../assets/images/screenshots/SphereGeometry.png\"></img></a>\n\n## Overview\n\n* Dynamically modify a SphereGeometry's shape at any time by updating its {{#crossLink \"SphereGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"SphereGeometry/radius:property\"}}{{/crossLink}}, {{#crossLink \"SphereGeometry/heightSegments:property\"}}{{/crossLink}} and\n{{#crossLink \"SphereGeometry/widthSegments:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n\n## Examples\n\n\n* [Textured SphereGeometry](../../examples/#geometry_primitives_sphere)\n\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a SphereGeometry and a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} with\ndiffuse {{#crossLink \"Texture\"}}{{/crossLink}}:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.SphereGeometry({\n        center: [0,0,0],\n        radius: 1.5,\n        heightSegments: 60,\n        widthSegments: 60\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this SphereGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SphereGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values for a SphereGeometry are 'points', 'lines' and 'triangles'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position of the SphereGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "radius",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "heightSegments",
                            "description": "The SphereGeometry's number of latitudinal bands.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "24"
                        },
                        {
                            "name": "widthSegments",
                            "description": "The SphereGeometry's number of longitudinal bands.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "18"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "TorusGeometry": {
            "name": "TorusGeometry",
            "shortname": "TorusGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/geometry/torusGeometry.js",
            "line": 1,
            "description": "A **TorusGeometry** is a parameterized {{#crossLink \"Geometry\"}}{{/crossLink}} that defines a torus-shaped mesh for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_torus\"><img src=\"../../assets/images/screenshots/TorusGeometry.png\"></img></a>\n\n## Overview\n\n* Dynamically modify a TorusGeometry's shape at any time by updating its {{#crossLink \"TorusGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"TorusGeometry/radius:property\"}}{{/crossLink}}, {{#crossLink \"TorusGeometry/tube:property\"}}{{/crossLink}},\n{{#crossLink \"TorusGeometry/radialSegments:property\"}}{{/crossLink}}, {{#crossLink \"TorusGeometry/tubeSegments:property\"}}{{/crossLink}},  and\n{{#crossLink \"TorusGeometry/arc:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n\n## Examples\n\n\n* [Textured TorusGeometry](../../examples/#geometry_primitives_torus)\n\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a TorusGeometry and a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} with\ndiffuse {{#crossLink \"Texture\"}}{{/crossLink}}:\n\n````javascript\nnew xeogl.Entity({\n\n    geometry: new xeogl.TorusGeometry({\n        center: [0,0,0],\n        radius: 1.0,\n        tube: 0.3,\n        radialSegments: 32,\n        tubeSegments: 24,\n        arc: Math.PI * 2.0\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this TorusGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this TorusGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values for a TorusGeometry are 'points', 'lines' and 'triangles'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position of the TorusGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "radius",
                            "description": "The overall radius of the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "tube",
                            "description": "The tube radius of the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.3"
                        },
                        {
                            "name": "radialSegments",
                            "description": "The number of radial segments that make up the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "32"
                        },
                        {
                            "name": "tubeSegments",
                            "description": "The number of tubular segments that make up the TorusGeometry.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "24"
                        },
                        {
                            "name": "arc",
                            "description": "The length of the TorusGeometry's arc in in radians, where Math.PI*2 is a closed torus.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "Math.PI / 2.0"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/input/input.js",
            "line": 1,
            "description": "Publishes keyboard and mouse events that occur on the parent {{#crossLink \"Scene\"}}{{/crossLink}}'s {{#crossLink \"Canvas\"}}{{/crossLink}}.\n\n* Each {{#crossLink \"Scene\"}}{{/crossLink}} provides an Input on itself as a read-only property.\n\n<img src=\"../../../assets/images/Input.png\"></img>\n\n## Usage\n\nIn this example, we're subscribing to some mouse and key events that will occur on\na {{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n````javascript\nvar myScene = new xeogl.Scene();\n\nvar input = myScene.input;\n\n// We'll save a handle to this subscription\n// to show how to unsubscribe, further down\nvar handle = input.on(\"mousedown\", function(coords) {\n      console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n      console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n     console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n      console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is down\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is down\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is down\");\n              break;\n\n           default:\n              console.log(\"Some other key is down\");\n      }\n    });\n\ninput.on(\"keyup\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is up\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is up\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is up\");\n              break;\n\n           default:\n              console.log(\"Some other key is up\");\n       }\n    });\n\n// TODO: ALT and CTRL keys etc\n````\n\n### Unsubscribing from Events\n\nIn the snippet above, we saved a handle to one of our event subscriptions.\n\nWe can then use that handle to unsubscribe again, like this:\n\n````javascript\ninput.off(handle);\n````",
            "submodule": "input",
            "extends": "Component"
        },
        "AmbientLight": {
            "name": "AmbientLight",
            "shortname": "AmbientLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/ambientLight.js",
            "line": 1,
            "description": "An **AmbientLight** defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}\nequally.\n\n<a href=\"../../examples/#lights_ambient\"><img src=\"http://i.giphy.com/l0HlGTxXQWMRVOPwk.gif\"></img></a>\n\n## Overview\n\n* AmbientLights are grouped, along with other light source types, within\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} components, which are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* When the {{#crossLink \"Entity\"}}Entities{{/crossLink}} have {{#crossLink \"PhongMaterial\"}}PhongMaterials{{/crossLink}},\nAmbientLight {{#crossLink \"AmbientLight/color:property\"}}color{{/crossLink}} is multiplied by\n{{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}} at each rendered fragment of the {{#crossLink \"Geometry\"}}{{/crossLink}} surface.\n\n<img src=\"../../../assets/images/AmbientLight.png\"></img>\n\n## Examples\n\n* [Ambient light source](../../examples/#lights_ambient)\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity({\n\n    lights: new xeogl.Lights({\n        lights: [\n            new xeogl.AmbientLight({\n                color: [0.7, 0.7, 0.7]\n            })\n        ]\n    }),\n\n    material: new xeogl.PhongMaterial({\n       diffuse: [0.5, 0.5, 0.0]\n    }),\n\n    geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this AmbientLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "AmbientLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AmbientLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of this AmbientLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "CubeTexture": {
            "name": "CubeTexture",
            "shortname": "CubeTexture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/cubeTexture.js",
            "line": 1,
            "description": "A **CubeTexture** specifies a cube texture map.\n\n## Overview\n\nSee {{#crossLink \"Lights\"}}{{/crossLink}} for an example of how to use CubeTextures for light and reflection mapping.",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this CubeTexture in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID for this CubeTexture, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CubeTexture.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Paths to six image files to load into this CubeTexture.",
                            "type": "Array of String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "flipY",
                            "description": "Flips this CubeTexture's source data along its vertical axis when true.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DirLight": {
            "name": "DirLight",
            "shortname": "DirLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/dirLight.js",
            "line": 1,
            "description": "A **DirLight** is a directional light source that illuminates all attached {{#crossLink \"Entity\"}}Entities{{/crossLink}} equally\nfrom a given direction.\n\n## Overview\n\n* DirLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* DirLights have a direction, but no position.\n* The direction is the **direction that the light is emitted in**.\n* DirLights may be defined in either **World** or **View** coordinate space. When in World-space, their direction\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their direction is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\n* A DirLight can also have a {{#crossLink \"Shadow\"}}{{/crossLink}} component, to configure it to cast a shadow.\n\n<img src=\"../../../assets/images/DirLight.png\"></img>\n\n## Examples\n\n* [View-space directional three-point lighting](../../examples/#lights_directional_view_threePoint)\n* [World-space directional three-point lighting](../../examples/#lights_directional_world_threePoint)\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity({\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.DirLight({\n\n               // Note that this is the direction the light is shining,\n               // not the direction to the light source\n\n               dir:         [1, 1, 1],\n               color:       [0.5, 0.7, 0.5],\n               intensity:   1.0,\n               space:      \"view\"  // Other option is \"world\", for World-space\n           })\n       ]\n   }),\n\n   material: new xeogl.PhongMaterial({\n       ambient:    [0.3, 0.3, 0.3],\n       diffuse:    [0.7, 0.7, 0.7],\n       specular:   [1. 1, 1],\n       shininess:  30\n   }),\n\n   geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this DirLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The DirLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DirLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "A unit vector indicating the direction that the light is shining,\ngiven in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0]"
                        },
                        {
                            "name": "color",
                            "description": "The color of this DirLight.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "The intensity of this DirLight.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system the DirLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        },
                        {
                            "name": "shadow",
                            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this DirLight. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this DirLight.",
                            "type": "Shadow",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Fog": {
            "name": "Fog",
            "shortname": "Fog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/fog.js",
            "line": 1,
            "description": "A **Fog** is a directional light source that illuminates all attached {{#crossLink \"Entity\"}}Entities{{/crossLink}} equally\nfrom a given direction.\n\n## Overview\n\n* Fogs are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* Fogs have a direction, but no position.\n* The direction is the **direction that the light is emitted in**.\n* Fogs may be defined in either **World** or **View** coordinate space. When in World-space, their direction\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their direction is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\n* A Fog can also have a {{#crossLink \"Shadow\"}}{{/crossLink}} component, to configure it to cast a shadow.\n\n<img src=\"../../../assets/images/Fog.png\"></img>\n\n## Examples\n\n* [View-space directional three-point lighting](../../examples/#lights_directional_view_threePoint)\n* [World-space directional three-point lighting](../../examples/#lights_directional_world_threePoint)\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity({\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.Fog({\n\n               // Note that this is the direction the light is shining,\n               // not the direction to the light source\n\n               dir:         [1, 1, 1],\n               color:       [0.5, 0.7, 0.5],\n               intensity:   1.0,\n               space:      \"view\"  // Other option is \"world\", for World-space\n           })\n       ]\n   }),\n\n   material: new xeogl.PhongMaterial({\n       ambient:    [0.3, 0.3, 0.3],\n       diffuse:    [0.7, 0.7, 0.7],\n       specular:   [1. 1, 1],\n       shininess:  30\n   }),\n\n   geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Fog within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The Fog configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Fog.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "A unit vector indicating the direction that the light is shining,\ngiven in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0]"
                        },
                        {
                            "name": "color",
                            "description": "The color of this Fog.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "The intensity of this Fog.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system the Fog is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        },
                        {
                            "name": "shadow",
                            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this Fog. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Fog.",
                            "type": "Shadow",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Lights": {
            "name": "Lights",
            "shortname": "Lights",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/lights.js",
            "line": 1,
            "description": "A **Lights** defines a group of light sources that illuminate attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n## Overview\n\nA Lights may contain a virtually unlimited number of three types of light source:\n\n* {{#crossLink \"AmbientLight\"}}AmbientLight{{/crossLink}}s, which are fixed-intensity and fixed-color, and\naffect all the {{#crossLink \"Entity\"}}Entities{{/crossLink}} equally,\n* {{#crossLink \"PointLight\"}}PointLight{{/crossLink}}s, which emit light that\noriginates from a single point and spreads outward in all directions,\n* {{#crossLink \"DirLight\"}}DirLight{{/crossLink}}s, which illuminate all the\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} equally from a given direction and may cast shadows, and\n* {{#crossLink \"SpotLight\"}}SpotLight{{/crossLink}}s, which eminate from a position in a given direction and may cast shadows.\n\nA Lights can also have two other components that define environmental reflection and irradiance:\n\n* {{#crossLink \"Lights/lightMap:property\"}}{{/crossLink}} set to a {{#crossLink \"CubeTexture\"}}{{/crossLink}}, and\n* {{#crossLink \"Lights/reflectionMap:property\"}}{{/crossLink}} set to a {{#crossLink \"CubeTexture\"}}{{/crossLink}}.\n\n<img src=\"../../../assets/images/Lights.png\"></img>\n\n## Examples\n\n* [Light and reflection maps](../../examples/#materials_metallic_fireHydrant)\n* [World-space point lighting with normal map](../../examples/#lights_point_world_normalMap)\n* [View-space directional three-point lighting](../../examples/#lights_directional_view_threePoint)\n* [View-space positional three-point lighting](../../examples/#lights_point_world_threePoint)\n* [World-space directional three-point lighting](../../examples/#lights_directional_world_threePoint)\n* [World-space positional three-point lighting](../../examples/#lights_point_world_threePoint)\n\n## Usage\n\n````javascript\nnew xeogl.Entity({\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.DirLight({\n               dir: [0.8, -0.6, -0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [-0.8, -0.4, -0.4],\n               color: [0.4, 0.4, 0.5],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [0.2, -0.8, 0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           })\n       ],\n       lightMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PZ.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NZ.png\"\n           ]\n       }),\n       reflectionMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PZ.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NZ.png\"\n           ]\n       })\n   }),\n\n   material: new xeogl.MetallicMaterial({\n       roughness: 1.0,\n       metallic: 1.0,\n       baseColorMap: new xeogl.Texture({\n           src: \"textures/materials/poligon/RustMixedOnPaint012_1k/RustMixedOnPaint012_COL_VAR1_1K.jpg\"\n       }),\n       roughnessMap: new xeogl.Texture({\n           src: \"textures/materials/poligon/RustMixedOnPaint012_1k/RustMixedOnPaint012_REFL_1K.jpg\"\n       })\n   }),\n\n   geometry: new xeogl.SphereGeometry()\n});\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lights in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lights.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "lights",
                            "description": "} Array of light source IDs or instances.",
                            "type": "Array of String|Entity",
                            "optional": true
                        },
                        {
                            "name": "lightMap",
                            "description": "A light map {{#crossLink \"CubeTexture\"}}{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "CubeTexture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "reflectionMap",
                            "description": "A reflection map {{#crossLink \"CubeTexture\"}}{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "CubeTexture",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "PointLight": {
            "name": "PointLight",
            "shortname": "PointLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/pointLight.js",
            "line": 1,
            "description": "A **PointLight** defines a positional light source that originates from a single point and spreads outward in all directions, to illuminate attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#lights_point_world_normalMap\"><img src=\"http://i.giphy.com/3o6ZsZoFGIOJ2nlmN2.gif\"></img></a>\n\n## Overview\n\n* PointLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* PointLights have a position, but no direction.\n* PointLights may be defined in either **World** or **View** coordinate space. When in World-space, their positions\nare relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their positions are relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\n* PointLights have {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.\n\n<img src=\"../../../assets/images/PointLight.png\"></img>\n\n## Examples\n\n* [View-space positional three-point lighting](../../examples/#lights_point_view_threePoint)\n* [World-space positional three-point lighting](../../examples/#lights_point_world_threePoint)\n* [World-space point light and normal map](../../examples/#lights_point_world_normalMap)\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity(scene, {\n\n       lights: new xeogl.Lights({\n           lights: [\n               new xeogl.PointLight({\n                   pos: [0, 100, 100],\n                   color: [0.5, 0.7, 0.5],\n                   intensity: 1\n                   constantAttenuation: 0,\n                   linearAttenuation: 0,\n                   quadraticAttenuation: 0,\n                   space: \"view\"\n               })\n           ]\n       }),\n,\n       material: new xeogl.PhongMaterial({\n           diffuse: [0.5, 0.5, 0.0]\n       }),\n\n       geometry: new xeogl.BoxGeometry()\n });\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PointLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PointLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Color of this PointLight.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "Intensity of this PointLight.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this PointLight is defined in - \"view\" or \"world\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "Shadow": {
            "name": "Shadow",
            "shortname": "Shadow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/shadow.js",
            "line": 1,
            "description": "A **Shadow** defines a shadow cast by a {{#crossLink \"DirLight\"}}{{/crossLink}} or a {{#crossLink \"SpotLight\"}}{{/crossLink}}.\n\nWork in progress!\n\n## Overview\n\n* Shadows are attached to {{#crossLink \"DirLight\"}}{{/crossLink}} and {{#crossLink \"SpotLight\"}}{{/crossLink}} components.\n\nTODO\n\n## Examples\n\nTODO\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity(scene, {\n\n       lights: new xeogl.Lights({\n           lights: [\n\n               new xeogl.SpotLight({\n                   pos: [0, 100, 100],\n                   dir: [0, -1, 0],\n                   color: [0.5, 0.7, 0.5],\n                   intensity: 1\n                   constantAttenuation: 0,\n                   linearAttenuation: 0,\n                   quadraticAttenuation: 0,\n                   space: \"view\",\n\n                   shadow: new xeogl.Shadow({\n                       resolution: [1000, 1000],\n                       intensity: 0.7,\n                       sampling: \"stratified\" // \"stratified\" | \"poisson\" | \"basic\"\n                   });\n               })\n           ]\n       }),\n,\n       material: new xeogl.PhongMaterial({\n           diffuse: [0.5, 0.5, 0.0]\n       }),\n\n       geometry: new xeogl.BoxGeometry()\n });\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Shadow within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The Shadow configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Shadow.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "resolution",
                            "description": "Resolution of the texture map for this Shadow.",
                            "type": "Uint16Array",
                            "optional": true,
                            "optdefault": "[1000,1000]"
                        },
                        {
                            "name": "intensity",
                            "description": "Intensity of this Shadow.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        },
        "SpotLight": {
            "name": "SpotLight",
            "shortname": "SpotLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/lighting/spotLight.js",
            "line": 1,
            "description": "A **SpotLight** defines a positional light source that originates from a single point and eminates in a given direction, to illuminate attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nTODO\n\n## Overview\n\n* SpotLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* SpotLights have a position and direction.\n* SpotLights may be defined in either **World** or **View** coordinate space. When in World-space, their positions\nare relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their positions are relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\n* SpotLights have {{#crossLink \"SpotLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"SpotLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"SpotLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.\n* A SpotLight can also have a {{#crossLink \"Shadow\"}}{{/crossLink}} component, to configure it to cast a shadow.\n\nTODO\n\n## Examples\n\n   TODO\n\n## Usage\n\n```` javascript\nvar entity = new xeogl.Entity(scene, {\n\n       lights: new xeogl.Lights({\n           lights: [\n               new xeogl.SpotLight({\n                   pos: [0, 100, 100],\n                   dir: [0, -1, 0],\n                   color: [0.5, 0.7, 0.5],\n                   intensity: 1\n                   constantAttenuation: 0,\n                   linearAttenuation: 0,\n                   quadraticAttenuation: 0,\n                   space: \"view\"\n               })\n           ]\n       }),\n,\n       material: new xeogl.PhongMaterial({\n           diffuse: [0.5, 0.5, 0.0]\n       }),\n\n       geometry: new xeogl.BoxGeometry()\n });\n````",
            "submodule": "lighting",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this SpotLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The SpotLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SpotLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "dir",
                            "description": "Direction in which this Spotlight is shining, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[ 0.0, -1.0, 0.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Color of this SpotLight.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "intensity",
                            "description": "Intensity of this SpotLight.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this SpotLight is defined in - \"view\" or \"world\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        },
                        {
                            "name": "shadows",
                            "description": "Set true if this SpotLight casts shadows.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "shadow",
                            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this DirLight. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this DirLight.",
                            "type": "Shadow",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ]
        },
        "Fresnel": {
            "name": "Fresnel",
            "shortname": "Fresnel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/fresnel.js",
            "line": 1,
            "description": "A **Fresnel** specifies a Fresnel effect for attached {{#crossLink \"PhongMaterial\"}}PhongMaterials{{/crossLink}}.\n\n<a href=\"../../examples/#materials_phong_fresnel\"><img src=\"../../assets/images/screenshots/PhongMaterial/fresnelWide.png\"></img></a>\n\n## Overview\n\n* Fresnels are grouped within {{#crossLink \"PhongMaterial\"}}{{/crossLink}}s, which are attached to\n{{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n## Examples\n\n* [PhongMaterials with Fresnels](../../examples/#materials_phong_fresnel)\n\n<img src=\"../../../assets/images/Fresnel.png\"></img>\n\n## Usage\n\n````javascript\nvar entity = new xeogl.Entity({\n\n    material: new xeogl.PhongMaterial({\n        ambient: [0.3, 0.3, 0.3],\n        shininess: 30,\n\n        diffuseFresnel: new xeogl.Fresnel({\n            edgeColor: [1.0, 1.0, 1.0],\n            centerColor: [0.0, 0.0, 0.0],\n            power: 4,\n            bias: 0.6\n        }),\n\n        specularFresnel: new xeogl.Fresnel({\n            edgeColor: [1.0, 1.0, 1.0],\n            centerColor: [0.0, 0.0, 0.0],\n            power: 4,\n            bias: 0.2\n        })\n    }),\n\n    new xeogl.TorusGeometry()\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Fresnel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "edgeColor",
                            "description": "Color used on edges.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 0.0, 0.0, 0.0 ]"
                        },
                        {
                            "name": "centerColor",
                            "description": "Color used on center.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "edgeBias",
                            "description": "Bias at the edge.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "centerBias",
                            "description": "Bias at the center.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "power",
                            "description": "The power.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Material": {
            "name": "Material",
            "shortname": "Material",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/material.js",
            "line": 1,
            "description": "A **Material** defines the surface appearance of attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nMaterial is the base class for:\n\n* {{#crossLink \"MetallicMaterial\"}}{{/crossLink}} - physically-based material for metallic surfaces. Use this one for\nthings made of metal.\n* {{#crossLink \"SpecularMaterial\"}}{{/crossLink}} - physically-based material for non-metallic (dielectric)\nsurfaces. Use this one for insulators, such as ceramics, plastics, wood etc.\n* {{#crossLink \"PhongMaterial\"}}{{/crossLink}} - legacy material for classic Blinn-Phong shading. Use this material\nfor things that don't need to look real, such as wireframe objects and \"helper\" objects like labels etc. This material type is also\nmore efficient to render than the physically-based materials, so in some cases might be more suitable for low-power GPUs,\nsuch as on mobile devices.\n\nYour {{#crossLink \"Scene\"}}Scenes{{/crossLink}} are allowed to contain a mixture of these material types.",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Component"
        },
        "MetallicMaterial": {
            "name": "MetallicMaterial",
            "shortname": "MetallicMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/metallicMaterial.js",
            "line": 1,
            "description": "A **MetallicMaterial** is a physically-based {{#crossLink \"Material\"}}{{/crossLink}} that defines the surface appearance of\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} using the *metallic-roughness* workflow.\n\n## Examples\n\n| <a href=\"../../examples/#importing_gltf_pbr_metallic_helmet\"><img src=\"../../assets/images/screenshots/MetallicMaterial/helmet.png\"></img></a> | <a href=\"../../examples/#materials_metallic_fireHydrant\"><img src=\"../../assets/images/screenshots/MetallicMaterial/hydrant3.png\"></img></a> | <a href=\"../../examples/#materials_metallic_samples_metals\"><img src=\"../../assets/images/screenshots/MetallicMaterial/metals.png\"></img></a> | <a href=\"../../examples/#materials_metallic_metallicVsRoughness\"><img alt=\"Metallic Vs Roughness\" src=\"../../assets/images/screenshots/MetallicMaterial/metalVsRough.png\"></img></a> |\n|:------:|:----:|:-----:|:-----:|\n|[glTF models with PBR materials](../../examples/#importing_gltf_pbr_metallic_helmet)|[Fire hydrant model](../../examples/#materials_metallic_fireHydrant)| [Sample metal materials ](../../examples/#materials_metallic_samples_metals)|[Metallic Vs. roughness](../../examples/#materials_metallic_metallicVsRoughness)|\n\n## Overview\n\n* MetallicMaterial is usually used for conductive materials, such as metal.\n* {{#crossLink \"SpecularMaterial\"}}{{/crossLink}} is usually used for insulators, such as wood, ceramics and plastic.\n* {{#crossLink \"PhongMaterial\"}}{{/crossLink}} is usually used for non-realistic objects.\n\n<img src=\"../../../assets/images/MetallicMaterial.png\"></img>\n\nFor an introduction to PBR concepts, try these articles:\n\n* Joe Wilson's [Basic Theory of Physically-Based Rendering](https://www.marmoset.co/posts/basic-theory-of-physically-based-rendering/)\n* Jeff Russel's [Physically-based Rendering, and you can too!](https://www.marmoset.co/posts/physically-based-rendering-and-you-can-too/)\n* Sebastien Legarde's [Adapting a physically-based shading model](http://seblagarde.wordpress.com/tag/physically-based-rendering/)\n\nThe following table summarizes MetallicMaterial properties:\n\n| Property | Type | Range | Default Value | Space | Description |\n|:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n| {{#crossLink \"MetallicMaterial/baseColor:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the base color of the material. |\n| {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The metallic-ness the material (1 for metals, 0 for non-metals). |\n| {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The roughness of the material surface. |\n| {{#crossLink \"MetallicMaterial/specularF0:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The specular Fresnel of the material surface. |\n| {{#crossLink \"MetallicMaterial/emissive:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the emissive color of the material. |\n| {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n| {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | sRGB | Texture RGB components multiplying by {{#crossLink \"MetallicMaterial/baseColor:property\"}}{{/crossLink}}. If the fourth component (A) is present, it multiplies by {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/metallicMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/roughnessMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/metallicRoughnessMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} and second component multiplying by {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/emissiveMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with RGB components multiplying by {{#crossLink \"MetallicMaterial/emissive:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"MetallicMaterial/occlusionMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Ambient occlusion texture multiplying by surface's reflected diffuse and specular light. |\n| {{#crossLink \"MetallicMaterial/normalMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Tangent-space normal map. |\n| {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n| {{#crossLink \"MetallicMaterial/alphaCutoff:property\"}}{{/crossLink}} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n| {{#crossLink \"MetallicMaterial/backfaces:property\"}}{{/crossLink}} | Boolean |  | false |  | Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces. |\n| {{#crossLink \"MetallicMaterial/backfaces:property\"}}{{/crossLink}} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n\n## Usage\n\nIn the example below we'll create the [yellow fire hydrant](../../examples/#materials_metallic_fireHydrant) shown in the example screen shots above. Our hydrant {{#crossLink \"Entity\"}}{{/crossLink}} has:\n\n* a {{#crossLink \"OBJGeometry\"}}{{/crossLink}} which loads the fire hydrant mesh from an .OBJ file,\n* a {{#crossLink \"Lights\"}}{{/crossLink}} containing {{#crossLink \"DirLight\"}}DirLights{{/crossLink}}, plus {{#crossLink \"CubeTexture\"}}CubeTextures{{/crossLink}} for light and reflection maps, and\n* a MetallicMaterial with {{#crossLink \"Texture\"}}Textures{{/crossLink}} providing diffuse, metallic, roughness, occlusion and normal maps.\n\nNote that in this example we're providing separate {{#crossLink \"Texture\"}}Textures{{/crossLink}} for the {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} and {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}}\nchannels, which allows us a little creative flexibility. Then, in the next example further down, we'll combine those channels\nwithin the same {{#crossLink \"Texture\"}}{{/crossLink}} for efficiency.\n\n````javascript\nvar hydrant = new xeogl.Entity({\n\n   geometry: new xeogl.OBJGeometry({\n       src: \"models/obj/FireHydrantMesh.obj\"\n   }),\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.DirLight({\n               dir: [0.8, -0.6, -0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [-0.8, -0.4, -0.4],\n               color: [0.4, 0.4, 0.5],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [0.2, -0.8, 0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           })\n       ],\n       lightMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PZ.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NZ.png\"\n           ]\n       }),\n       reflectionMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PZ.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NZ.png\"\n           ]\n       })\n   }),\n\n   material: new xeogl.MetallicMaterial({\n\n       // Channels with default values, just to show them\n\n       baseColor: [1.0, 1.0, 1.0],\n       metallic: 1.0,\n       roughness: 1.0,\n       emissive: [0.0, 0.0, 0.0],\n       alpha: 1.0,\n\n       // Textures to multiply by some of the channels\n\n       baseColorMap : new xeogl.Texture({  // Multiplies by baseColor\n           src: \"textures/diffuse/fire_hydrant_Base_Color.png\"\n       }),\n\n       metallicMap : new xeogl.Texture({   // R component multiplies by metallic\n           src: \"textures/metallic/fire_hydrant_Metallic.png\"\n       }),\n\n       roughnessMap : new xeogl.Texture({  // R component multiplies by roughness\n           src: \"textures/roughness/fire_hydrant_Roughness.png\"\n       }),\n\n       occlusionMap : new xeogl.Texture({  // Multiplies by fragment alpha\n           src: \"textures/occlusion/fire_hydrant_Mixed_AO.png\"\n       }),\n\n       normalMap : new xeogl.Texture({\n           src: \"textures/normal/fire_hydrant_Normal_OpenGL.png\"\n       })\n   })\n});\n````\n\n### Combining channels within the same textures\n\nIn the previous example we provided separate {{#crossLink \"Texture\"}}Textures{{/crossLink}} for the {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} and\n{{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} channels, but we can combine those channels into the same {{#crossLink \"Texture\"}}{{/crossLink}} to reduce download time, memory footprint and rendering time (and also for glTF compatibility).\n\nHere's our MetallicMaterial again with those channels combined in the\n{{#crossLink \"MetallicMaterial/metallicRoughnessMap:property\"}}{{/crossLink}} {{#crossLink \"Texture\"}}Texture{{/crossLink}}, where the\n*R* component multiplies by {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} and *G* multiplies by {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}}.\n\n````javascript\nhydrant.material = new xeogl.MetallicMaterial({\n\n   baseColor: [1,1,1], // Default value\n   metallic: 1.0,      // Default value\n   roughness: 1.0,     // Default value\n\n   baseColorMap : new xeogl.Texture({\n       src: \"textures/diffuse/fire_hydrant_Base_Color.png\"\n   }),\n   metallicRoughnessMap : new xeogl.Texture({\n       src: \"textures/metallicRoughness/fire_hydrant_MetallicRoughness.png\"\n   }),\n   occlusionMap : new xeogl.Texture({\n       src: \"textures/occlusion/fire_hydrant_Mixed_AO.png\"\n   }),\n   normalMap : new xeogl.Texture({\n       src: \"textures/normal/fire_hydrant_Normal_OpenGL.png\"\n   })\n});\n````\n\nAlthough not shown in this example, we can also texture {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} with\nthe *A* component of {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}}'s {{#crossLink \"Texture\"}}{{/crossLink}},\nif required.\n\n## Transparency\n\n### Alpha Blending\n\nLet's make our hydrant transparent.\n\nWe'll update its MetallicMaterial's {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}}\nand {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}}, causing it to blend 50% with the background:\n\n````javascript\nhydrant.material.alpha = 0.5;\nhydrant.material.alphaMode = \"blend\";\n````\n\n<img src=\"../../../assets/images/screenshots/MetallicMaterial/alphaBlend.png\"></img>\n\n### Alpha Masking\n\nLet's apply an alpha mask to our hydrant.\n\nWe'll give its MetallicMaterial an {{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}}\nand configure {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}}, {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}},\nand {{#crossLink \"MetallicMaterial/alphaCutoff:property\"}}{{/crossLink}} to treat it as an alpha mask:\n\n````javascript\nhydrant.material.alphaMap = new xeogl.Texture({\n       src: \"textures/diffuse/crossGridColorMap.jpg\"\n   });\n\nhydrant.material.alpha = 1.0;\nhydrant.material.alphaMode = \"mask\";\nhydrant.material.alphaCutoff = 0.2;\n````\n\n<img src=\"../../../assets/images/screenshots/MetallicMaterial/alphaMask.png\"></img>",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Material",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this MetallicMaterial within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The MetallicMaterial configuration.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this material.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "baseColor",
                            "description": "RGB diffuse color of this MetallicMaterial. Multiplies by the RGB\ncomponents of {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}}.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1,1,1]"
                        },
                        {
                            "name": "metallic",
                            "description": "Factor in the range 0..1 indicating how metallic this MetallicMaterial is.\n1 is metal, 0 is non-metal. Multiplies by the *R* component of {{#crossLink \"MetallicMaterial/metallicMap:property\"}}{{/crossLink}} and the *A* component of\n{{#crossLink \"MetallicMaterial/metalRoughnessMap:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "roughness",
                            "description": "Factor in the range 0..1 indicating the roughness of this MetallicMaterial.\n0 is fully smooth, 1 is fully rough. Multiplies by the *R* component of {{#crossLink \"MetallicMaterial/roughnessMap:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "specularF0",
                            "description": "Factor in the range 0..1 indicating specular Fresnel.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.0"
                        },
                        {
                            "name": "emissive",
                            "description": "RGB emissive color of this MetallicMaterial. Multiplies by the RGB\ncomponents of {{#crossLink \"MetallicMaterial/emissiveMap:property\"}}{{/crossLink}}.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "alpha",
                            "description": "Factor in the range 0..1 indicating the alpha of this MetallicMaterial.\nMultiplies by the *R* component of {{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} and the *A* component,\nif present, of {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}}. The value of\n{{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}} indicates how alpha is interpreted when rendering.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "baseColorMap",
                            "description": "RGBA {{#crossLink \"Texture\"}}{{/crossLink}} containing the diffuse color\nof this MetallicMaterial, with optional *A* component for alpha. The RGB components multiply by the\n{{#crossLink \"MetallicMaterial/baseColor:property\"}}{{/crossLink}} property,\nwhile the *A* component, if present, multiplies by the {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} property.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's\nalpha in its *R* component. The *R* component multiplies by the {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} property. Must\nbe within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "metallicMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's\nmetallic factor in its *R* component. The *R* component multiplies by the\n{{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} property. Must be within the same\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "roughnessMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's\nroughness factor in its *R* component. The *R* component multiplies by the\n{{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} property. Must be within the same\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "metallicRoughnessMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this\nMetallicMaterial's metalness in its *R* component and roughness in its *G* component. Its *R* component multiplies by the\n{{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} property, while its *G* component multiplies by the\n{{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} property. Must be within the same\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing the emissive color of this\nMetallicMaterial. Multiplies by the {{#crossLink \"MetallicMaterial/emissive:property\"}}{{/crossLink}} property.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "occlusionMap",
                            "description": "RGB ambient occlusion {{#crossLink \"Texture\"}}{{/crossLink}}. Within shaders,\nmultiplies by the specular and diffuse light reflected by surfaces. Must be within the same {{#crossLink \"Scene\"}}{{/crossLink}}\nas this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "normalMap",
                            "description": "RGB tangent-space normal {{#crossLink \"Texture\"}}{{/crossLink}}. Must be\nwithin the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaMode",
                            "description": "The alpha blend mode, which specifies how alpha is to be interpreted. Accepted\nvalues are \"opaque\", \"blend\" and \"mask\". See the {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"opaque\""
                        },
                        {
                            "name": "alphaCutoff",
                            "description": "The alpha cutoff value.\nSee the {{#crossLink \"MetallicMaterial/alphaCutoff:property\"}}{{/crossLink}} property for more info.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "backfaces",
                            "description": "Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "frontface",
                            "description": "The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "\"ccw\""
                        }
                    ]
                }
            ]
        },
        "PhongMaterial": {
            "name": "PhongMaterial",
            "shortname": "PhongMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/phongMaterial.js",
            "line": 1,
            "description": "A **PhongMaterial** is a {{#crossLink \"Material\"}}{{/crossLink}} that defines the surface appearance of\nattached {{#crossLink \"Entity\"}}Entities{{/crossLink}} using\nthe classic <a href=\"https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model\">Blinn-Phong</a> lighting model.\n\n## Examples\n\n| <a href=\"../../examples/#materials_phong_textures\"><img src=\"../../assets/images/screenshots/PhongMaterial/textures.png\"></img></a> | <a href=\"../../examples/#materials_phong_textures_video\"><img src=\"../../assets/images/screenshots/PhongMaterial/videoTexture.png\"></img></a> | <a href=\"../../examples/#materials_phong_fresnel\"><img src=\"../../assets/images/screenshots/PhongMaterial/fresnel.png\"></img></a> |\n|:------:|:----:|:-----:|:-----:|\n|[Phong textures](../../examples/#materials_phong_textures)|[Video texture](../../examples/#materials_phong_textures_video)| [Fresnels](../../examples/#materials_phong_fresnel)|\n\n## Overview\n\n* Used for rendering non-realistic objects such as \"helpers\", wireframe objects, labels etc.\n* Use the physically-based {{#crossLink \"MetallicMaterial\"}}{{/crossLink}} or {{#crossLink \"SpecularMaterial\"}}{{/crossLink}} when more realism is required.\n\n<img src=\"../../../assets/images/PhongMaterial.png\"></img>\n\nThe following table summarizes PhongMaterial properties:\n\n| Property | Type | Range | Default Value | Space | Description |\n|:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n|  {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the ambient light reflected by the material. |\n|  {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the diffuse light reflected by the material. |\n|  {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the specular light reflected by the material. |\n|  {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the light emitted by the material. |\n| {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n| {{#crossLink \"PhongMaterial/shininess:property\"}}{{/crossLink}} | Number | [0, 128] | 80 | linear | Determines the size and sharpness of specular highlights. |\n| {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | Determines the amount of reflectivity. |\n| {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | sRGB | Texture RGB components multiplying by {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}. If the fourth component (A) is present, it multiplies by {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | sRGB | Texture RGB components multiplying by {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}}. If the fourth component (A) is present, it multiplies by {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with RGB components multiplying by {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/occlusionMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Ambient occlusion texture multiplying by {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}}, {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} and {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/normalMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Tangent-space normal map. |\n| {{#crossLink \"PhongMaterial/diffuseFresnel:property\"}}{{/crossLink}} | {{#crossLink \"Fresnel\"}}{{/crossLink}} |  | null |  | Fresnel term applied to {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/specularFresnel:property\"}}{{/crossLink}} | {{#crossLink \"Fresnel\"}}{{/crossLink}} |  | null |  | Fresnel term applied to {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/emissiveFresnel:property\"}}{{/crossLink}} | {{#crossLink \"Fresnel\"}}{{/crossLink}} |  | null |  | Fresnel term applied to {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/reflectivityFresnel:property\"}}{{/crossLink}} | {{#crossLink \"Fresnel\"}}{{/crossLink}} |  | null |  | Fresnel term applied to {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/alphaFresnel:property\"}}{{/crossLink}} | {{#crossLink \"Fresnel\"}}{{/crossLink}} |  | null |  | Fresnel term applied to {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"PhongMaterial/lineWidth:property\"}}{{/crossLink}} | Number | [0..100] | 1 |  | Line width in pixels. |\n| {{#crossLink \"PhongMaterial/pointSize:property\"}}{{/crossLink}} | Number | [0..100] | 1 |  | Point size in pixels. |\n| {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n| {{#crossLink \"PhongMaterial/alphaCutoff:property\"}}{{/crossLink}} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n| {{#crossLink \"PhongMaterial/backfaces:property\"}}{{/crossLink}} | Boolean |  | false |  | Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces. |\n| {{#crossLink \"PhongMaterial/backfaces:property\"}}{{/crossLink}} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n\n## Usage\n\nIn this example we have an Entity with\n\n* a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"DirLight\"}}{{/crossLink}},\n* a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} which applies a {{#crossLink \"Texture\"}}{{/crossLink}} as a diffuse map and a specular {{#crossLink \"Fresnel\"}}{{/crossLink}}, and\n* a {{#crossLink \"TorusGeometry\"}}{{/crossLink}}.\n\n```` javascript\nvar torus = new xeogl.Entity({\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.AmbientLight({\n               color: [0.7, 0.7, 0.7]\n           }),\n           new xeogl.DirLight({\n               dir: [-1, -1, -1],\n               color: [0.5, 0.7, 0.5],\n               intensity: [1.0, 1.0, 1.0],\n               space: \"view\"\n           })\n       ]\n   }),\n\n   material: new xeogl.PhongMaterial({\n       ambient: [0.3, 0.3, 0.3],\n       diffuse: [0.5, 0.5, 0.0],   // Ignored, since we have assigned a Texture to diffuseMap, below\n       diffuseMap: new xeogl.Texture({\n           src: \"diffuseMap.jpg\"\n       }),\n       specular: [1, 1, 1],\n       specularFresnel: new xeogl.Fresnel({\n           leftColor: [1.0, 1.0, 1.0],\n           rightColor: [0.0, 0.0, 0.0],\n           power: 4\n       }),\n       shininess: 80, // Default\n       alpha: 1.0 // Default\n   }),\n\n   geometry: new xeogl.TorusGeometry()\n});\n````\n\n## Transparency\n\n### Alpha Blending\n\nLet's make our torus transparent. We'll update its PhongMaterial's {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}\nand {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}}, causing it to blend 50% with the background:\n\n````javascript\ntorus.material.alpha = 0.5;\ntorus.material.alphaMode = \"blend\";\n````\n*TODO: Screenshot*\n\n### Alpha Masking\n\nNow let's make holes in our torus instead. We'll give its PhongMaterial an {{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}}\nand configure {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}}, {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}},\nand {{#crossLink \"PhongMaterial/alphaCutoff:property\"}}{{/crossLink}} to treat it as an alpha mask:\n\n````javascript\ntorus.material.alphaMap = new xeogl.Texture({\n       src: \"textures/diffuse/crossGridColorMap.jpg\"\n   });\n\ntorus.material.alpha = 1.0;\ntorus.material.alphaMode = \"mask\";\ntorus.material.alphaCutoff = 0.2;\n````\n*TODO: Screenshot*",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Material",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PhongMaterial within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PhongMaterial configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this PhongMaterial.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "ambient",
                            "description": "PhongMaterial ambient color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "diffuse",
                            "description": "PhongMaterial diffuse color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "specular",
                            "description": "PhongMaterial specular color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "emissive",
                            "description": "PhongMaterial emissive color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 0.0, 0.0, 0.0 ]"
                        },
                        {
                            "name": "alpha",
                            "description": "Scalar in range 0-1 that controls alpha, where 0 is completely transparent and 1 is completely opaque.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "shininess",
                            "description": "Scalar in range 0-128 that determines the size and sharpness of specular highlights.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "80"
                        },
                        {
                            "name": "reflectivity",
                            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "lineWidth",
                            "description": "Scalar that controls the width of lines for {{#crossLink \"Geometry\"}}{{/crossLink}} with {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} set to \"lines\".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "pointSize",
                            "description": "Scalar that controls the size of points for {{#crossLink \"Geometry\"}}{{/crossLink}} with {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} set to \"points\".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "ambientMap",
                            "description": "A ambient map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will multiply by the diffuse property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "diffuseMap",
                            "description": "A diffuse map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the diffuse property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "specularMap",
                            "description": "A specular map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the specular property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "An emissive map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the emissive property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "normalMap",
                            "description": "A normal map {{#crossLink \"Texture\"}}Texture{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaMap",
                            "description": "An alpha map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the alpha property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "reflectivityMap",
                            "description": "A reflectivity control map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the reflectivity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "occlusionMap",
                            "description": "An occlusion map {{#crossLink \"Texture\"}}Texture{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "diffuseFresnel",
                            "description": "A diffuse {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "specularFresnel",
                            "description": "A specular {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "emissiveFresnel",
                            "description": "An emissive {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaFresnel",
                            "description": "An alpha {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "reflectivityFresnel",
                            "description": "A reflectivity {{#crossLink \"Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.",
                            "type": "Fresnel",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaMode",
                            "description": "The alpha blend mode - accepted values are \"opaque\", \"blend\" and \"mask\".\nSee the {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"opaque\""
                        },
                        {
                            "name": "alphaCutoff",
                            "description": "The alpha cutoff value. See the {{#crossLink \"PhongMaterial/alphaCutoff:property\"}}{{/crossLink}} property for more info.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "backfaces",
                            "description": "Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "frontface",
                            "description": "The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "\"ccw\""
                        }
                    ]
                }
            ]
        },
        "SpecularMaterial": {
            "name": "SpecularMaterial",
            "shortname": "SpecularMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/specularMaterial.js",
            "line": 1,
            "description": "A **SpecularMaterial** is a physically-based {{#crossLink \"Material\"}}{{/crossLink}} that defines the surface appearance of\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} using the *specular-glossiness* workflow.\n\n## Examples\n\n| <a href=\"../../examples/#importing_gltf_pbr_specular_telephone\"><img src=\"../../assets/images/screenshots/SpecularMaterial/telephone.png\"></img></a> | <a href=\"../../examples/#materials_specular_samples\"><img src=\"../../assets/images/screenshots/SpecularMaterial/materials.png\"></img></a> | <a href=\"../../examples/#materials_specular_textures\"><img src=\"../../assets/images/screenshots/SpecularMaterial/textures.png\"></img></a> | <a href=\"../../examples/#materials_specular_specularVsGlossiness\"><img src=\"../../assets/images/screenshots/SpecularMaterial/specVsGloss.png\"></img></a> |\n|:------:|:----:|:-----:|:-----:|\n|[glTF models with PBR materials](../../examples/#importing_gltf_pbr_specular_telephone)|[Sample materials ](../../examples/#materials_specular_samples) | [Texturing spec/gloss channels](../../examples/#materials_specular_textures) | [Specular Vs. glossiness](../../examples/#materials_specular_specularVsGlossiness) |\n\n## Overview\n\n* SpecularMaterial is usually used for insulators, such as ceramic, wood and plastic.\n* {{#crossLink \"MetallicMaterial\"}}{{/crossLink}} is usually used for conductive materials, such as metal.\n* {{#crossLink \"PhongMaterial\"}}{{/crossLink}} is usually used for non-realistic objects.\n\n<img src=\"../../../assets/images/SpecularMaterial.png\"></img>\n\nFor an introduction to PBR concepts, try these articles:\n\n* Joe Wilson's [Basic Theory of Physically-Based Rendering](https://www.marmoset.co/posts/basic-theory-of-physically-based-rendering/)\n* Jeff Russel's [Physically-based Rendering, and you can too!](https://www.marmoset.co/posts/physically-based-rendering-and-you-can-too/)\n* Sebastien Legarde's [Adapting a physically-based shading model](http://seblagarde.wordpress.com/tag/physically-based-rendering/)\n\nThe following table summarizes SpecularMaterial properties:\n\n| Property | Type | Range | Default Value | Space | Description |\n|:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n|  {{#crossLink \"SpecularMaterial/diffuse:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the diffuse color of the material. |\n|  {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the specular color of the material. |\n| {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The glossiness the material. |\n| {{#crossLink \"SpecularMaterial/specularF0:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The specularF0 of the material surface. |\n|  {{#crossLink \"SpecularMaterial/emissive:property\"}}{{/crossLink}} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the emissive color of the material. |\n| {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n| {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | sRGB | Texture RGB components multiplying by {{#crossLink \"SpecularMaterial/diffuse:property\"}}{{/crossLink}}. If the fourth component (A) is present, it multiplies by {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/specularMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | sRGB | Texture RGB components multiplying by {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}}. If the fourth component (A) is present, it multiplies by {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/glossinessMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first three components multiplying by {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} and fourth component multiplying by {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/emissiveMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with RGB components multiplying by {{#crossLink \"SpecularMaterial/emissive:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Texture with first component multiplying by {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}}. |\n| {{#crossLink \"SpecularMaterial/occlusionMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Ambient occlusion texture multiplying by surface's reflected diffuse and specular light. |\n| {{#crossLink \"SpecularMaterial/normalMap:property\"}}{{/crossLink}} | {{#crossLink \"Texture\"}}{{/crossLink}} |  | null | linear | Tangent-space normal map. |\n| {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n| {{#crossLink \"SpecularMaterial/alphaCutoff:property\"}}{{/crossLink}} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n| {{#crossLink \"SpecularMaterial/backfaces:property\"}}{{/crossLink}} | Boolean |  | false |  | Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces. |\n| {{#crossLink \"SpecularMaterial/backfaces:property\"}}{{/crossLink}} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n\n## Usage\n\nIn the example below we'll create the plastered sphere shown in the [Sample Materials](../../examples/#materials_specular_textures) example (see screenshots above).\n\nHere's a closeup of the sphere we'll create:\n\n<a href=\"../../examples/#materials_specular_samples\"><img src=\"../../assets/images/screenshots/SpecularMaterial/plaster.png\"></img></a>\n\nOur plastered sphere {{#crossLink \"Entity\"}}{{/crossLink}} has:\n\n* a {{#crossLink \"SphereGeometry\"}}{{/crossLink}},\n* a {{#crossLink \"Lights\"}}{{/crossLink}} containing {{#crossLink \"DirLight\"}}DirLights{{/crossLink}}, plus {{#crossLink \"CubeTexture\"}}CubeTextures{{/crossLink}} for light and reflection maps, and\n* a SpecularMaterial with {{#crossLink \"Texture\"}}Textures{{/crossLink}} providing diffuse, glossiness, specular and normal maps.\n\nNote that in this example we're providing separate {{#crossLink \"Texture\"}}Textures{{/crossLink}} for the {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} and {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}}\nchannels, which allows us a little creative flexibility. Then, in the next example further down, we'll combine those channels\nwithin the same {{#crossLink \"Texture\"}}{{/crossLink}} for efficiency.\n\n````javascript\nvar plasteredSphere = new xeogl.Entity({\n\n   geometry: new xeogl.SphereGeometry({\n       center: [0,0,0],\n       radius: 1.5,\n       heightSegments: 60,\n       widthSegments: 60\n   }),\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.DirLight({\n               dir: [0.8, -0.6, -0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [-0.8, -0.4, -0.4],\n               color: [0.4, 0.4, 0.5],\n               space: \"view\"\n           }),\n           new xeogl.DirLight({\n               dir: [0.2, -0.8, 0.8],\n               color: [0.8, 0.8, 0.8],\n               space: \"view\"\n           })\n       ],\n       lightMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NX.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NY.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_PZ.png\",\n               \"textures/light/Uffizi_Gallery/Uffizi_Gallery_Irradiance_NZ.png\"\n           ]\n       }),\n       reflectionMap: new xeogl.CubeTexture({\n           src: [\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NX.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NY.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_PZ.png\",\n               \"textures/reflect/Uffizi_Gallery/Uffizi_Gallery_Radiance_NZ.png\"\n           ]\n       })\n   }),\n\n   material: new xeogl.SpecularMaterial({\n\n       // Channels with default values, just to show them\n\n       diffuse: [1.0, 1.0, 1.0],\n       specular: [1.0, 1.0, 1.0],\n       glossiness: 1.0,\n       emissive: [0.0, 0.0, 0.0]\n       alpha: 1.0,\n\n       // Textures to multiply some of the channels\n\n       diffuseMap: {       // RGB components multiply by diffuse\n           src: \"textures/materials/poligon/Plaster07_1k/Plaster07_COL_VAR1_1K.jpg\"\n       },\n       specularMap: {      // RGB component multiplies by specular\n           src: \"textures/materials/poligon/Plaster07_1k/Plaster07_REFL_1K.jpg\"\n       },\n       glossinessMap: {    // R component multiplies by glossiness\n           src: \"textures/materials/poligon/Plaster07_1k/Plaster07_GLOSS_1K.jpg\"\n       },\n       normalMap: {\n           src: \"textures/materials/poligon/Plaster07_1k/Plaster07_NRM_1K.jpg\"\n       }\n   })\n});\n````\n\n### Combining channels within the same textures\n\nIn the previous example we provided separate {{#crossLink \"Texture\"}}Textures{{/crossLink}} for the {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} and\n{{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} channels, but we can combine those channels into the same {{#crossLink \"Texture\"}}{{/crossLink}} to reduce download time, memory footprint and rendering time (and also for glTF compatibility).\n\nHere's our SpecularMaterial again with those channels combined in the\n{{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}} {{#crossLink \"Texture\"}}Texture{{/crossLink}}, where the\n*RGB* component multiplies by {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} and *A* multiplies by {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}}.\n\n````javascript\nplasteredSphere.material = new xeogl.SpecularMaterial({\n\n   // Default values\n   diffuse: [1.0, 1.0, 1.0],\n   specular: [1.0, 1.0, 1.0],\n   glossiness: 1.0,\n   emissive: [0.0, 0.0, 0.0]\n   alpha: 1.0,\n\n   diffuseMap: {\n       src: \"textures/materials/poligon/Plaster07_1k/Plaster07_COL_VAR1_1K.jpg\"\n   },\n   specularGlossinessMap: { // RGB multiplies by specular, A by glossiness\n       src: \"textures/materials/poligon/Plaster07_1k/Plaster07_REFL_GLOSS_1K.jpg\"\n   },\n   normalMap: {\n       src: \"textures/materials/poligon/Plaster07_1k/Plaster07_NRM_1K.jpg\"\n   }\n});\n````\n\nAlthough not shown in this example, we can also texture {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} with\nthe *A* component of {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}}'s {{#crossLink \"Texture\"}}{{/crossLink}},\nif required.\n\n## Transparency\n\n### Alpha Blending\n\nLet's make our plastered sphere transparent. We'll update its SpecularMaterial's {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}}\nand {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}}, causing it to blend 50% with the background:\n\n````javascript\nplasteredSphere.material.alpha = 0.5;\nplasteredSphere.material.alphaMode = \"blend\";\n````\n\n*TODO: Screenshot*\n\n### Alpha Masking\n\nNow let's make holes in our plastered sphere. We'll give its SpecularMaterial an {{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}}\nand configure {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}}, {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}},\nand {{#crossLink \"SpecularMaterial/alphaCutoff:property\"}}{{/crossLink}} to treat it as an alpha mask:\n\n````javascript\nplasteredSphere.material.alphaMap = new xeogl.Texture({\n       src: \"textures/diffuse/crossGridColorMap.jpg\"\n   });\n\nplasteredSphere.material.alpha = 1.0;\nplasteredSphere.material.alphaMode = \"mask\";\nplasteredSphere.material.alphaCutoff = 0.2;\n````\n\n*TODO: Screenshot*",
            "submodule": "materials",
            "is_constructor": 1,
            "extends": "Material",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this SpecularMaterial within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The SpecularMaterial configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this SpecularMaterial.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "diffuse",
                            "description": "RGB diffuse color of this SpecularMaterial. Multiplies by the RGB\ncomponents of {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}}.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1,1,1]"
                        },
                        {
                            "name": "diffuseMap",
                            "description": "RGBA {{#crossLink \"Texture\"}}{{/crossLink}} containing the diffuse color\nof this SpecularMaterial, with optional *A* component for alpha. The RGB components multiply by the\n{{#crossLink \"SpecularMaterial/diffuse:property\"}}{{/crossLink}} property,\nwhile the *A* component, if present, multiplies by the {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} property.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "specular",
                            "description": "RGB specular color of this SpecularMaterial. Multiplies by the\n{{#crossLink \"SpecularMaterial/specularMap:property\"}}{{/crossLink}} and the *RGB* components of\n{{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "[1,1,1]"
                        },
                        {
                            "name": "specularMap",
                            "description": "RGB texture containing the specular color of this SpecularMaterial. Multiplies\nby the {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "glossiness",
                            "description": "indicating how glossy this SpecularMaterial is. 0 is\nno glossiness, 1 is full glossiness. Multiplies by the *R* component of {{#crossLink \"SpecularMaterial/glossinessMap:property\"}}{{/crossLink}}\nand the *A* component of {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0]  Factor in the range [0..1"
                        },
                        {
                            "name": "specularGlossinessMap",
                            "description": "RGBA {{#crossLink \"Texture\"}}{{/crossLink}} containing this\nSpecularMaterial's specular color in its *RGB* component and glossiness in its *A* component. Its *RGB* components multiply by the\n{{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} property, while its *A* component multiplies by the\n{{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} property. Must be within the same\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "specularF0",
                            "description": "Factor in the range 0..1 indicating how reflective this SpecularMaterial is.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.0"
                        },
                        {
                            "name": "emissive",
                            "description": "RGB emissive color of this SpecularMaterial. Multiplies by the RGB\ncomponents of {{#crossLink \"SpecularMaterial/emissiveMap:property\"}}{{/crossLink}}.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing the emissive color of this\nSpecularMaterial. Multiplies by the {{#crossLink \"SpecularMaterial/emissive:property\"}}{{/crossLink}} property.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "occlusionMap",
                            "description": "RGB ambient occlusion {{#crossLink \"Texture\"}}{{/crossLink}}. Within shaders,\nmultiplies by the specular and diffuse light reflected by surfaces. Must be within the same {{#crossLink \"Scene\"}}{{/crossLink}}\nas this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "normalMap",
                            "description": "RGB tangent-space normal {{#crossLink \"Texture\"}}{{/crossLink}}. Must be\nwithin the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alpha",
                            "description": "Factor in the range 0..1 indicating how transparent this SpecularMaterial is.\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque. Multiplies by the *R* component of\n{{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} and the *A* component, if present, of\n{{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "alphaMap",
                            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this SpecularMaterial's\nalpha in its *R* component. The *R* component multiplies by the {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} property. Must\nbe within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "alphaMode",
                            "description": "The alpha blend mode - accepted values are \"opaque\", \"blend\" and \"mask\".\nSee the {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"opaque\""
                        },
                        {
                            "name": "alphaCutoff",
                            "description": "The alpha cutoff value.\nSee the {{#crossLink \"SpecularMaterial/alphaCutoff:property\"}}{{/crossLink}} property for more info.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "backfaces",
                            "description": "Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "frontface",
                            "description": "The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "\"ccw\""
                        }
                    ]
                }
            ]
        },
        "Texture": {
            "name": "Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/materials/texture.js",
            "line": 1,
            "description": "A **Texture** specifies a texture map.\n\n## Overview\n\n* Textures are grouped within {{#crossLink \"Material\"}}Materials{{/crossLink}}, which are attached to\n{{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* To create a Texture from an image file, set the Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}}\nproperty to the image file path.\n* To create a Texture from an HTMLImageElement, set the Texture's {{#crossLink \"Texture/image:property\"}}{{/crossLink}}\nproperty to the HTMLImageElement.\n\n<img src=\"../../assets/images/Texture.png\"></img>\n\n## Examples\n\n* [Textures on MetallicMaterials](../../examples/#materials_metallic_textures)\n* [Textures on SpecularMaterials](../../examples/#materials_specGloss_textures)\n* [Textures on PhongMaterials](../../examples/#materials_phong_textures)\n* [Video texture](../../examples/#materials_phong_textures_video)\n\n## Usage\n\nIn this example we have an Entity with\n\n* a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"DirLight\"}}{{/crossLink}},\n* a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} which applies diffuse and specular {{#crossLink \"Texture\"}}Textures{{/crossLink}}, and\n* a {{#crossLink \"TorusGeometry\"}}{{/crossLink}}.\n\nNote that xeogl will ignore the {{#crossLink \"PhongMaterial\"}}PhongMaterial's{{/crossLink}} {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}\nand {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} properties, since we assigned {{#crossLink \"Texture\"}}Textures{{/crossLink}} to the {{#crossLink \"PhongMaterial\"}}PhongMaterial's{{/crossLink}} {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} and\n{{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}} properties. The {{#crossLink \"Texture\"}}Textures'{{/crossLink}} pixel\ncolors directly provide the diffuse and specular components for each fragment across the {{#crossLink \"Geometry\"}}{{/crossLink}} surface.\n\n```` javascript\nvar entity = new xeogl.Entity({\n\n   lights: new xeogl.Lights({\n       lights: [\n           new xeogl.AmbientLight({\n               color: [0.7, 0.7, 0.7]\n           }),\n           new xeogl.DirLight({\n               dir: [-1, -1, -1],\n               color: [0.5, 0.7, 0.5],\n               intensity: [1.0, 1.0, 1.0],\n               space: \"view\"\n           })\n       ]\n   }),\n\n   material: new xeogl.PhongMaterial({\n       ambient: [0.3, 0.3, 0.3],\n       diffuse: [0.5, 0.5, 0.0],   // Ignored, since we have assigned a Texture to diffuseMap, below\n       specular: [1.0, 1.0, 1.0],   // Ignored, since we have assigned a Texture to specularMap, below\n       diffuseMap: new xeogl.Texture({\n           src: \"diffuseMap.jpg\"\n       }),\n       specularMap: new xeogl.Fresnel({\n           src: \"diffuseMap.jpg\"\n       }),\n       shininess: 80, // Default\n       alpha: 1.0 // Default\n   }),\n\n   geometry: new xeogl.TorusGeometry()\n});\n````",
            "submodule": "materials",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Texture in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID for this Texture, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Texture.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to image file to load into this Texture. See the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "image",
                            "description": "HTML Image object to load into this Texture. See the {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property for more info.",
                            "type": "HTMLImageElement",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "minFilter",
                            "description": "How the texture is sampled when a texel covers less than one pixel. See the {{#crossLink \"Texture/minFilter:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"linearMipmapLinear\""
                        },
                        {
                            "name": "magFilter",
                            "description": "How the texture is sampled when a texel covers more than one pixel. See the {{#crossLink \"Texture/magFilter:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"linear\""
                        },
                        {
                            "name": "wrapS",
                            "description": "Wrap parameter for texture coordinate *S*. See the {{#crossLink \"Texture/wrapS:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"repeat\""
                        },
                        {
                            "name": "wrapT",
                            "description": "Wrap parameter for texture coordinate *S*. See the {{#crossLink \"Texture/wrapT:property\"}}{{/crossLink}} property for more info.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"repeat\""
                        },
                        {
                            "name": "flipY",
                            "description": "Flips this Texture's source data along its vertical axis when true.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "translate",
                            "description": "2D translation vector that will be added to texture's *S* and *T* coordinates.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0]"
                        },
                        {
                            "name": "scale",
                            "description": "2D scaling vector that will be applied to texture's *S* and *T* coordinates.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1,1]"
                        },
                        {
                            "name": "rotate",
                            "description": "Rotation, in degrees, that will be applied to texture's *S* and *T* coordinates.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "xeogl.math.math": {
            "name": "xeogl.math.math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math",
            "file": "src/math/math.js",
            "line": 12,
            "description": "This utility object provides math functions that are used within xeogl. These functions are also part of xeogl's\npublic API and are therefore available for you to use within your application code."
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/models/model.js",
            "line": 1,
            "description": "A **Model** is a collection of {{#crossLink \"Component\"}}Components{{/crossLink}}.\n\n## Overview\n\n* A Model owns the components that are added to it, automatically destroying them when the Model is destroyed.\n* Can be attached to a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, to transform its components as a group, within World-space.\n* Provides the collective World-space boundary of its components in an automatically updating {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\nA Model is subclassed by (at least):\n\n* {{#crossLink \"GLTFModel\"}}{{/crossLink}}, which loads its components from glTF files.\n* {{#crossLink \"OBJModel\"}}{{/crossLink}}, which loads its components from .OBJ and .MTL files.\n* {{#crossLink \"SceneJSModel\"}}{{/crossLink}}, which loads its components from SceneJS scene definitions.\n* {{#crossLink \"BuildableModel\"}}{{/crossLink}}, which provides a fluent API for building its components.\n\n<img src=\"../../../assets/images/Model.png\"></img>\n\n## Usage\n\n### Adding and removing components\n\nWhen adding components to a Model, it's usually easiest to just add their configuration objects and let the Model\ninternally instantiate them, as shown below.\n\nAs mentioned, a Model owns all the components added to it, destroying them when we destroy\nthe Model or call its {{#crossLink \"Model/destroyAll:method\"}}{{/crossLink}} method.\n\n````javascript\nvar model = new xeogl.Model();\n\nvar geometry = model.add({\n   type: \"xeogl.TorusGeometry\"\n});\n\nvar material = model.add({\n   type: \"xeogl.PhongMaterial\"\n   diffuse: [0.4, 0.4, 9.0]\n});\n\nmodel.add({\n   type: \"xeogl.Entity\",\n   geometry: geometry,\n   material: material\n});\n````\n\nAs shown below, we can also add our own component instances, supplying them either by reference or ID.\n\nNote that the components must be in the same {{#crossLink \"Scene\"}}{{/crossLink}} as the model.\n\n````javascript\n// Add by instance\nvar myEntity = new xeogl.Entity({\n   geometry: geometry,\n   material: material\n});\nmodel.add(myEntity);\n\n// Add by ID\nnew xeogl.Entity({\n   id: \"myEntity\",\n   geometry: geometry,\n   material: material\n})\nmodel.add(\"myEntity\");\n````\n\nSince xeogl aims to be as declarative as possible, we can also add components all in one shot,\nvia the Model's constructor:\n\n````javascript\nmodel = new xeogl.Model({\n   components: [\n       {\n           type: \"xeogl.TorusGeometry\",\n           id: \"myGeometry\"\n       },\n       {\n           type: \"xeogl.PhongMaterial\",\n           id: \"myMaterial\",\n           diffuse: [0.4, 0.4, 0.9]\n       },\n       {\n           type: \"xeogl.Entity\",\n           id: \"myEntity\",\n           geometry: \"myGeometry\",\n           material: \"myMaterial\"\n       }\n   ]\n});\n````\n\n### Finding components\n\nOur Model now has various components within itself, which we can find by their IDs.\n\nTo find the components grouped by their types, drop this expression into the browser's JavaScript\ndebug console (we're using Chrome here):\n\n````\nmodel.types;\n````\n\nThe result is the value of the Model's {{#crossLink \"Model/types:property\"}}types{{/crossLink}} map, which\ncontains its components, mapped to their types:\n\n<img src=\"../../../assets/images/screenshots/Model_findingComponents.png\"></img>\n\nHere we've expanded the {{#crossLink \"PhongMaterial\"}}{{/crossLink}} components, and we can see\nour {{#crossLink \"PhongMaterial\"}}{{/crossLink}}.\n\nLet's get that {{#crossLink \"PhongMaterial\"}}{{/crossLink}} from our Model's\n{{#crossLink \"Model/components:property\"}}{{/crossLink}} map and change its diffuse color:\n\n```` JavaScript\nvar material = model.components[\"myMaterial\"];\nmaterial.diffuse = [0.9, 0.4, 0.4];\n````\n\nThe Model also has an {{#crossLink \"Model/entities:property\"}}{{/crossLink}} map, in which we can find our {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n<img src=\"../../../assets/images/screenshots/Model.entities.png\"></img>\n\n### Transforming a Model\n\nAs well as allowing us organize the lifecycle of groups of components, a Model also lets us transform them as a group.\n\nWe can attach a modeling {{#crossLink \"Transform\"}}{{/crossLink}} to our Model, as a either a\nconfiguration object or a component instance:\n\n```` Javascript\n// Attach transforms as a configuration object:\nmodel.transform = {\n       type: \"xeogl.Translate\",\n       xyz: [-35, 0, 0],\n       parent: {\n           type: \"xeogl.Rotate\",\n           xyz: [0, 1, 0],\n           angle: 45\n       }\n    };\n\n// Attach our own transform instances:\nmodel.transform = new xeogl.Translate({\n       xyz: [-35, 0, 0],\n       parent: new xeogl.Rotate({\n           xyz: [0, 1, 0],\n           angle: 45\n       })\n    });\n````\n\nWe can also provide the {{#crossLink \"Transform\"}}{{/crossLink}} to the Model constructor, as either configuration\nobjects or instances.\n\nHere we'll provide them as configuration objects:\n\n```` Javascript\n// Model internally instantiates our transform components:\nvar model3 = new xeogl.Model({\n       transform: {\n           type: \"xeogl.Translate\",\n           xyz: [-35, 0, 0],\n           parent: {\n               type: \"xeogl.Rotate\",\n               xyz: [0, 1, 0],\n               angle: 45\n           }\n       }\n    });\n\n````\n\nNote that, as with the components we added before, the Model will manage the lifecycles of our {{#crossLink \"Transform\"}}{{/crossLink}} components,\ndestroying them when we destroy the Model or call its {{#crossLink \"Model/destroyAll:method\"}}{{/crossLink}} method. Also, when we call {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} on a Model component, the component will remove itself from the Model first.\n\n### Getting the World-space boundary of a Model\n\nA Model's {{#crossLink \"Model/worldBoundary:property\"}}{{/crossLink}} property is a {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nthat provides the collective World-space boundary of all its components. The {{#crossLink \"Boundary3D\"}}{{/crossLink}} will\nautomatically adjust its extents whenever we add or remove components to its Model, or whenever we update the Model's {{#crossLink \"Transform\"}}Transforms{{/crossLink}}.\n\nLet's get the {{#crossLink \"Boundary3D\"}}{{/crossLink}} from our first Model, subscribe to changes on its extents,\nthen animate one of the Model's {{#crossLink \"Transform\"}}Transforms{{/crossLink}}, which will cause the {{#crossLink \"Boundary3D\"}}{{/crossLink}} to fire an\n{{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}} event each time its extents change:\n\n```` Javascript\nvar worldBoundary = model.worldBoundary;\n\nworldBoundary.on(\"updated\", function() {\n\n       // See docs on xeogl.Boundary3D for\n       // the format of these properties\n\n       obb = worldBoundary.obb;\n       aabb = worldBoundary.aabb;\n       center = worldBoundary.center;\n       //...\n   });\n\nmodel.scene.on(\"tick\", function() {\n       model.transform.parent.angle += 0.2;\n   });\n````\n\nSince xeogl is all about lazy-execution to avoid needless work, the {{#crossLink \"Boundary3D\"}}{{/crossLink}} will\nonly actually recompute its extents the first time we read its {{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}},\n{{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}}, {{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}} or\n{{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}} properties after it fired its\nlast {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}} event.\n\nAlso, the Model lazy-instantiates its {{#crossLink \"Boundary3D\"}}{{/crossLink}} the first time we reference\nthe Model's {{#crossLink \"Model/worldBoundary:property\"}}{{/crossLink}} property. Since the {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nis going to hang around in memory and fire {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}} events each time we add or\nremove components, or animate {{#crossLink \"Transform\"}}Transforms{{/crossLink}}, for efficiency we should destroy the {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nas soon as we no longer need it.\n\nFinally, when we destroy a Model, it will also destroy its {{#crossLink \"Boundary3D\"}}{{/crossLink}}, if it\ncurrently has one.",
            "submodule": "models",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this ModelModel in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ModelModel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "A Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} to attach to this Model.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Model. Internally, the given\n{{#crossLink \"Transform\"}}{{/crossLink}} will be inserted above each top-most {{#crossLink \"Transform\"}}Transform{{/crossLink}}\nthat the Model attaches to its {{#crossLink \"Entity\"}}Entities{{/crossLink}}.",
                            "type": "Number|String|Transform",
                            "optional": true
                        },
                        {
                            "name": "components",
                            "description": "Array of {{#crossLink \"Components\"}}{{/crossLink}} to add initially, given as IDs, configuration objects or instances.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Viewport": {
            "name": "Viewport",
            "shortname": "Viewport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/rendering/viewport.js",
            "line": 1,
            "description": "A **Viewport** defines a region within the canvas in which attached {{#crossLink \"Entity\"}}Entities{{/crossLink}} will render.\n\n<br>\n\n<a href=\"../../examples/#canvas_multipleViewports\"><img src=\"../../../assets/images/screenshots/multipleViewports.png\"></img></a>\n\n\n## Overview\n\n* As shown in the screen shot above, you can have multiple Viewports in a {{#crossLink \"Scene\"}}Scene's{{/crossLink}}\n* Make a Viewport automatically size to its {{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}{{/crossLink}}\nby setting its {{#crossLink \"Viewport/autoBoundary:property\"}}{{/crossLink}} property ````true```` (default is ````false````).\n\n## Examples\n\n* [Multiple viewports](../../examples/#canvas_multipleViewports)\n\n## Usage\n\n````javascript\nnew xeogl.Entity({\n\n   geometry: new xeogl.SphereGeometry(),\n\n   material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n   }),\n\n   viewport: new xeogl.Viewport({\n       boundary: [0, 0, 500, 400],\n       autoBoundary: false // Don't autosize to canvas (default)\n   })\n});\n````",
            "submodule": "rendering",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}, creates this Viewport within the\ndefault {{#crossLink \"Scene\"}}{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Viewport configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Viewport.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "boundary",
                            "description": "Canvas-space Viewport boundary, given as\n(min, max, width, height). Defaults to the size of the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}{{/crossLink}}.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "autoBoundary",
                            "description": "Indicates whether this Viewport's {{#crossLink \"Viewport/boundary:property\"}}{{/crossLink}}\nautomatically synchronizes with the size of the parent {{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Frustum": {
            "name": "Frustum",
            "shortname": "Frustum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/frustum.js",
            "line": 1,
            "description": "A **Frustum** is a {{#crossLink \"Transform\"}}{{/crossLink}} that defines a perspective projection as a frustum-shaped view volume.\n\n## Overview\n\n* {{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* A Frustum lets us explicitly set the positions of the left, right, top, bottom, near and far planes, which is useful\nfor asymmetrical view volumes, such as those used for stereo viewing.\n* An Frustum's {{#crossLink \"Frustum/near:property\"}}{{/crossLink}} and {{#crossLink \"Frustum/far:property\"}}{{/crossLink}} properties\nspecify the distances to the WebGL clipping planes.\n* Use {{#crossLink \"Ortho\"}}{{/crossLink}} if you just want to specify the X,Y frustum extents with a single scale factor,\nie. without individually specifying the distance to each frustum plane.\n* Use {{#crossLink \"Perspective\"}}{{/crossLink}} if you need perspective projection.\n\n<img src=\"../../../assets/images/Frustum.png\"></img>\n\n## Examples\n\n* [Camera with frustum projection](../../examples/#transforms_camera_project_frustum)\n* [Stereo viewing with frustum projection](../../examples/#effects_stereo)\n\n## Usage\n\n````Javascript\nnew xeogl.Entity({\n\n    camera: xeogl.Camera({\n\n       view: new xeogl.Lookat({\n           eye: [0, 0, -4],\n           look: [0, 0, 0],\n           up: [0, 1, 0]\n       }),\n\n       project: new xeogl.Frustum(scene, {\n           left: -0.1,\n           right: 0.1,\n           bottom: -0.1,\n           top: 0.1,\n           near: 0.15,\n           far: 1000\n       })\n    }),\n\n    geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Frustum within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Frustum.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Position of the Frustum's left plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "right",
                            "description": "Position of the Frustum's right plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "bottom",
                            "description": "Position of the Frustum's bottom plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "top",
                            "description": "Position of the Frustum's top plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "near",
                            "description": "Position of the Frustum's near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the Frustum's far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1000"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Lookat": {
            "name": "Lookat",
            "shortname": "Lookat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/lookat.js",
            "line": 1,
            "description": "A **Lookat** is a {{#crossLink \"Transform\"}}{{/crossLink}} that defines a viewing transform as an {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}} position, a\n{{#crossLink \"Lookat/look:property\"}}look{{/crossLink}} position and an {{#crossLink \"Lookat/up:property\"}}up{{/crossLink}}\nvector.\n\n## Overview\n\n* {{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with projection transforms such as\n{{#crossLink \"Perspective\"}}Perspective{{/crossLink}}, to define viewpoints on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<img src=\"../../../assets/images/Lookat.png\"></img>\n\n## Examples\n\n* [Camera with Lookat and Perspective](../../examples/#transforms_camera_project_perspective)\n\n## Usage\n\n````Javascript\nnew xeogl.Entity({\n\n    camera: xeogl.Camera({\n\n       view: new xeogl.Lookat({\n           eye: [0, 0, 4],\n           look: [0, 0, 0],\n           up: [0, 1, 0]\n       }),\n\n       project: new xeogl.Perspective({\n           fov: 60,\n           near: 0.1,\n           far: 1000\n       })\n    }),\n\n    geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lookat in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lookat.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Eye position.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,10]"
                        },
                        {
                            "name": "look",
                            "description": "The position of the point-of-interest we're looking at.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "The \"up\" vector.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        },
                        {
                            "name": "gimbalLockY",
                            "description": "Effectively whether Y-axis rotation is about the World-space Y-axis or the View-space Y-axis.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "Transform",
            "author": "xeolabs / http://xeolabs.com/"
        },
        "Ortho": {
            "name": "Ortho",
            "shortname": "Ortho",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/ortho.js",
            "line": 1,
            "description": "An **Ortho** is a {{#crossLink \"Transform\"}}{{/crossLink}} that defines an orthographic projection transform.\n\n## Overview\n\n* {{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* An Ortho works like Blender's orthographic projection, where the positions of the left, right, top and bottom planes are\nimplicitly specified with a single {{#crossLink \"Ortho/scale:property\"}}{{/crossLink}} property, which causes the frustum to be symmetrical on X and Y axis, large enough to\ncontain the number of units given by {{#crossLink \"Ortho/scale:property\"}}{{/crossLink}}.\n* An Ortho's {{#crossLink \"Ortho/near:property\"}}{{/crossLink}} and {{#crossLink \"Ortho/far:property\"}}{{/crossLink}} properties\nspecify the distances to the WebGL clipping planes.\n* Use {{#crossLink \"Frustum\"}}{{/crossLink}} if you need to individually specify the position of each of the frustum\nplanes, eg. for an asymmetrical view volume, such as those used for stereo viewing.\n* Use {{#crossLink \"Perspective\"}}{{/crossLink}} if you need perspective projection.\n\n<img src=\"../../../assets/images/Ortho.png\"></img>\n\n## Examples\n\n* [Camera with orthographic projection](../../examples/#transforms_camera_project_ortho)\n\n## Usage\n\n````Javascript\nnew xeogl.Entity({\n\n    camera: xeogl.Camera({\n\n        view: new xeogl.Lookat({\n            eye: [0, 0, -4],\n            look: [0, 0, 0],\n            up: [0, 1, 0]\n        }),\n\n        project: new xeogl.Ortho(scene, {\n            scale: 100.0,  // Fit at least 100 units within the ortho volume X & Y extents\n            near: 0.1,\n            far: 1000\n        })\n    }),\n\n    geometry: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Ortho within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Ortho.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "scale",
                            "description": "Scale factor for this Ortho's extents on X and Y axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Perspective": {
            "name": "Perspective",
            "shortname": "Perspective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/perspective.js",
            "line": 1,
            "description": "A **Perspective** is a {{#crossLink \"Transform\"}}{{/crossLink}} that defines a perspective projection transform.\n\n## Overview\n\n* {{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n* Alternatively, use {{#crossLink \"Ortho\"}}{{/crossLink}} if you need a orthographic projection.\n\n<img src=\"../../../assets/images/Perspective.png\"></img>\n\n## Examples\n\n* [Camera with perspective projection](../../examples/#transforms_camera_project_perspective)\n\n## Usage\n\n````Javascript\nnew xeogl.Entity({\n\n    camera: xeogl.Camera({\n\n       view: new xeogl.Lookat({\n           eye: [0, 0, -4],\n           look: [0, 0, 0],\n           up: [0, 1, 0]\n       }),\n\n       project: new xeogl.Perspective({\n           fov: 50,\n           near: 0.1,\n           far: 1000\n       })\n    }),\n\n    perspective: new xeogl.BoxGeometry()\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Perspective within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Perspective.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "fov",
                            "description": "Field-of-view angle, in degrees.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "50.0"
                        },
                        {
                            "name": "fovAxis",
                            "description": "The field-of-view axis: \"x\", \"y\", or \"min\" to use whichever is currently the minimum.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"min\""
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/quaternion.js",
            "line": 1,
            "description": "A **Quaternion** is a {{#crossLink \"Transform\"}}{{/crossLink}} that rotates associated {{#crossLink \"Entity\"}}Entities{{/crossLink}} or {{#crossLink \"Model\"}}Models{{/crossLink}}.\n\n## Overview\n\n* Instances of {{#crossLink \"Transform\"}}{{/crossLink}} and its sub-classes may be connected into hierarchies.\n* When an {{#crossLink \"Entity\"}}{{/crossLink}} or {{#crossLink \"Model\"}}{{/crossLink}} is connected to a\nleaf {{#crossLink \"Transform\"}}{{/crossLink}} within a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, it will be\ntransformed by each {{#crossLink \"Transform\"}}{{/crossLink}} on the path up to the root, in that order.\n\n<img src=\"../../../assets/images/Quaternion.png\"></img>\n\n## Examples\n\n* [Viewing transform hierarchy](../../examples/#transforms_camera_view_hierarchy)\n\n## Usage\n\nIn this example we have two {{#crossLink \"Entity\"}}Entities{{/crossLink}} that are transformed by a hierarchy that contains\nQuaternion, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\nThe Entities share the same {{#crossLink \"BoxGeometry\"}}{{/crossLink}}.<br>\n\n````javascript\nvar quaternion = new xeogl.Quaternion({\n   xyzw: [0, 0, 0, 1], // Unit quaternion\n});\n\nvar translate1 = new xeogl.Translate({\n  parent: quaternion,\n  xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar translate2 = new xeogl.Translate({\n  parent: quaternion,\n  xyz: [5, 0, 0] // Translate along +X axis\n});\n\nvar scale = new xeogl.Scale({\n  parent: translate2,\n  xyz: [1, 2, 1] // Scale x2 on Y axis\n});\n\nvar geometry = new xeogl.BoxGeometry();\n\nvar entity1 = new xeogl.Entity(scene, {\n  transform: translate1,\n  geometry: geometry\n});\n\nvar entity2 = new xeogl.Entity({\n  transform: scale,\n  geometry: geometry\n});\n````\n\nSince everything in xeogl is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\nvar scale2 = new xeogl.Scale({\n  parent: translate1,\n  xyz: [1, 1, 2] // Scale x2 on Z axis\n});\n\nEntity2.transform = scale2;\n````\n\nLet's spin the Quaternion:\n\n````javascript\n// Rotate 0.2 degrees about Y-axis on each frame\nscene.on(\"tick\", function(e) {\n       quaternion.rotate([0, 1, 0, 0.2]);\n   });\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Quaternion in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Quaternion.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "xyzw",
                            "description": "The initial Quaternion elements.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0,0,0,1]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Rotate": {
            "name": "Rotate",
            "shortname": "Rotate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/rotate.js",
            "line": 1,
            "description": "A **Rotate** is a {{#crossLink \"Transform\"}}{{/crossLink}} that rotates associated {{#crossLink \"Entity\"}}Entities{{/crossLink}} or {{#crossLink \"Model\"}}Models{{/crossLink}} about an axis vector.\n\n## Overview\n\n* Instances of {{#crossLink \"Transform\"}}{{/crossLink}} and its sub-classes may be connected into hierarchies.\n* When an {{#crossLink \"Entity\"}}{{/crossLink}} or {{#crossLink \"Model\"}}{{/crossLink}} is connected to a leaf {{#crossLink \"Transform\"}}{{/crossLink}}\nwithin a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, it will be transformed by each {{#crossLink \"Transform\"}}{{/crossLink}}\non the path up to the root, in that order.\n\n\n<img src=\"../../../assets/images/Rotate.png\"></img>\n\n## Examples\n\n* [Modeling transform hierarchy](../../examples/#transforms_entity_hierarchy)\n\n## Usage\n\nIn this example we have two {{#crossLink \"Entity\"}}Entities{{/crossLink}} that are transformed by a hierarchy that contains\nRotate, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\nThe Entities share the same {{#crossLink \"BoxGeometry\"}}{{/crossLink}}.<br>\n\n````javascript\nvar rotate = new xeogl.Rotate({\n   xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n   angle: 30\n});\n\nvar translate1 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar translate2 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [5, 0, 0] // Translate along +X axis\n});\n\nvar scale = new xeogl.Scale({\n   parent: translate2,\n   xyz: [1, 2, 1] // Scale x2 on Y axis\n});\n\nvar geometry = new xeogl.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar Entity1 = new xeogl.Entity({\n   transform: translate1,\n   geometry: geometry\n});\n\nvar Entity2 = new xeogl.Entity({\n   transform: scale,\n   geometry: geometry\n});\n````\n\nSince everything in xeogl is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\nvar scale2 = new xeogl.Scale({\n   parent: translate1,\n   xyz: [1, 1, 2] // Scale x2 on Z axis\n});\n\nEntity2.transform = scale2;\n````\n\nLet's start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n\n````javascript\n// Rotate 0.2 degrees on each frame\nscene.on(\"tick\", function(e) {\n   rotate.angle += 0.2;\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Rotate in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Rotate.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "xyz",
                            "description": "Axis of rotation.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        },
                        {
                            "name": "angle",
                            "description": "Angle of rotation in degrees.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Scale": {
            "name": "Scale",
            "shortname": "Scale",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/scale.js",
            "line": 1,
            "description": "A **Scale** is a {{#crossLink \"Transform\"}}{{/crossLink}} that scales associated {{#crossLink \"Entity\"}}Entities{{/crossLink}} or {{#crossLink \"Model\"}}Models{{/crossLink}}.\n\n## Overview\n\n* Instances of {{#crossLink \"Transform\"}}{{/crossLink}} and its sub-classes may be connected into hierarchies.\n* When an {{#crossLink \"Entity\"}}{{/crossLink}} or {{#crossLink \"Model\"}}{{/crossLink}} is connected to a leaf {{#crossLink \"Transform\"}}{{/crossLink}}\nwithin a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, it will be transformed by each {{#crossLink \"Transform\"}}{{/crossLink}}\non the path up to the root, in that order.\n\n<img src=\"../../../assets/images/Scale.png\"></img>\n\n## Examples\n\n* [Modeling transform hierarchy](../../examples/#transforms_entity_hierarchy)\n* [Projection transform hierarchy](../../examples/#transforms_camera_project_hierarchy)\n\n## Usage\n\nIn this example we have two {{#crossLink \"Entity\"}}Entities{{/crossLink}} that are transformed by a hierarchy that contains\n{{#crossLink \"Rotate\"}}{{/crossLink}}, {{#crossLink \"Translate\"}}{{/crossLink}} and Scale transforms.\nThe Entities share the same {{#crossLink \"BoxGeometry\"}}{{/crossLink}}.<br>\n\n````javascript\nvar rotate = new xeogl.Rotate({\n   xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n   angle: 30\n});\n\nvar translate1 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar translate2 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [5, 0, 0] // Translate along +X axis\n});\n\nvar scale = new xeogl.Scale({\n   parent: translate2,\n   xyz: [1, 2, 1] // Scale x2 on Y axis\n});\n\nvar geometry = new xeogl.BoxGeometry();\n\nvar entity1 = new xeogl.Entity({\n   transform: translate1,\n   geometry: geometry\n});\n\nvar entity2 = new xeogl.Entity({\n   transform: scale,\n   geometry: geometry\n});\n````\n\nSince everything in xeogl is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\nvar scale2 = new xeogl.Scale({\n   parent: translate1,\n   xyz: [1, 1, 2] // Scale x2 on Z axis\n});\n\nentity2.transform = scale2;\n````\n\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n\n````javascript\n// Rotate 0.2 degrees on each frame\nscene.on(\"tick\", function(e) {\n   rotate.angle += 0.2;\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Scale in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Scale.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "xyz",
                            "description": "Scale factors.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1,1,1]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Transform": {
            "name": "Transform",
            "shortname": "Transform",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/transform.js",
            "line": 1,
            "description": "A **Transform** is a modelling, viewing or projection transformation.\n\n## Overview\n\n* Sub-classes of Transform include: {{#crossLink \"Translate\"}}{{/crossLink}},\n{{#crossLink \"Scale\"}}{{/crossLink}}, {{#crossLink \"Rotate\"}}{{/crossLink}}, {{#crossLink \"Quaternion\"}}{{/crossLink}},\n{{#crossLink \"Lookat\"}}{{/crossLink}}, {{#crossLink \"Perspective\"}}{{/crossLink}}, {{#crossLink \"Frustum\"}}{{/crossLink}}\nand {{#crossLink \"Ortho\"}}{{/crossLink}}.\n* Instances of {{#crossLink \"Transform\"}}{{/crossLink}} and its sub-classes may be connected into hierarchies.\n\n* When an {{#crossLink \"Entity\"}}{{/crossLink}} or {{#crossLink \"Model\"}}{{/crossLink}} is connected to a leaf {{#crossLink \"Transform\"}}{{/crossLink}}\nwithin a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, it will be transformed by each {{#crossLink \"Transform\"}}{{/crossLink}}\non the path up to the root, in that order.\n\n<img src=\"../../../assets/images/Transform.png\"></img>\n\n## Examples\n\n* [Modelling transform hierarchy](../../examples/#transforms_entity_hierarchy)\n* [Attaching transforms to Models, via constructor](../../examples/#transforms_model_configureTransform)\n* [Attaching transforms to Models, via property](../../examples/#transforms_model_attachTransform)\n\n## Usage\n\nIn this example we'll create the table shown below, which consists of five {{#crossLink \"Entity\"}}Entities{{/crossLink}}\nthat share a {{#crossLink \"BoxGeometry\"}}{{/crossLink}} and each connect to a different leaf within a hierarchy of\n{{#crossLink \"Translate\"}}{{/crossLink}}, {{#crossLink \"Rotate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}}\ncomponents. Each {{#crossLink \"Entity\"}}{{/crossLink}} also has its own {{#crossLink \"PhongMaterial\"}}{{/crossLink}} to\ngive it a distinct color.\n\n<img src=\"../../../assets/images/transformHierarchy.png\"></img>\n\n````javascript\n// Shared Geometry\nvar boxGeometry = new xeogl.BoxGeometry();\n\n// Position of entire table\nvar tablePos = new xeogl.Translate({\n   xyz: [0, 6, 0]\n});\n\n// Orientation of entire table\nvar tableRotate = new xeogl.Rotate({\n   xyz: [1, 1, 1],\n   angle: 0,\n   parent: tablePos\n});\n\n// Red table leg\nvar tableLeg1 = new xeogl.Entity({\n   geometry: boxGeometry,\n   transform: new xeogl.Scale({\n       xyz: [1, 3, 1],\n       parent: new xeogl.Translate({\n           xyz: [-4, -6, -4],\n           parent: tableRotate\n       })\n   }),\n   material: new xeogl.PhongMaterial({\n       diffuse: [1, 0.3, 0.3]\n   })\n});\n\n// Green table leg\nvar tableLeg2 = new xeogl.Entity({\n   geometry: boxGeometry,\n   transform: new xeogl.Scale({\n       xyz: [1, 3, 1],\n       parent: new xeogl.Translate({\n           xyz: [4, -6, -4],\n           parent: tableRotate\n       })\n   }),\n   material: new xeogl.PhongMaterial({\n       diffuse: [0.3, 1.0, 0.3]\n   })\n});\n\n// Blue table leg\nvar tableLeg3 = new xeogl.Entity({\n   geometry: boxGeometry,\n   transform: new xeogl.Scale({\n       xyz: [1, 3, 1],\n       parent: new xeogl.Translate({\n           xyz: [4, -6, 4],\n           parent: tableRotate\n       })\n   }),\n   material: new xeogl.PhongMaterial({\n       diffuse: [0.3, 0.3, 1.0]\n   })\n});\n\n// Yellow table leg\nvar tableLeg4 = new xeogl.Entity({\n   geometry: boxGeometry,\n   transform: new xeogl.Scale({\n       xyz: [1, 3, 1],\n       parent: new xeogl.Translate({\n           xyz: [-4, -6, 4],\n           parent: tableRotate\n       })\n   }),\n   material: new xeogl.PhongMaterial({\n       diffuse: [1.0, 1.0, 0.0]\n   })\n});\n\n// Purple table top\nvar tableTop = new xeogl.Entity({\n   geometry: boxGeometry,\n   transform: new xeogl.Scale({\n       xyz: [6, 0.5, 6],\n       parent: new xeogl.Translate({\n           xyz: [0, -3, 0],\n           parent: tableRotate\n       })\n   }),\n   material: new xeogl.PhongMaterial({\n       diffuse: [1.0, 0.3, 1.0]\n   })\n});\n\n// Zoom camera out a bit\n// Get the Camera from one of the Entities\ntableTop.camera.view.zoom(10);\n\n// Spin the entire table\n\nvar angle = 0;\n\nscene.on(\"tick\", function () {\n   angle += 0.5;\n   tableRotate.angle = angle;\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Transform in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}}  when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Transform by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Transform.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent Transform within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "postMultiply",
                            "description": "Flag that indicates whether this Transform is post-multiplied (default) or\npre-multiplied by its {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} Transform.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "matrix",
                            "description": "One-dimensional, sixteen element array of elements for the Transform, an identity matrix by default.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Translate": {
            "name": "Translate",
            "shortname": "Translate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/transforms/translate.js",
            "line": 1,
            "description": "A **Translate** is a {{#crossLink \"Transform\"}}{{/crossLink}} that translates associated {{#crossLink \"Entity\"}}Entities{{/crossLink}} or {{#crossLink \"Model\"}}Models{{/crossLink}}.\n\n## Overview\n\n* Instances of {{#crossLink \"Transform\"}}{{/crossLink}} and its sub-classes may be connected into hierarchies.\n* When an {{#crossLink \"Entity\"}}{{/crossLink}} or {{#crossLink \"Model\"}}{{/crossLink}} is connected to a leaf {{#crossLink \"Transform\"}}{{/crossLink}}\nwithin a {{#crossLink \"Transform\"}}{{/crossLink}} hierarchy, it will be transformed by each {{#crossLink \"Transform\"}}{{/crossLink}}\non the path up to the root, in that order.\n\n<img src=\"../../../assets/images/Translate.png\"></img>\n\n## Examples\n\n* [Modeling transform hierarchy](../../examples/#transforms_entity_hierarchy)\n\n## Usage\n\nThis example has two {{#crossLink \"Entity\"}}Entities{{/crossLink}} that are transformed by a hierarchy that contains\n{{#crossLink \"Rotate\"}}{{/crossLink}}, Translate and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\nThe Entities share the same {{#crossLink \"BoxGeometry\"}}{{/crossLink}}.<br>\n\n````javascript\nvar rotate = new xeogl.Rotate({\n   xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n   angle: 30\n});\n\nvar translate1 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [-5, 0, 0] // Translate along -X axis\n});\n\nvar translate2 = new xeogl.Translate({\n   parent: rotate,\n   xyz: [5, 0, 0] // Translate along +X axis\n});\n\nvar scale = new xeogl.Scale({\n   parent: translate2,\n   xyz: [1, 2, 1] // Scale x2 on Y axis\n});\n\nvar geometry = new xeogl.BoxGeometry();\n\nvar Entity1 = new xeogl.Entity({\n   transform: translate1,\n   geometry: geometry\n});\n\nvar Entity2 = new xeogl.Entity({\n   transform: scale,\n   geometry: geometry\n});\n````\n\nSince everything in xeogl is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"Entity\"}}{{/crossLink}}:\n\n````javascript\nvar scale2 = new xeogl.Scale({\n   parent: translate1,\n   xyz: [1, 1, 2] // Scale x2 on Z axis\n});\n\nEntity2.transform = scale2;\n````\n\nAnd just for fun, we'll start updating the second {{#crossLink \"Translate\"}}{{/crossLink}}:\n\n````javascript\n// Rotate 0.2 degrees on each frame\nscene.on(\"tick\", function(e) {\n   var xyz = translate2.xyz;\n   xyz[0] += 0.2;\n   translate2.xyz = xyz;\n});\n````",
            "submodule": "transforms",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Translate in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Translate.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent {{#crossLink \"Transform\"}}{{/crossLink}} within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|Transform",
                            "optional": true
                        },
                        {
                            "name": "xyz",
                            "description": "The translation vector",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/component.js",
            "line": 1,
            "description": "The **Component** class is the base class for all xeogl components.\n\n## Component IDs\n\nEvery Component has an ID that's unique within the parent {{#crossLink \"Scene\"}}{{/crossLink}}. xeogl generates\nthe IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\nscene comprised of {{#crossLink \"Scene\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n{{#crossLink \"Entity\"}}{{/crossLink}} components, while letting xeogl generate its own ID for\nthe {{#crossLink \"Geometry\"}}{{/crossLink}}:\n\n````javascript\n// The Scene is a Component too\nvar scene = new xeogl.Scene({\n   id: \"myScene\"\n});\n\nvar material = new xeogl.PhongMaterial(scene, {\n   id: \"myMaterial\"\n});\n\nvar geometry = new xeogl.Geometry(scene, {\n   id: \"myGeometry\"\n});\n\n// Let xeogl automatically generate the ID for our Entity\nvar entity = new xeogl.Entity(scene, {\n   material: material,\n   geometry: geometry\n});\n````\n\nWe can then find those components like this:\n\n````javascript\n// Find the Scene\nvar theScene = xeogl.scenes[\"myScene\"];\n\n// Find the Material\nvar theMaterial = theScene.components[\"myMaterial\"];\n````\n\n## Properties\n\nAlmost every property on a xeogl Component fires a change event when you update it. For example, we can subscribe\nto the {{#crossLink \"PhongMaterial/diffuse:event\"}}{{/crossLink}} event that a\n{{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}}\nproperty is updated, like so:\n\n````javascript\n// Bind a change callback to a property\nvar handle = material.on(\"diffuse\", function(diffuse) {\n   console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n\n// Change the property value, which fires the callback\nmaterial.diffuse = [ 0.0, 0.5, 0.5 ];\n\n// Unsubscribe from the property change event\nmaterial.off(handle);\n````\n\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\nof other components. For example, we can subscribe to the '{{#crossLink \"Entity/material:event\"}}{{/crossLink}}' event that a\n{{#crossLink \"Entity\"}}Entity{{/crossLink}} fires when its {{#crossLink \"Entity/material:property\"}}{{/crossLink}}\nproperty is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n\n```` javascript\n// Bind a change callback to the Entity's Material\nentity1.on(\"material\", function(material) {\n   console.log(\"Entity's Material has changed to: \" + material.id);\n});\n\n// Now replace that Material with another\nentity1.material = new xeogl.PhongMaterial({\n   id: \"myOtherMaterial\",\n   diffuse: [ 0.3, 0.3, 0.6 ]\n   //..\n});\n````\n\n## Metadata\n\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\nto help manage your components within your application code or content pipeline. You could use metadata to attach\nauthoring or version information, like this:\n\n````javascript\n// Scene with authoring metadata\nvar scene = new xeogl.Scene({\n   id: \"myScene\",\n   meta: {\n       title: \"My awesome 3D scene\",\n       author: \"@xeolabs\",\n       date: \"February 13 2015\"\n   }\n});\n\n// Material with descriptive metadata\nvar material = new xeogl.PhongMaterial(scene, {\n   id: \"myMaterial\",\n   diffuse: [1, 0, 0],\n   meta: {\n       description: \"Bright red color with no textures\",\n       version: \"0.1\",\n       foo: \"bar\"\n   }\n});\n````\n\nAs with all properties, you can subscribe and change the metadata like this:\n\n````javascript\n// Subscribe to changes to the Material's metadata\nmaterial.on(\"meta\", function(value) {\n   console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n\n// Change the Material's metadata, firing our change handler\nmaterial.meta = {\n   description: \"Bright red color with no textures\",\n   version: \"0.2\",\n   foo: \"baz\"\n};\n````\n\n## Logging\n\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n\n````javascript\nmaterial.log(\"Everything is fine, situation normal.\");\nmaterial.warn(\"Wait, whats that red light?\");\nmaterial.error(\"Aw, snap!\");\n````\n\nThe logged messages will look like this in the console:\n\n````text\n[LOG]   myMaterial: Everything is fine, situation normal.\n[WARN]  myMaterial: Wait, whats that red light..\n[ERROR] myMaterial: Aw, snap!\n````\n\n## Destruction\n\nGet notification of destruction directly on the Components:\n\n````javascript\nmaterial.on(\"destroyed\", function() {\n   this.log(\"Component was destroyed: \" + this.id);\n});\n````\n\nOr get notification of destruction of any Component within its {{#crossLink \"Scene\"}}{{/crossLink}}, indiscriminately:\n\n````javascript\nscene.on(\"componentDestroyed\", function(component) {\n   this.log(\"Component was destroyed: \" + component.id);\n});\n````\n\nThen destroy a component like this:\n\n````javascript\nmaterial.destroy();\n````\n\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\nwill then automatically link to the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/material:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Component\nwithin the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Component.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "isDefault",
                            "description": "Set true when this is one of xeogl's default components.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "src/scene.js",
            "line": 1,
            "description": "A **Scene** models a 3D scene as a fully-editable and serializable <a href=\"http://gameprogrammingpatterns.com/component.html\" target=\"_other\">component-entity</a> graph.\n\n## Scene Structure\n\nA Scene contains a soup of instances of various {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes, such as\n{{#crossLink \"Entity\"}}Entity{{/crossLink}}, {{#crossLink \"Camera\"}}Camera{{/crossLink}}, {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} etc.  Each {{#crossLink \"Entity\"}}Entity{{/crossLink}} has a link to one of each of the other types,\nand the same component instances can be shared among many {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n*** Under the hood:*** Within xeogl, each {{#crossLink \"Entity\"}}Entity{{/crossLink}} represents a draw call,\nwhile its components define all the WebGL state that will be bound for that call. To render a Scene, xeogl traverses\nthe graph to bind the states and make the draw calls, while using many optimizations for efficiency (eg. draw list caching and GL state sorting).\n\n<img src=\"../../../assets/images/Scene.png\"></img>\n\n#### Default Components\n\nA Scene provides its own default *flyweight* instance of each component type\n(except for {{#crossLink \"Entity\"}}Entity{{/crossLink}}). Each {{#crossLink \"Entity\"}}Entity{{/crossLink}} you create\nwill implicitly link to a default instance for each type of component that you don't explicitly link it to. For example, when you create an {{#crossLink \"Entity\"}}Entity{{/crossLink}} without\na {{#crossLink \"Lights\"}}Lights{{/crossLink}}, the {{#crossLink \"Entity\"}}Entity{{/crossLink}} will link to the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}{{/crossLink}}. This mechanism\nprovides ***training wheels*** to help you learn the API, and also helps keep examples simple, where many of the examples in this\ndocumentation are implicitly using those defaults when they are not central to discussion.\n\nAt the bottom of the diagram above, the blue {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and {{#crossLink \"Camera\"}}Camera{{/crossLink}} components\nrepresent some of the defaults provided by our Scene. For brevity, the diagram only shows those three\ntypes of component (there are actually around two dozen).\n\nNote that we did not link the second {{#crossLink \"Entity\"}}Entity{{/crossLink}} to a\n{{#crossLink \"Material\"}}Material{{/crossLink}}, causing it to be implicitly linked to our Scene's\ndefault {{#crossLink \"Material\"}}Material{{/crossLink}}. That {{#crossLink \"Material\"}}Material{{/crossLink}}\nis the only default our {{#crossLink \"Entity\"}}Entities{{/crossLink}} are falling back on in this example, with other\ndefault component types, such as the {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and the {{#crossLink \"Camera\"}}Camera{{/crossLink}},\nhanging around dormant until an {{#crossLink \"Entity\"}}Entity{{/crossLink}} is linked to them.\n\nNote also how the same {{#crossLink \"Camera\"}}Camera{{/crossLink}} is linked to both of our\n{{#crossLink \"Entity\"}}Entities{{/crossLink}}. Whenever we update that\n{{#crossLink \"Camera\"}}Camera{{/crossLink}}, it's going to affect both of those\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} in one shot. Think of the defaults as the Scene's ***global*** component\ninstances, which you may optionally override on a per-{{#crossLink \"Entity\"}}Entity{{/crossLink}} basis with your own\ncomponent instances. In many Scenes, for example, you might not even bother to create your own {{#crossLink \"Camera\"}}Camera{{/crossLink}} and just\nlet all your {{#crossLink \"Entity\"}}Entities{{/crossLink}} fall back on the default one.\n\n## Usage\n\nHere's the JavaScript for the diagram above. As mentioned earlier, note that we only provide components for our {{#crossLink \"Entity\"}}Entities{{/crossLink}} when we need to\noverride the default components that the Scene would have provided them, and that the same component instances may be shared among multiple Entities.\n\n```` javascript\nvar scene = new xeogl.Scene({\n      id: \"myScene\"   // ID is optional on all components\n });\n\nvar material = new xeogl.PhongMaterial(myScene, {\n      id: \"myMaterial\",         // We'll use this ID to show how to find components by ID\n      diffuse: [ 0.6, 0.6, 0.7 ],\n      specular: [ 1.0, 1.0, 1.0 ]\n  });\n\nvar geometry = new xeogl.Geometry(myScene, {\n      primitive: \"triangles\",\n      positions: [...],\n      normals: [...],\n      uvs: [...],\n      indices: [...]\n });\n\nvar camera = new xeogl.Camera(myScene);\n\nvar entity1 = new xeogl.Entity(myScene, {\n      material: myMaterial,\n      geometry: myGeometry,\n      camera: myCamera\n });\n\n// Second entity uses Scene's default Material\nvar entity3 = new xeogl.Entity(myScene, {\n      geometry: myGeometry,\n      camera: myCamera\n });\n````\n\n## <a name=\"sceneCanvas\">The Scene Canvas</a>\n\nSee the {{#crossLink \"Canvas\"}}{{/crossLink}} component.\n\n## <a name=\"findingByID\">Finding Scenes and Components by ID</a>\n\nWe can have as many Scenes as we want, and can find them by ID on the {{#crossLink \"xeogl\"}}xeogl{{/crossLink}} entity's {{#crossLink \"xeogl/scenes:property\"}}scenes{{/crossLink}} map:\n\n````javascript\nvar theScene = xeogl.scenes[\"myScene\"];\n````\n\nLikewise we can find a Scene's components within the Scene itself, such as the {{#crossLink \"Material\"}}Material{{/crossLink}} we\ncreated earlier:\n\n````javascript\nvar theMaterial = myScene.components[\"myMaterial\"];\n````\n\n## <a name=\"defaults\">The Default Scene</a>\n\nWhen you create components without specifying a Scene for them, xeogl will put them in its default Scene.\n\nFor example:\n\n```` javascript\n\nvar material2 = new xeogl.PhongMaterial({\n   diffuse: { r: 0.6, g: 0.6, b: 0.7 },\n   specular: { 1.0, 1.0, 1.0 }\n});\n\nvar geometry2 = new xeogl.Geometry({\n    primitive: \"triangles\",\n    positions: [...],\n    normals: [...],\n    uvs: [...],\n    indices: [...]\n});\n\nvar camera = new xeogl.Camera();\n\nvar entity1 = new xeogl.Entity({\n    material: material2,\n    geometry: geometry2,\n    camera: camera2\n});\n````\n\nYou can then obtain the default Scene from the {{#crossLink \"xeogl\"}}xeogl{{/crossLink}} entity's\n{{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} property:\n\n````javascript\nvar theScene = xeogl.scene;\n````\n\nor from one of the components we just created:\n````javascript\nvar theScene = material2.scene;\n````\n\n***Note:*** xeogl creates the default Scene as soon as you either\ncreate your first Sceneless {{#crossLink \"Entity\"}}Entity{{/crossLink}} or reference the\n{{#crossLink \"xeogl\"}}xeogl{{/crossLink}} entity's {{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} property. Expect to\nsee the HTML canvas for the default Scene magically appear in the page when you do that.\n\n## <a name=\"webgl2\">WebGL 2</a>\n\nBy default, our Scene will attempt to use WebGL 2. If that's not supported then it will fall back on WebGL 1, if available.\nYou can force the Scene to use WebGL 1 by supplying this property to teh Scene's constructor:\n\n````javascript\nvar scene = new xeogl.Scene({\n    webgl2: false // Default is true\n});\n\n// We can then check this property on the Canvas to see if WebGL 2 is supported:\nvar gotWebGL2 = scene.canvas.webgl2; // True if we have WebGL 2\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Scene parameters",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all Scenes in xeogl, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Scene.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "canvasId",
                            "description": "ID of existing HTML5 canvas in the DOM - creates a full-page canvas automatically if this is omitted",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "webgl2",
                            "description": "Set this false when we **don't** want to use WebGL 2 for our Scene; the Scene will fall\nback on WebGL 1 if not available. This property will be deprecated when WebGL 2 is supported everywhere.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "components",
                            "description": "JSON array containing parameters for {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes to immediately create within the Scene.",
                            "type": "Array(Object)",
                            "optional": true
                        },
                        {
                            "name": "ticksPerRender",
                            "description": "The number of {{#crossLink \"Scene/tick:property\"}}{{/crossLink}} that happen between each render or this Scene.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "passes",
                            "description": "The number of times this Scene renders per frame.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "clearEachPass",
                            "description": "When doing multiple passes per frame, specifies whether to clear the\ncanvas before each pass (true) or just before the first pass (false).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether or not the canvas is transparent.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "backgroundColor",
                            "description": "RGBA color for canvas background, when canvas is not transparent. Overridden by backgroundImage.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "backgroundImage",
                            "description": "URL of an image to show as the canvas background, when canvas is not transparent. Overrides backgroundImage.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "xeogl": {
            "name": "xeogl",
            "shortname": "xeogl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "xeogl",
            "file": "src/xeogl.js",
            "line": 1,
            "description": "The xeogl namespace.",
            "mainName": "xeogl",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "static": 1,
            "author": "xeolabs / http://xeolabs.com/"
        },
        "CameraFollowAnimation": {
            "name": "CameraFollowAnimation",
            "shortname": "CameraFollowAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 1,
            "description": "A **CameraFollowAnimation** makes a {{#crossLink \"Camera\"}}{{/crossLink}} dynamically follow a\nWorld-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} in order to keep it entirely in view.\n\n<a href=\"../../examples/#animation_camera_follow_entity\"><img src=\"http://i.giphy.com/l0HlHcuzAjhMQ8YSY.gif\"></img></a>\n\n## Overview\n\n* Attaches to a {{#crossLink \"Camera\"}}{{/crossLink}}, which by default is the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Camera\"}}{{/crossLink}} when none is specified.\n* Requires that the {{#crossLink \"Camera\"}}{{/crossLink}} have a {{#crossLink \"Lookat\"}}{{/crossLink}} for its {{#crossLink \"Camera/view:property\"}}view{{/crossLink}} transform.\n* Also attaches to a {{#crossLink \"Boundary3D\"}}{{/crossLink}}, which by default will be the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} World-space boundary, {{#crossLink \"Scene/worldBoundary:property\"}}{{/crossLink}}.\n* Can be configured to either fly or jump to each updated position of the target {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n* Can be configured to automatically adjust the distance between the {{#crossLink \"Camera\"}}{{/crossLink}}'s {{#crossLink \"Lookat\"}}{{/crossLink}}'s {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} to keep the target {{#crossLink \"Boundary3D\"}}{{/crossLink}} fitted to the view volume.\n\n<img src=\"../../../assets/images/CameraFollowAnimation.png\"></img>\n\n## Examples\n\n* [Following an Entity with a Camera](../../examples/#animation_camera_follow_entity)\n* [Following an Entity with a Camera, keeping Entity fitted to view volume](../../examples/#animation_camera_follow_entity_fitToView)\n\n## Usage\n\nIn the example below, we'll use a CameraFollowAnimation to automatically follow an {{#crossLink \"Entity\"}}{{/crossLink}}'s World-space\n{{#crossLink \"Boundary3D\"}}{{/crossLink}} with the default {{#crossLink \"Camera\"}}{{/crossLink}}. Our CameraFollowAnimation's\n{{#crossLink \"CameraFollowAnimation/fit:property\"}}{{/crossLink}} property is set ````true````, which causes it to automatically\nkeep the {{#crossLink \"Boundary3D\"}}{{/crossLink}} fitted to the view volume. Although we can orbit the\n{{#crossLink \"Entity\"}}{{/crossLink}} using the {{#crossLink \"CameraControl\"}}{{/crossLink}}, we you can't control the\ndistance of the {{#crossLink \"Camera\"}}{{/crossLink}} from the {{#crossLink \"Entity\"}}{{/crossLink}} because our CameraFollowAnimation\nautomatically controls that distance in order to do the automatic fitting.\n\n````javascript\n// Create a red torus Entity with a Translate modelling transform\n// that allows it to move around in World-space\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry(),\n    material: new xeogl.PhongMaterial({\n         diffuse: [1, 0.3, 0.3]\n    }),\n    transform: new xeogl.Translate({\n        xyz: [0,0,0]\n    })\n});\n\n// Create a CameraFollowAnimation that makes the (Scene's default) Camera's Lookat follow the Entity's World-space\n// Boundary3D, while keeping the Boundary3D fitted to the view volume. The CameraFollowAnimation\n// will jump to each updated Boundary3D extents, and since an update will occur on every frame,\n// the effect will be as if we're smoothly flying after the Boundary3D. If the updates occur sporadically,\n// then we would probably instead configure it to fly to each update, to keep the animation smooth.\nvar cameraFollowAnimation = new xeogl.CameraFollowAnimation({\n    worldBoundary: entity.worldBoundary,\n    fit: true,   // Fit target to view volume\n    fitFOV: 35,  // Target will occupy 35 degrees of the field-of-view\n    fly: false // Jump to each updated boundary extents\n});\n\n// Create a SplineCurve along which we'll animate our Entity\nvar curve = new xeogl.SplineCurve({\n    points: [\n        [-10, 0, 0],\n        [-5, 15, 0],\n        [20, 15, 0],\n        [10, 0, 0]\n    ]\n});\n\n// Bind the Entity Translate to a point on the SplineCurve\ncurve.on(\"point\", function(point) {\n    entity.transform.xyz = point;\n});\n\n// Animate the point along the SplineCurve using the Scene clock\ncurve.scene.on(\"tick\", function(e) {\n    curve.t = (e.time - e.startTime) * 0.01;\n});\n\n// Allow user control of the Camera with mouse and keyboard\n// (zooming will be overridden by the auto-fitting configured on our CameraFollowAnimation)\nnew xeogl.InputControl();\n````",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this CameraFollowAnimation within xeogl's default {{#crossLink \"xeogl/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraFollowAnimation.",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraFollowAnimation. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "Number|String|Camera",
                            "optional": true
                        },
                        {
                            "name": "worldBoundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}Boundary3D{{/crossLink}} to follow.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CameraFollowAnimation. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s World-space boundary, {{#crossLink \"Scene/worldBoundary:property\"}}worldBoundary{{/crossLink}}.",
                            "type": "Number|String|Camera",
                            "optional": true
                        },
                        {
                            "name": "fly",
                            "description": "Indicates whether this CameraFollowAnimation will either fly or jump to each updated position of the\ntarget {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "fit",
                            "description": "When true, will ensure that this CameraFollowAnimation automatically adjusts the distance between the {{#crossLink \"Camera\"}}{{/crossLink}}'s {{#crossLink \"Lookat\"}}{{/crossLink}}'s {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} to keep the target {{#crossLink \"Boundary3D\"}}{{/crossLink}} fitted to the view volume.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "fitFOV",
                            "description": "How much of field-of-view, in degrees, that a target {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}} should\nfill the canvas when fitting to view.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "45"
                        },
                        {
                            "name": "trail",
                            "description": "When true, will cause this CameraFollowAnimation to point the {{#crossLink \"CameraFollowAnimation/camera:property\"}}{{/crossLink}} in the direction that it is travelling.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "CameraPath": {
            "name": "CameraPath",
            "shortname": "CameraPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/animation/cameraPath.js",
            "line": 1,
            "description": "A **CameraPath** defines a spline curve along which a {{#crossLink \"Camera\"}}{{/crossLink}} can be animated.\n\n* See {{#crossLink \"CameraPathAnimation\"}}{{/crossLink}} for usage.",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CameraPath.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraPath. Defaults to the\nparent {{#crossLink \"Scene\"}}{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "eyeCurve",
                            "description": "ID or instance of a {{#crossLink \"SplineCurve\"}}{{/crossLink}} to animate the {{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} property along.",
                            "type": "String|SplineCurve",
                            "optional": true
                        },
                        {
                            "name": "lookCurve",
                            "description": "ID or instance of a {{#crossLink \"SplineCurve\"}}{{/crossLink}} to animate the {{#crossLink \"Camera/look:property\"}}Camera's look{{/crossLink}} property along.",
                            "type": "String|SplineCurve",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "CameraPathAnimation": {
            "name": "CameraPathAnimation",
            "shortname": "CameraPathAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 1,
            "description": "A **CameraPathAnimation** animates a {{#crossLink \"Camera\"}}{{/crossLink}} along a {{#crossLink \"CameraPath\"}}{{/crossLink}}.\n\n## Overview\n\n* Animates a {{#crossLink \"Camera\"}}{{/crossLink}} along a {{#crossLink \"CameraPath\"}}{{/crossLink}}\n* Attaches to a {{#crossLink \"Camera\"}}{{/crossLink}}, which by default is the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Camera\"}}{{/crossLink}} when none is specified.\n* Requires that the {{#crossLink \"Camera\"}}{{/crossLink}} have a {{#crossLink \"Lookat\"}}{{/crossLink}} for its {{#crossLink \"Camera/view:property\"}}view{{/crossLink}} transform.\n\n<img src=\"../../../assets/images/CameraPathAnimation.png\"></img>\n\n## Examples\n\n* [Interpolating a Camera along a path](../../examples/#animation_camera_path_interpolation)\n* [Flying directly to each frame on a path](../../examples/#animation_camera_path_flyToFrame)\n* [Jumping directly to each frame on a path](../../examples/#animation_camera_path_scrubToFrame)\n* [A menu of Camera waypoints to fly to](../../examples/#animation_camera_path_frameMenu)\n\n## Usage\n\n### 1. Interpolating a Camera along a path\n\nIn this example we'll use the CameraPathAnimation's\n{{#crossLink \"CameraPathAnimation/play\"}}{{/crossLink}} method to smoothly <b>interpolate</b>\nthe default {{#crossLink \"Camera\"}}{{/crossLink}} along a {{#crossLink \"CameraPath\"}}{{/crossLink}}:\n\n<a href=\"../../examples/#animation_camera_path_interpolation\"><img src=\"http://i.giphy.com/l0MYDGMYzdFf6TqRW.gif\"></img></a>\n\n````Javascript\n// Load a model from glTF\n\nvar gearbox = new xeogl.GLTFModel({\n        src: \"models/gltf/GearboxAssy/glTF/GearboxAssy.gltf\"\n});\n\n// Define a CameraPath\n\nvar cameraPath = new xeogl.CameraPath({\n    frames: [\n        {t: 0, eye: [184.21, 10.54, -7.03], look: [159.2, 17.02, 3.21], up: [-0.15, 0.97, 0.13]},\n        {t: 1, eye: [184.91, 10.10, -11.26], look: [171.03, 13.69, -5.57], up: [-0.15, 0.97, 0.12]},\n        {t: 2, eye: [181.37, 12.35, -16.93], look: [171.03, 13.69, -5.57], up: [-0.17, 0.93, 0.28]},\n        {t: 2, eye: [174.01, 13.55, -20.70], look: [171.03, 13.69, -5.57], up: [-0.01, 0.90, 0.40]},\n        {t: 4, eye: [166.48, 14.36, -20.30], look: [171.03, 13.69, -5.57], up: [0.19, 0.88, 0.40]},\n        {t: 5, eye: [160.32, 14.69, -16.63], look: [171.03, 13.69, -5.57], up: [0.36, 0.87, 0.29]},\n        {t: 6, eye: [156.67, 17.97, -4.77], look: [162.53, 17.42, 1.28], up: [0.36, 0.87, 0.29]},\n        {t: 7, eye: [151.14, 16.68, -10.04], look: [158.94, 15.95, -1.99], up: [0.36, 0.87, 0.29]},\n        {t: 8, eye: [146.26, 17.56, -4.77], look: [152.13, 17.05, 1.28], up: [0.36, 0.87, 0.28]},\n        {t: 9, eye: [137.26, 18.36, -9.65], look: [149.76, 17.27, 3.24], up: [0.36, 0.87, 0.28]},\n        {t: 10, eye: [139.04, 18.29, -11.17], look: [149.76, 17.27, 3.24], up: [0.32, 0.87, 0.33]},\n        {t: 11, eye: [140.66, 18.13, -12.26], look: [149.76, 17.27, 3.24], up: [0.28, 0.87, 0.35]},\n        {t: 12, eye: [147.18, 17.66, -14.56], look: [149.76, 17.27, 3.24], up: [0.12, 0.89, 0.41]},\n        {t: 13, eye: [158.05, 16.33, -12.69], look: [149.76, 17.27, 3.24], up: [-0.11, 0.91, 0.34]},\n        {t: 14, eye: [150.11, 13.26, -6.69], look: [147.95, 13.50, -2.52], up: [-0.11, 0.91, 0.34]},\n        {t: 15, eye: [149.27, 13.00, -3.34], look: [148.72, 13.05, -2.29], up: [-0.11, 0.91, 0.35]},\n        {t: 16, eye: [152.62, 11.65, -4.87], look: [148.47, 12.08, 3.08], up: [-0.11, 0.91, 0.35]},\n        {t: 17, eye: [153.35, 12.24, -1.84], look: [148.69, 12.72, 7.01], up: [-0.11, 0.91, 0.35]},\n        {t: 18, eye: [156.49, 12.11, 0.74], look: [148.69, 12.72, 7.012], up: [-0.23, 0.92, 0.26]},\n        {t: 19, eye: [158.52, 11.98, 5.21], look: [148.69, 12.72, 7.01], up: [-0.32, 0.92, 0.12]},\n        {t: 20, eye: [158.60, 11.50, 7.91], look: [148.69, 12.72, 7.01], up: [-0.30, 0.94, 0.035]},\n        {t: 21, eye: [157.60, 11.76, 11.51], look: [148.69, 12.72, 7.01], up: [-0.31, 0.93, -0.089]},\n        {t: 22, eye: [152.67, 18.35, 14.29], look: [148.69, 12.72, 7.01], up: [-0.46, 0.51, -0.70]},\n        {t: 23, eye: [148.79, 21.67, 11.52], look: [148.69, 12.72, 7.01], up: [-0.15, 0.036, -0.97]},\n        {t: 24, eye: [147.11, 22.40, 9.07], look: [148.69, 12.72, 7.01], up: [0.38, -0.16, -0.89]},\n        {t: 25, eye: [144.80, 21.92, 6.23], look: [148.69, 12.72, 7.01], up: [0.98, -0.02, 0.03]},\n        {t: 26, eye: [144.11, 20.18, 2.13], look: [148.69, 12.72, 7.01], up: [0.71, 0.29, 0.62]},\n        {t: 27, eye: [145.87, 17.37, -1.40], look: [148.69, 12.72, 7.01], up: [0.31, 0.60, 0.71]},\n        {t: 28, eye: [144.37, 19.17, -7.33], look: [146.13, 16.27, -2.08], up: [0.31, 0.60, 0.71]},\n        {t: 29, eye: [142.54, 21.91, -17.26], look: [146.89, 14.81, -4.28], up: [0.31, 0.60, 0.71]}\n    ]\n});\n\n// Once the model has loaded, animate the\n// (default Scene's default Camera) along the CameraPath\n\nvar cameraPathAnimation = new xeogl.CameraPathAnimation({\n    cameraPath: cameraPath\n});\n\ngearbox.on(\"loaded\", function () {\n    cameraPathAnimation.play();\n});\n````\n\n<br>\n### 2. Flying directly to each frame on a path\n\nIn this example, we'll use the CameraPathAnimation's {{#crossLink \"CameraPathAnimation/flyToFrame\"}}{{/crossLink}} method\nto <b>fly</b> the {{#crossLink \"Camera\"}}{{/crossLink}} directly to each frame on the {{#crossLink \"CameraPath\"}}{{/crossLink}}:\n\n<a href=\"../../examples/#animation_camera_path_flyToFrame\"><img src=\"http://i.giphy.com/l3vQYNjsnAQwPBeYU.gif\"></img></a>\n\n````javascript\nvar i = 0;\nvar dir = 1;\n\ngearbox.on(\"loaded\", function () {\n    function nextFrame() {\n        cameraPathAnimation.flyToFrame(i += dir, function() { setTimeout(nextFrame, 1000); });\n\n        if (i <= 0 || i >= 29) {\n            dir = -dir;\n        }\n    }\n    nextFrame();\n});\n````\n<br>\n### 3. Jumping directly to each frame on a path\n\nIn this example, we'll use the CameraPathAnimation's {{#crossLink \"CameraPathAnimation/scrubToFrame\"}}{{/crossLink}} method\nto <b>jump</b> the {{#crossLink \"Camera\"}}{{/crossLink}} directly to each frame on the {{#crossLink \"CameraPath\"}}{{/crossLink}}:\n\n<a href=\"../../examples/#animation_camera_path_scrubToFrame\"><img src=\"http://i.giphy.com/l0Hlyqk7kewTjSBZ6.gif\"></img></a>\n\n````javascript\nvar i = 0;\nvar dir = 1;\n\ngearbox.on(\"loaded\", function () {\n    function nextFrame() {\n        cameraPathAnimation.scrubToFrame(i += dir);\n\n        if (i <= 0 || i >= 29) {\n            dir = -dir;\n        }\n        setTimeout(nextFrame, 1000);\n    }\n    nextFrame();\n});\n````",
            "submodule": "animation",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to CameraPathAnimation.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as CameraPathAnimation. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "Number|String|Camera",
                            "optional": true
                        },
                        {
                            "name": "cameraPath",
                            "description": "ID or instance of a {{#crossLink \"CameraPath\"}}{{/crossLink}} to animate the {{#crossLink \"Camera\"}}{{/crossLink}} along.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as CameraPathAnimation. Defaults to the\nparent {{#crossLink \"Scene\"}}{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "Number|String|CameraPath",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Annotation": {
            "name": "Annotation",
            "shortname": "Annotation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/annotations/annotation.js",
            "line": 1,
            "description": "An **Annotation** is a labeled {{#crossLink \"Pin\"}}{{/crossLink}} that's attached to the surface of an {{#crossLink \"Entity\"}}{{/crossLink}}.\n\n<a href=\"../../examples/#presentation_annotations_tronTank\"><img src=\"../../assets/images/screenshots/annotationsTank.png\"></img></a>\n\n## Overview\n\n#### Position\n\nAn Annotation is positioned within one of the triangles of its {{#crossLink \"Entity\"}}Entity's{{/crossLink}} {{#crossLink \"Geometry\"}}{{/crossLink}}. Wherever that triangle goes within the 3D view, the Annotation will automatically follow. An Annotation specifies its position with two properties:\n\n* {{#crossLink \"Pin/primIndex:property\"}}{{/crossLink}}, which indicates the index of the triangle within the {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}, and\n* {{#crossLink \"Pin/bary:property\"}}{{/crossLink}}, the barycentric coordinates of the position within the triangle.\n\nFrom these, an Annotation dynamically calculates its Cartesian coordinates, which it provides in each xeogl coordinate space:\n\n* {{#crossLink \"Pin/localPos:property\"}}{{/crossLink}} - 3D position local to the coordinate space of the {{#crossLink \"Geometry\"}}{{/crossLink}},\n* {{#crossLink \"Pin/worldPos:property\"}}{{/crossLink}} - 3D World-space position,\n* {{#crossLink \"Pin/viewPos:property\"}}{{/crossLink}} - 3D View-space position, and\n* {{#crossLink \"Pin/canvasPos:property\"}}{{/crossLink}} - 2D Canvas-space position.\n\nAn Annotation automatically recalculates these coordinates whenever its {{#crossLink \"Entity\"}}{{/crossLink}} is replaced or transformed, the {{#crossLink \"Geometry\"}}{{/crossLink}} is replaced or modified, or the {{#crossLink \"Camera\"}}{{/crossLink}} is moved.\n\n#### Appearance\n\nAs shown in the screen shot above, an Annotation is rendered as a dot with a label attached to it, using HTML elements.\n\n* {{#crossLink \"Annotation/glyph:property\"}}{{/crossLink}} specifies a character to appear in the dot,\n* {{#crossLink \"Annotation/title:property\"}}{{/crossLink}} and {{#crossLink \"Annotation/desc:property\"}}{{/crossLink}} specify a title and description to appear in the label, and\n* {{#crossLink \"Annotation/pinShown:property\"}}{{/crossLink}} and {{#crossLink \"Annotation/labelShown:property\"}}{{/crossLink}} specify whether the pin and label are shown.\n\nUse the stylesheet in <a href=\"/examples/js/annotations/annotation-style.css\">annotation-style.css</a> to set the default appearance for Annotations. Use that stylesheet as a guide for your own custom styles.\n\n#### Visibility\n\n* {{#crossLink \"Pin/occludable:property\"}}{{/crossLink}} specifies whether the Annotation becomes invisible whenever its occluded by other objects in the 3D view, and\n* {{#crossLink \"Pin/visible:property\"}}{{/crossLink}} indicates if the Annotations is currently visible.\n\n#### Vantage points\n\nEach Annotation may be configured with a vantage point from which to view it, given as {{#crossLink \"Annotation/eye:property\"}}{{/crossLink}}, {{#crossLink \"Annotation/look:property\"}}{{/crossLink}} and {{#crossLink \"Annotation/up:property\"}}{{/crossLink}} properties.  To focus attention on an Annotation, you could set the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Lookat\"}}{{/crossLink}} to that\nvantage point, or even fly to the vantage point using a {{#crossLink \"CameraFlightAnimation\"}}{{/crossLink}} (which we'll demonstrate in the usage example below).\n\n#### Interaction\n\nAn Annotation fires a {{#crossLink \"Annotation/pinClicked:event\"}}\"pinClicked\"{{/crossLink}} event whenever you click its dot. In the usage example, we make that event show the Annotation's label and set the {{#crossLink \"Camera\"}}{{/crossLink}} to the vantage point.\n\n## Examples\n\n* [Annotation demo](../../examples/#presentation_annotations_tronTank)\n* [AnnotationStory demo](../../examples/#presentation_annotationStory_tronTank)\n\n## Usage\n\nIn the example below, we use a {{#crossLink \"GLTFModel\"}}{{/crossLink}} to load a glTF model of a\nreciprocating saw. Once the {{#crossLink \"GLTFModel\"}}{{/crossLink}} has loaded, we'll then create Annotations on three of its {{#crossLink \"Entity\"}}Entities{{/crossLink}}. Finally, we wire\na callback to the {{#crossLink \"Annotation/pinClicked:event\"}}\"pinClicked\"{{/crossLink}} event from\neach Annotation, so that when you click its {{#crossLink \"Pin\"}}{{/crossLink}}, its label is shown and the {{#crossLink \"Camera\"}}{{/crossLink}} is positioned at its vantage point.\n\n````javascript\n<script src=\"../build/xeogl.min.js\"></script>\n<script src=\"js/annotations/pin.js\"></script>\n<script src=\"js/annotations/annotation.js\"></script>\n\n<link href=\"js/annotations/annotation-style.css\" rel=\"stylesheet\"/>\n\n<script>\n\nvar model = new xeogl.GLTFModel({\n   src: \"models/gltf/ReciprocatingSaw/PBR-SpecGloss/Reciprocating_Saw.gltf\",\n   transform: new xeogl.Rotate({\n       xyz: [1, 0, 0],\n       angle: 90\n   })\n});\n\nmodel.on(\"loaded\", function () {\n\n   // Position the camera to look at the model\n\n   var view = model.scene.camera.view;\n   view.eye = [-110.89, -44.85, 276.65];\n   view.look = [-110.89, -44.85, -0.46];\n   view.up = [0, 1, 0];\n   view.zoom(20);\n\n   // Create three annotations on entities\n   // within the model\n\n   var a1 = new xeogl.Annotation({\n       entity: model.entities[156], // Red handle\n       primIndex: 125,\n       bary: [0.3, 0.3, 0.3],\n       occludable: true,\n       glyph: \"1\",\n       title: \"Handle\",\n       desc: \"This is the handle. It allows us to grab onto the saw so we can hold it and make things with it.\",\n       eye: [-355.481, -0.871, 116.711],\n       look: [-227.456, -57.628, 5.428],\n       up: [0.239, 0.948, -0.208],\n       pinShown: true,\n       labelShown: false\n   });\n\n   var a2 = new xeogl.Annotation({\n       entity: model.entities[156], // Red handle and cover\n       primIndex: 10260,\n       bary: [0.333, 0.333, 0.333],\n       occludable: true,\n       glyph: \"2\",\n       title: \"Handle and cover\",\n       desc: \"This is the handle and cover. It provides something grab the saw with, and covers the things inside.\",\n       eye: [-123.206, -4.094, 169.849],\n       look: [-161.838, -37.875, 37.313],\n       up: [-0.066, 0.971, -0.228],\n       pinShown: true,\n       labelShown: false\n   });\n\n   var a3 = new xeogl.Annotation({\n       entity: modelentities[796], // Barrel\n       primIndex: 3783,\n       bary: [0.3, 0.3, 0.3],\n       occludable: true,\n       glyph: \"3\",\n       title: \"Barrel\",\n       desc: \"This is the barrel\",\n       eye: [80.0345, 38.255, 60.457],\n       look: [35.023, -0.166, 8.679],\n       up: [-0.320, 0.872, -0.368],\n       pinShown: true,\n       labelShown: false\n   });\n\n   // When each annotation's pin is clicked, we'll show the\n   // annotation's label and fly the camera to the\n   // annotation's vantage point\n\n   var cameraFlight = new xeogl.CameraFlightAnimation();\n   var lastAnnotation;\n\n   function pinClicked(annotation) {\n       if (lastAnnotation) {\n           annotation.labelShown = false;\n       }\n       annotation.labelShown = true;\n       cameraFlight.flyTo(annotation);\n       lastAnnotation = annotation;\n   }\n\n   a1.on(\"pinClicked\", pinClicked);\n   a2.on(\"pinClicked\", pinClicked);\n   a3.on(\"pinClicked\", pinClicked);\n\n   // If desired, we can also dynamically track the Cartesian coordinates\n   // of each annotation in Local and World coordinate spaces\n\n   a1.on(\"localPos\", function(localPos) {\n       console.log(\"Local pos changed: \" + JSON.stringify(localPos, null, \"\\t\"));\n   });\n\n   a1.on(\"worldPos\", function(worldPos) {\n       console.log(\"World pos changed: \" + JSON.stringify(worldPos, null, \"\\t\"));\n   });\n});\n</script>\n````",
            "submodule": "annotations",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Pin in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to the Annotation.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "entity",
                            "description": "ID or instance of the {{#crossLink \"Entity\"}}{{/crossLink}} the Annotation is attached to.",
                            "type": "Number|String|Entity",
                            "optional": true
                        },
                        {
                            "name": "bary",
                            "description": "Barycentric coordinates of the Annotation within its triangle.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.3,0.3,0.3]"
                        },
                        {
                            "name": "primIndex",
                            "description": "Index of the triangle containing the Annotation. Within the {{#crossLink \"Entity\"}}{{/crossLink}} {{#crossLink \"Geometry\"}}{{/crossLink}}\n{{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}, this is the index of the first\nelement for that triangle.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offset",
                            "description": "How far the Annotation is lifted out of its triangle, along the surface normal vector. This is used when occlusion culling, to ensure that the Annotation is not lost inside the surface it's attached to.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.2"
                        },
                        {
                            "name": "occludable",
                            "description": "Indicates whether occlusion testing is performed for the Annotation, where it will be flagged invisible whenever it's hidden by something else in the 3D view.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "glyph",
                            "description": "Short piece of text to show inside the pin for the Annotation. Automatically truncated to 2 characters.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "title",
                            "description": "Title text for the Annotation's label. Automatically truncated to 64 characters.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "desc",
                            "description": "Description text for the Annotation's label. Automatically truncated to 1025 characters.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "eye",
                            "description": "Position of the eye when looking at the Annotation.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,-10]"
                        },
                        {
                            "name": "look",
                            "description": "Position of the look when looking at the Annotation.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "Direction of the \"up\" vector when looking at the Annotation.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        },
                        {
                            "name": "pinShown",
                            "description": "Specifies whether a UI element is shown at the Annotation's pin position (typically a circle).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "labelShown",
                            "description": "Specifies whether the Annotation's label is shown.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Pin"
        },
        "Pin": {
            "name": "Pin",
            "shortname": "Pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/annotations/pin.js",
            "line": 1,
            "description": "A **Pin** is a pinned position on the surface of an {{#crossLink \"Entity\"}}{{/crossLink}}.\n\n## Overview\n\n#### Position\n\nAn Pin is positioned within one of the triangles of its {{#crossLink \"Entity\"}}Entity's{{/crossLink}} {{#crossLink \"Geometry\"}}{{/crossLink}}. Wherever that triangles goes within the 3D view, the Pin will automatically follow. An Pin specifies its position with two properties:\n\n* {{#crossLink \"Pin/primIndex:property\"}}{{/crossLink}}, which indicates the index of the triangle within the {{#crossLink \"Geometry\"}}{{/crossLink}} {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}, and\n* {{#crossLink \"Pin/bary:property\"}}{{/crossLink}}, the barycentric coordinates of the position within the triangle.\n\nFrom these, an Pin dynamically calculates its Cartesian coordinates, which it provides in each xeogl coordinate space:\n\n* {{#crossLink \"Pin/localPos:property\"}}{{/crossLink}} - 3D position local to the coordinate space of the {{#crossLink \"Geometry\"}}{{/crossLink}},\n* {{#crossLink \"Pin/worldPos:property\"}}{{/crossLink}} - 3D World-space position,\n* {{#crossLink \"Pin/viewPos:property\"}}{{/crossLink}} - 3D View-space position, and\n* {{#crossLink \"Pin/canvasPos:property\"}}{{/crossLink}} - 2D Canvas-space position.\n\nAn Pin automatically recalculates these coordinates whenever its {{#crossLink \"Entity\"}}{{/crossLink}} is replaced or transformed, the {{#crossLink \"Geometry\"}}{{/crossLink}} is replaced or modified, or the {{#crossLink \"Camera\"}}{{/crossLink}} is moved.\n\n#### Visibility\n\n* {{#crossLink \"Pin/occludable:property\"}}{{/crossLink}} specifies whether the Pin becomes invisible whenever its occluded by other objects in the 3D view, and\n* {{#crossLink \"Pin/visible:property\"}}{{/crossLink}} indicates if the Pins is currently visible.\n\n* To determine if each Pin is occluded, xeogl renders the scene to a hidden framebuffer, along with a colored point for each Pin's position. Then xeogl determines each Pin to be occluded if the pixel at its position does not match the special pin color. The color is configured as some unusual color that is not used elsewhere in the scene.\n\n## Example\n\nIn the example below we'll create an {{#crossLink \"Entity\"}}{{/crossLink}} with a {{#crossLink \"TorusGeometry\"}}{{/crossLink}}, then attach a Pin to it. Then we'll subscribe to changes to the Pin's position and visibility status.\n````javascript\nvar entity = new xeogl.Entity({\n   geometry: new xeogl.TorusGeometry(),\n   transform: new xeogl.Translate({\n       xyz: [0,0,0]\n   });\n});\n\nvar pin = new xeogl.Pin({\n   entity: entity,\n   primIndex: 12,              // Triangle index in Geometry indices array\n   bary: [0.11, 0.79, 0.08]    // Barycentric coordinates in the triangle\n});\n\nvar localPos   = pin.localPos;     // 3D Local-space position\nvar worldPos   = pin.worldPos;     // 3D World-space position\nvar viewPos    = pin.viewPos;      // 3D View-space position\nvar canvasPos  = pin.canvasPos;    // 2D Canvas-space position\n\n// Listen for change of the Pin's Local-space cartesian position,\n// which is caused by modification of Pin's Geometry or update to\n// the Pin's 'primIndex' or 'bary' properties.\npin.on(\"localPos\", function() {\n   //...\n});\n\n// Listen for change of the Pin's World-space cartesian position,\n// which is caused by update of Pin's Local-space position or by\n// animation of the Entity by its modelling Transform.\npin.on(\"worldPos\", function() {\n   //...\n});\n\n// Listen for change of Pin visibility. The Pin becomes invisible when it\n// falls outside the canvas, or when an object occludes the Pin's position\n// in the 3D view.\npin.on(\"visible\", function(visible) { // Pin visibility has changed\n   if (visible) {\n       this.log(\"Pin is not occluded and within canvas.\");\n   } else {\n       this.log(\"Pin is either occluded or is off the canvas.\");\n   }\n});\n````",
            "submodule": "annotations",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Pin in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Pin.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "entity",
                            "description": "ID or instance of the {{#crossLink \"Entity\"}}{{/crossLink}} the Pin is attached to.",
                            "type": "Number|String|Entity",
                            "optional": true
                        },
                        {
                            "name": "primIndex",
                            "description": "Index of the triangle containing the Pin. Within the {{#crossLink \"Entity\"}}Entity's{{/crossLink}} {{#crossLink \"Geometry/indices:property\"}}Geometry indices{{/crossLink}}, this is the index of the first vertex for the triangle.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "bary",
                            "description": "Barycentric coordinates of the Pin within its triangle.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.3,0.3,0.3]"
                        },
                        {
                            "name": "offset",
                            "description": "How far the Pin is lifted out of its triangle, along the surface normal vector. This is used when occlusion culling, to ensure that the Pin is not lost inside the surface it's attached to.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.2"
                        },
                        {
                            "name": "occludable",
                            "description": "Indicates whether occlusion testing is performed for the Pin, where it will be flagged invisible whenever it's hidden by something else in the 3D view.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Region": {
            "name": "Region",
            "shortname": "Region",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/annotations/region.js",
            "line": 1,
            "description": "Helper that visualizes the position and direction of a plane.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "pos",
                            "description": "World-space position.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "dir",
                            "description": "World-space direction vector.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,1]"
                        },
                        {
                            "name": "color",
                            "description": "Emmissive color",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.4,0.4,0.4]"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "planeSize",
                            "description": "The width and height of the Region plane indicator.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "autoPlaneSize",
                            "description": "Indicates whether or not this Region's\n {{#crossLink \"Region/planeSize:property\"}}{{/crossLink}} is automatically sized to fit within\n the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "Ruler": {
            "name": "Ruler",
            "shortname": "Ruler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/annotations/ruler.js",
            "line": 1,
            "description": "Helper that visualizes the position and direction of a plane.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "pos",
                            "description": "World-space position.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "dir",
                            "description": "World-space direction vector.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,1]"
                        },
                        {
                            "name": "color",
                            "description": "Emmissive color",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.4,0.4,0.4]"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "planeSize",
                            "description": "The width and height of the Ruler plane indicator.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "autoPlaneSize",
                            "description": "Indicates whether or not this Ruler's\n {{#crossLink \"Ruler/planeSize:property\"}}{{/crossLink}} is automatically sized to fit within\n the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "MousePickControl": {
            "name": "MousePickControl",
            "shortname": "MousePickControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/controls/mousePickControl.js",
            "line": 1,
            "description": "TODO - notes:\n* Only picks what is subscribed for (ie surface vs object)",
            "submodule": "controls",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePickControl.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to control.\n Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MousePickControl. Defaults to the\n parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this MousePickControl is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "firstPerson",
                    "description": "Whether or not this MousePickControl is in \"first person\" mode.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "extends": "Component"
        },
        "CardboardEffect": {
            "name": "CardboardEffect",
            "shortname": "CardboardEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 1,
            "description": "A **CardboardEffect** sets up a stereo view for its {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n<a href=\"../../examples/#effects_CardboardEffect\"><img src=\"../../assets/images/screenshots/CardboardEffect.png\"></img></a>\n\n## Overview\n\n* Work-in-progress\n* Uses asymmetric frustum technique described in [this article by Paul Bourke](http://paulbourke.net/stereographics/stereorender/).\n\n<img src=\"../../../assets/images/CardboardEffect.png\"></img>\n\n## Examples\n\n* [Stereo view using a CardboardEffect](../../examples/#effects_CardboardEffect)\n\n## Usage\n\nStereo view of an {{#crossLink \"Entity\"}}{{/crossLink}} using the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Camera\"}}{{/crossLink}} and {{#crossLink \"Viewport\"}}{{/crossLink}}:\n\n````javascript\n// Both the Entity and the CardboardEffect use their Scene's default Camera and Viewport\n\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry()\n});\n\nvar CardboardEffect = new xeogl.CardboardEffect({\n    fov: 45, // Default\n    active: true // Default\n});\n````\n\nStereo view of an {{#crossLink \"Entity\"}}{{/crossLink}} using a custom {{#crossLink \"Camera\"}}{{/crossLink}} and {{#crossLink \"Viewport\"}}{{/crossLink}}:\n\n````javascript\nvar camera = new xeogl.Camera({\n    view: new xeogl.Lookat({\n        eye: [0, 0, 10],\n        look: [0, 0, 0],\n        up: [0, 1, 0]\n    }),\n    project: new xeogl.Frustum()\n});\n\nvar viewport = new xeogl.Viewport();\n\nvar entity = new xeogl.Entity({\n    camera: camera,\n    viewport: viewport,\n    geometry: new xeogl.TorusGeometry()\n});\n\nvar CardboardEffect = new xeogl.CardboardEffect({\n    camera: camera,\n    viewport: viewport,\n    fov: 45, // Default\n    active: true // Default\n});\n````",
            "submodule": "effects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this CardboardEffect in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CardboardEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} for this CardboardEffect.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CardboardEffect. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "viewport",
                            "description": "ID or instance of a {{#crossLink \"Viewport\"}}Viewport{{/crossLink}} for this CardboardEffect.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this CardboardEffect. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/viewport:property\"}}viewport{{/crossLink}}.",
                            "type": "String|Viewport",
                            "optional": true
                        },
                        {
                            "name": "fov",
                            "description": "fov angle in degrees.",
                            "optional": true,
                            "optdefault": "45"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this CardboardEffect is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Entity"
        },
        "StereoEffect": {
            "name": "StereoEffect",
            "shortname": "StereoEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/effects/stereoEffect.js",
            "line": 1,
            "description": "A **StereoEffect** sets up a stereo view for its {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n<a href=\"../../examples/#effects_stereo\"><img src=\"../../assets/images/screenshots/StereoEffect.png\"></img></a>\n\n## Overview\n\n* Based on technique described in [this article by Paul Bourke](http://paulbourke.net/stereographics/stereorender/).\n\n<img src=\"../../../assets/images/StereoEffect.png\"></img>\n\n## Examples\n\n* [Stereo view using a StereoEffect](../../examples/#effects_stereo)\n\n## Usage\n\nStereo view of an {{#crossLink \"Entity\"}}{{/crossLink}} using the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Camera\"}}{{/crossLink}} and {{#crossLink \"Viewport\"}}{{/crossLink}}:\n\n````javascript\n// Both the Entity and the StereoEffect use their Scene's default Camera and Viewport\n\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry()\n});\n\nvar stereoEffect = new xeogl.StereoEffect({\n    fov: 45, // Default\n    active: true // Default\n});\n````\n\nStereo view of an {{#crossLink \"Entity\"}}{{/crossLink}} using a custom {{#crossLink \"Camera\"}}{{/crossLink}} and {{#crossLink \"Viewport\"}}{{/crossLink}}:\n\n````javascript\nvar camera = new xeogl.Camera({\n    view: new xeogl.Lookat({\n        eye: [0, 0, 10],\n        look: [0, 0, 0],\n        up: [0, 1, 0]\n    }),\n    project: new xeogl.Frustum()\n});\n\nvar viewport = new xeogl.Viewport();\n\nvar entity = new xeogl.Entity({\n    camera: camera,\n    viewport: viewport,\n    geometry: new xeogl.TorusGeometry()\n});\n\nvar stereoEffect = new xeogl.StereoEffect({\n    camera: camera,\n    viewport: viewport,\n    fov: 45, // Default\n    active: true // Default\n});\n````",
            "submodule": "effects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this StereoEffect in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this StereoEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} for this StereoEffect.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this StereoEffect. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "viewport",
                            "description": "ID or instance of a {{#crossLink \"Viewport\"}}Viewport{{/crossLink}} for this StereoEffect.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this StereoEffect. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/viewport:property\"}}viewport{{/crossLink}}.",
                            "type": "String|Viewport",
                            "optional": true
                        },
                        {
                            "name": "fov",
                            "description": "Field-of-view angle in degrees.",
                            "optional": true,
                            "optdefault": "45"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this StereoEffect is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Entity"
        },
        "CubicBezierCurve": {
            "name": "CubicBezierCurve",
            "shortname": "CubicBezierCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 1,
            "description": "A **CubicBezierCurve** is a {{#crossLink \"Curve\"}}{{/crossLink}} along which a 3D position can be animated.\n\n## Overview\n\n<ul>\n<li>As shown in the diagram below, a CubicBezierCurve is defined by four control points.</li>\n<li>You can sample a {{#crossLink \"CubicBezierCurve/point:property\"}}{{/crossLink}} and a {{#crossLink \"CubicBezierCurve/tangent:property\"}}{{/crossLink}}\nvector on a CubicBezierCurve for any given value of {{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}} in the range [0..1].</li>\n<li>When you set {{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}} on a CubicBezierCurve, its\n{{#crossLink \"CubicBezierCurve/point:property\"}}{{/crossLink}} and {{#crossLink \"CubicBezierCurve/tangent:property\"}}{{/crossLink}} properties\nwill update accordingly.</li>\n<li>To build a complex path, you can combine an unlimited combination of CubicBezierCurves,\n{{#crossLink \"QuadraticBezierCurve\"}}QuadraticBezierCurves{{/crossLink}} and {{#crossLink \"SplineCurve\"}}SplineCurves{{/crossLink}}\ninto a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n<img style=\"border:1px solid;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/B%C3%A9zier_3_big.gif/240px-B%C3%A9zier_3_big.gif\"/><br>\n*[Cubic Bezier Curve from WikiPedia](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)*\n\n## Examples\n\n<ul>\n<li>[CubicBezierCurve example](../../examples/#animation_curves_cubicBezier)</li>\n</ul>\n\n## Usage\n\n#### Animation along a CubicBezierCurve\n\nLet's create a CubicBezierCurve, subscribe to updates on its {{#crossLink \"CubicBezierCurve/point:property\"}}{{/crossLink}},\n{{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} and {{#crossLink \"Curve/t:property\"}}{{/crossLink}} properties,\nthen vary its {{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}}\nproperty over time:\n\n````javascript\nvar curve = new xeogl.CubicBezierCurve({\n    v0: [-10, 0, 0],\n    v1: [-5, 15, 0],\n    v2: [20, 15, 0],\n    v3: [10, 0, 0]\n});\n\ncurve.on(\"point\", function(point) {\n    this.log(\"curve.point=\" + JSON.stringify(point));\n});\n\ncurve.on(\"tangent\", function(tangent) {\n    this.log(\"curve.tangent=\" + JSON.stringify(tangent));\n});\n\ncurve.on(\"t\", function(t) {\n    this.log(\"curve.t=\" + t);\n});\n\ncurve.scene.on(\"tick\", function(e) {\n    curve.t = (e.time - e.startTime) * 0.01;\n});\n````\n\n#### Randomly sampling points\n\nUse CubicBezierCurve's {{#crossLink \"CubicBezierCurve/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"Curve/getTangent:method\"}}{{/crossLink}} methods to sample the point and vector\nat a given **t**:\n\n````javascript\ncurve.scene.on(\"tick\", function(e) {\n\n    var t = (e.time - e.startTime) * 0.01;\n\n    var point = curve.getPoint(t);\n    var tangent = curve.getTangent(t);\n\n    this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n});\n````\n\n#### Sampling multiple points\n\nUse CubicBezierCurve's {{#crossLink \"Curve/getPoints:method\"}}{{/crossLink}} method to sample a list of equidistant points\nalong it. In the snippet below, we'll build a {{#crossLink \"Geometry\"}}{{/crossLink}} that renders a line along the\ncurve.  Note that we need to flatten the points array for consumption by the {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n````javascript\nvar geometry = new xeogl.Geometry({\n    positions: xeogl.math.flatten(curve.getPoints(50))\n});\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this CubicBezierCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "v0",
                            "description": "The starting point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v1",
                            "description": "The first control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v2",
                            "description": "The middle control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v3",
                            "description": "The ending point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this CubicBezierCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "Curve": {
            "name": "Curve",
            "shortname": "Curve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/curve.js",
            "line": 1,
            "description": "**Curve** is the abstract base class for {{#crossLink \"SplineCurve\"}}{{/crossLink}},\n {{#crossLink \"CubicBezierCurve\"}}{{/crossLink}}, {{#crossLink \"QuadraticBezierCurve\"}}{{/crossLink}} and {{#crossLink \"Path\"}}{{/crossLink}}.\n## Examples\n<ul>\n <li>[CubicBezierCurve example](../../examples/#animation_curves_cubicBezier)</li>\n <li>[Tweening position along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier)</li>\n <li>[Tweening color along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier_color)</li>\n <li>[Simple SplineCurve example](../../examples/#animation_curves_spline)</li>\n <li>[Moving a PointLight along a SplineCurve](../../examples/#animation_lights_point_world)</li>\n <li>[Path example](../../examples/#curves_Path)</li>\n </ul>",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Curve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "t",
                            "description": "Current position on this Curve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Path": {
            "name": "Path",
            "shortname": "Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/path.js",
            "line": 1,
            "description": "A **Path** is a complex curved path constructed from various {{#crossLink \"Curve\"}}{{/crossLink}} subtypes.\n\n## Overview\n\n\n* A Path can be constructed from these {{#crossLink \"Curve\"}}{{/crossLink}} subtypes: {{#crossLink \"SplineCurve\"}}{{/crossLink}},\n{{#crossLink \"CubicBezierCurve\"}}{{/crossLink}} and {{#crossLink \"QuadraticBezierCurve\"}}{{/crossLink}}.\n* You can sample a {{#crossLink \"Path/point:property\"}}{{/crossLink}} and a {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}}\nvector on a Path for any given value of {{#crossLink \"Path/t:property\"}}{{/crossLink}} in the range [0..1].\n* When you set {{#crossLink \"Path/t:property\"}}{{/crossLink}} on a Path, its\n{{#crossLink \"Path/point:property\"}}{{/crossLink}} and {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} properties\nwill update accordingly.\n\n## Examples\n\n* [CubicBezierCurve example](../../examples/#animation_curves_cubicBezier)\n* [Tweening position along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier)\n* [Tweening color along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier_color)\n* [SplineCurve example](../../examples/#animation_curves_spline)\n* [Path example](../../examples/#curves_Path)\n\n## Usage\n\n#### Animation along a SplineCurve\n\nCreate a Path containing a {{#crossLink \"CubicBezierCurve\"}}{{/crossLink}}, a {{#crossLink \"QuadraticBezierCurve\"}}{{/crossLink}}\nand a {{#crossLink \"SplineCurve\"}}{{/crossLink}}, subscribe to updates on its {{#crossLink \"Path/point:property\"}}{{/crossLink}} and\n{{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} properties, then vary its {{#crossLink \"Path/t:property\"}}{{/crossLink}}\nproperty over time:\n\n````javascript\nvar path = new xeogl.Path({\n    curves: [\n        new xeogl.CubicBezierCurve({\n            v0: [-10, 0, 0],\n            v1: [-5, 15, 0],\n            v2: [20, 15, 0],\n            v3: [10, 0, 0]\n        }),\n        new xeogl.QuadraticBezierCurve({\n            v0: [10, 0, 0],\n            v1: [20, 15, 0],\n            v2: [10, 0, 0]\n        }),\n        new xeogl.SplineCurve({\n            points: [\n                [10, 0, 0],\n                [-5, 15, 0],\n                [20, 15, 0],\n                [10, 0, 0]\n            ]\n        })\n    ]\n});\n\npath.on(\"point\", function(point) {\n    this.log(\"path.point=\" + JSON.stringify(point));\n});\n\npath.on(\"tangent\", function(tangent) {\n    this.log(\"path.tangent=\" + JSON.stringify(tangent));\n});\n\npath.on(\"t\", function(t) {\n    this.log(\"path.t=\" + t);\n});\n\npath.scene.on(\"tick\", function(e) {\n    path.t = (e.time - e.startTime) * 0.01;\n});\n````\n\n#### Randomly sampling points\n\nUse Path's {{#crossLink \"Path/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"path/getTangent:method\"}}{{/crossLink}} methods to sample the point and vector\nat a given **t**:\n\n````javascript\npath.scene.on(\"tick\", function(e) {\n\n    var t = (e.time - e.startTime) * 0.01;\n\n    var point = path.getPoint(t);\n    var tangent = path.getTangent(t);\n\n    this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n});\n````\n\n#### Sampling multiple points\n\nUse Path's {{#crossLink \"path/getPoints:method\"}}{{/crossLink}} method to sample a list of equidistant points\nalong it. In the snippet below, we'll build a {{#crossLink \"Geometry\"}}{{/crossLink}} that renders a line along the\npath.  Note that we need to flatten the points array for consumption by the {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n````javascript\nvar geometry = new xeogl.Geometry({\n    positions: xeogl.math.flatten(path.getPoints(50))\n});\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Fly configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Path.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "paths",
                            "description": "IDs or instances of }{{/crossLink}} subtypes to add to this Path.",
                            "type": "#crossLink \"path\"",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this Path, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "path"
        },
        "QuadraticBezierCurve": {
            "name": "QuadraticBezierCurve",
            "shortname": "QuadraticBezierCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 1,
            "description": "A **QuadraticBezierCurve** is a {{#crossLink \"Curve\"}}{{/crossLink}} along which a 3D position can be animated.\n\n## Overview\n\n<ul>\n   <li>As shown in the diagram below, a QuadraticBezierCurve is defined by three control points.</li>\n<li>You can sample a {{#crossLink \"QuadraticBezierCurve/point:property\"}}{{/crossLink}} and a {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}}\nvector on a QuadraticBezierCurve for any given value of {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} in the range [0..1].</li>\n<li>When you set {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} on a QuadraticBezierCurve, its\n{{#crossLink \"QuadraticBezierCurve/point:property\"}}{{/crossLink}} and {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} properties\nwill update accordingly.</li>\n   <li>To build a complex path, you can combine an unlimited combination of QuadraticBezierCurves,\n{{#crossLink \"CubicBezierCurve\"}}CubicBezierCurves{{/crossLink}} and {{#crossLink \"SplineCurve\"}}SplineCurves{{/crossLink}}\ninto a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n<img style=\"border:1px solid;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/B%C3%A9zier_2_big.gif/240px-B%C3%A9zier_2_big.gif\"/><br>\n*[Quadratic Bezier Curve from WikiPedia](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)*\n\n## Examples\n\n<ul>\n<li>[Tweening position along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier)</li>\n<li>[Tweening color along a QuadraticBezierCurve](../../examples/#animation_curves_quadraticBezier_color)</li>\n<li>[Path example](../../examples/#curves_Path)</li>\n</ul>\n\n## Usage\n\n#### Animation along a QuadraticBezierCurve\n\nLet's create a QuadraticBezierCurve, subscribe to updates on its {{#crossLink \"QuadraticBezierCurve/point:property\"}}{{/crossLink}},\n{{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} and {{#crossLink \"Curve/t:property\"}}{{/crossLink}} properties,\nthen vary its {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}}\nproperty over time:\n\n````javascript\nvar curve = new xeogl.QuadraticBezierCurve({\n    v0: [10, 0, 0],\n    v1: [20, 15, 0],\n    v2: [10, 0, 0]\n});\n\ncurve.on(\"point\", function(point) {\n    this.log(\"curve.point=\" + JSON.stringify(point));\n});\n\ncurve.on(\"tangent\", function(tangent) {\n    this.log(\"curve.tangent=\" + JSON.stringify(tangent));\n});\n\ncurve.on(\"t\", function(t) {\n    this.log(\"curve.t=\" + t);\n});\n\ncurve.scene.on(\"tick\", function(e) {\n    curve.t = (e.time - e.startTime) * 0.01;\n});\n````\n\n#### Randomly sampling points\n\nUse QuadraticBezierCurve's {{#crossLink \"QuadraticBezierCurve/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"Curve/getTangent:method\"}}{{/crossLink}} methods to sample the point and vector\nat a given **t**:\n\n````javascript\ncurve.scene.on(\"tick\", function(e) {\n\n    var t = (e.time - e.startTime) * 0.01;\n\n    var point = curve.getPoint(t);\n    var tangent = curve.getTangent(t);\n\n    this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n});\n````\n\n#### Sampling multiple points\n\nUse QuadraticBezierCurve's {{#crossLink \"Curve/getPoints:method\"}}{{/crossLink}} method to sample a list of equidistant points\nalong it. In the snippet below, we'll build a {{#crossLink \"Geometry\"}}{{/crossLink}} that renders a line along the\ncurve.  Note that we need to flatten the points array for consumption by the {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n````javascript\nvar geometry = new xeogl.Geometry({\n    positions: xeogl.math.flatten(curve.getPoints(50))\n});\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this QuadraticBezierCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "v0",
                            "description": "The starting point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v1",
                            "description": "The middle control point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "v2",
                            "description": "The end point.",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this QuadraticBezierCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "SplineCurve": {
            "name": "SplineCurve",
            "shortname": "SplineCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/curves/splineCurve.js",
            "line": 1,
            "description": "A **SplineCurve** is a {{#crossLink \"Curve\"}}{{/crossLink}} along which a 3D position can be animated.\n\n## Overview\n\n<ul>\n<li>As shown in the diagram below, a SplineCurve is defined by three or more control points.</li>\n<li>You can sample a {{#crossLink \"SplineCurve/point:property\"}}{{/crossLink}} and a {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}}\nvector on a SplineCurve for any given value of {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}} in the range [0..1].</li>\n<li>When you set {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}} on a SplineCurve, its {{#crossLink \"SplineCurve/point:property\"}}{{/crossLink}} and {{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} properties will update accordingly.</li>\n<li>To build a complex path, you can combine an unlimited combination of SplineCurves,\n{{#crossLink \"CubicBezierCurve\"}}CubicBezierCurves{{/crossLink}} and {{#crossLink \"QuadraticBezierCurve\"}}QuadraticBezierCurves{{/crossLink}}\ninto a {{#crossLink \"Path\"}}{{/crossLink}}.</li>\n</ul>\n\n<img style=\"border:1px solid; background: white;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Quadratic_spline_six_segments.svg/200px-Quadratic_spline_six_segments.svg.png\"/><br>\n*<a href=\"https://en.wikipedia.org/wiki/Spline_(mathematics)\">Spline Curve from Wikipedia</a>*\n\n## Examples\n\n<ul>\n<li>[Simple SplineCurve example](../../examples/#animation_curves_spline)</li>\n<li>[Moving a PointLight along a SplineCurve](../../examples/#animation_curves_spline_pointLight)</li>\n<li>[Path example](../../examples/#animation_curves_path)</li>\n</ul>\n\n## Usage\n\n#### Animation along a SplineCurve\n\nLet's create a SplineCurve, subscribe to updates on its {{#crossLink \"SplineCurve/point:property\"}}{{/crossLink}},\n{{#crossLink \"Curve/tangent:property\"}}{{/crossLink}} and {{#crossLink \"Curve/t:property\"}}{{/crossLink}} properties,\nthen vary its {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}}\nproperty over time:\n\n````javascript\nvar curve = new xeogl.SplineCurve({\n    points: [\n        [-10, 0, 0],\n        [-5, 15, 0],\n        [20, 15, 0],\n        [10, 0, 0]\n    ]\n});\n\ncurve.on(\"point\", function(point) {\n    this.log(\"curve.point=\" + JSON.stringify(point));\n});\n\ncurve.on(\"tangent\", function(tangent) {\n    this.log(\"curve.tangent=\" + JSON.stringify(tangent));\n});\n\ncurve.on(\"t\", function(t) {\n    this.log(\"curve.t=\" + t);\n});\n\ncurve.scene.on(\"tick\", function(e) {\n    curve.t = (e.time - e.startTime) * 0.01;\n});\n````\n\n#### Randomly sampling points\n\nUse SplineCurve's {{#crossLink \"SplineCurve/getPoint:method\"}}{{/crossLink}} and\n{{#crossLink \"Curve/getTangent:method\"}}{{/crossLink}} methods to sample the point and vector\nat a given **t**:\n\n````javascript\ncurve.scene.on(\"tick\", function(e) {\n\n    var t = (e.time - e.startTime) * 0.01;\n\n    var point = curve.getPoint(t);\n    var tangent = curve.getTangent(t);\n\n    this.log(\"t=\" + t + \", point=\" + JSON.stringify(point) + \", tangent=\" + JSON.stringify(tangent));\n});\n````\n\n#### Sampling multiple points\n\nUse SplineCurve's {{#crossLink \"Curve/getPoints:method\"}}{{/crossLink}} method to sample a list of equidistant points\nalong it. In the snippet below, we'll build a {{#crossLink \"Geometry\"}}{{/crossLink}} that renders a line along the\ncurve.  Note that we need to flatten the points array for consumption by the {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n````javascript\nvar geometry = new xeogl.Geometry({\n    positions: xeogl.math.flatten(curve.getPoints(50))\n});\n````",
            "submodule": "curves",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SplineCurve.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "points",
                            "description": "Control points on this SplineCurve.",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "t",
                            "description": "Current position on this SplineCurve, in range between 0..1.",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Curve"
        },
        "GeometryBuilder": {
            "name": "GeometryBuilder",
            "shortname": "GeometryBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 1,
            "description": "A **GeometryBuilder** is a builder that you can use to procedurally generate {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_generation_wavyBlocks\"><img src=\"http://i.giphy.com/26gJAMkOxAW5fWlb2.gif\"></img></a>\n\n## Overview\n\n* Implements the [Builder pattern](https://en.wikipedia.org/wiki/Builder_pattern).\n* Helps us improve WebGL performance by combining many shapes into the same {{#crossLink \"Geometry\"}}Geometries{{/crossLink}},\nthus reducing the number of draw calls.\n* A plain JavaScript class, ie. not a xeogl {{#crossLink \"Component\"}}{{/crossLink}} subclass.\n\n## Examples\n\n* [Generating a 3D sine wave from boxes](../../examples/#geometry_generation_wavyBlocks)\n\n## Usage\n\n* Works by accumulating additions to an internal buffer of geometry vertex and index arrays.\n* Call {{#crossLink \"GeometryBuilder/setShape:method\"}}setShape(){{/crossLink}} to set its current mesh, and\n{{#crossLink \"GeometryBuilder/setMatrix:method\"}}setMatrix(){{/crossLink}} to set its current modelling transform.\n* Then, whenever you call {{#crossLink \"GeometryBuilder/addShape:method\"}}addShape(){{/crossLink}}, it appends the shape, transformed\nby the matrix, to its internal buffer.\n* Finally, call {{#crossLink \"GeometryBuilder/build:method\"}}build(){{/crossLink}} to dump its buffer into a target {{#crossLink \"Geometry\"}}{{/crossLink}}.\n* Retains its buffer so that you can call {{#crossLink \"GeometryBuilder/build:method\"}}build(){{/crossLink}} again, to dump its\n buffer into other {{#crossLink \"Geometry\"}}Geometries{{/crossLink}} as needed.\n* Call {{#crossLink \"GeometryBuilder/reset:method\"}}reset(){{/crossLink}} to empty its buffer.\n\nIn the example below we'll use a GeometryBuilder to create something like the screen capture shown above.\n\n````javascript\n// Intatiate a GeometryBuilder; note that it's a\n// plain JavaScript object, not a xeogl Component subtype\nvar geometryBuilder = new xeogl.GeometryBuilder();\n\n// Set the current shape we'll be adding to our GeometryBuilder;\n// this can be a Geometry, or just an object containing vertex and indices arrays.\ngeometryBuilder.setShape(new xeogl.BoxGeometry());\n\n// Now add that shape many times, each time setting a different modelling matrix\n// on the GeometryBuilder. As we do this, we are accumulating geometry in a buffer\n// within the GeometryBuilder.\n\nvar matrix = xeogl.math.mat4();\nvar height = 3;\nvar height2 = height * 2;\nvar x;\nvar y;\nvar z;\nvar size = 200;\n\nfor (x = -size; x <= size; x += 2) {\n    for (z = -size; z <= size; z += 2) {\n\n       y = ((Math.sin(x * 0.05) * height + Math.sin(z * 0.05) * height)) + height2;\n\n       xeogl.math.identityMat4(matrix);            // Fresh matrix\n       xeogl.math.scaleMat4c(.90, y, .90, matrix); // Post-concatenate scaling\n       xeogl.math.translateMat4c(x, y, z, matrix); // Post-concatenate translation\n\n       geometryBuilder.setMatrix(matrix);          // Set the current modeling transform matrix\n\n       geometryBuilder.addShape();                 // Add current shape to the buffer, transformed by the matrix\n    }\n}\n\nvar geometry = new xeogl.Geometry();               // Dump the buffer into a Geometry component\n\ngeometryBuilder.build(geometry);\n\nvar entity = new xeogl.Entity({                    // Create an Entity with our Geometry attached\n   geometry: geometry,\n   material: new xeogl.PhongMaterial({\n       diffuse: [0.6, 0.6, 0.7]\n   })\n});\n\nentity.scene.camera.view.eye = [-200, 50, -200];   // Set initial Camera position\n\nnew xeogl.InputControl();                         // Allow camera interaction\n````",
            "submodule": "generation",
            "is_constructor": 1
        },
        "Skybox": {
            "name": "Skybox",
            "shortname": "Skybox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/skyboxes/skybox.js",
            "line": 1,
            "description": "A **Skybox** is a textured box that does not translate with respect to the\n{{#crossLink \"Lookat\"}}viewing transform{{/crossLink}}, to a provide the appearance of a background\nfor associated {{#crossLink \"Entities\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#skyboxes_skybox\"><img src=\"http://i.giphy.com/3o7TKIBOOCEC5gJ224.gif\"></img></a>\n\n## Examples\n\n<ul>\n<li>[Basic Skybox](../../examples/#skyboxes_skybox)</li>\n<li>[Custom Skybox](../../examples/#skyboxes_skybox_custom)</li>\n</ul>\n\n## Usage\n\nIn the example below we're going to create twenty randomly-positioned and colored {{#crossLink \"Entity\"}}Entities{{/crossLink}}\nand wrap them in a Skybox. The Skybox will use the texture image shown below, and the result will appear like the screen capture shown above.\n\n<img src=\"../../assets/images/skyboxMiramarClouds.jpg\">\n\n````javascript\n// A bunch of random cube Entities\n\n// Share this BoxGeometry among the Entities\nvar boxGeometry = new BoxGeometry();\n\nfor (var i = 0; i < 20; i++) {\n       new xeogl.Entity({\n           geometry: boxGeometry,\n           transform: new xeogl.Translate({\n               xyz: [\n                   Math.random() * 15 - 7,\n                   Math.random() * 15 - 7,\n                   Math.random() * 15 - 7\n               ]\n           }),\n           material: new xeogl.PhongMaterial({\n               diffuse: [\n                   Math.random(),\n                   Math.random(),\n                   Math.random()\n               ]\n           })\n       });\n   }\n\n// A Skybox that wraps our Entities in a cloudy background\nvar skybox = new xeogl.Skybox({\n       src: \"textures/skybox/miramarClouds.jpg\",\n       size: 1000 // Default\n   });\n\n// Get the default Scene off the Skybox\nvar scene = skybox.scene;\n\n// Move the camera back a bit\nscene.camera.view.eye = [0, 0, -30];\n\n// Slowly orbit the camera on each frame\nscene.on(\"tick\", function () {\n        scene.camera.view.rotateEyeY(0.2);\n    });\n````",
            "submodule": "skyboxes",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Skybox within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Skybox configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Skybox.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to skybox texture",
                            "type": "String",
                            "optional": true,
                            "optdefault": "[null]"
                        },
                        {
                            "name": "size",
                            "description": "to each face.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1000]  Size of this Skybox, given as the distance from the center at [0,0,0"
                        },
                        {
                            "name": "active",
                            "description": "True when this Skybox is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "AnnotationStory": {
            "name": "AnnotationStory",
            "shortname": "AnnotationStory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/stories/annotationStory.js",
            "line": 44,
            "description": "An **AnnotationStory** is a  {{#crossLink \"Story\"}}{{/crossLink}} that contains a list\nof {{#crossLink \"Annotation\"}}Annotations{{/crossLink}} accompanied by a panel of text containing links that activate them.\n\n<a href=\"../../examples/#annotations_stories_tronTank\"><img src=\"../../assets/images/screenshots/tronTankAnnotationStory.jpg\"></img></a>\n\n* AnnotationStory text is provided as markdown.\n* Words in the text can be linked to xeogl storytelling functions, to fly the camera to Annotation vantage points, show labels etc.\n\n## Authoring Mode\n\n* SHIFT-click to place an Annotation\n* ESC to clear\n* ENTER to dump\n\n## Examples\n\n* [Tron Tank Program AnnotationStory](../../examples/#annotations_stories_tronTank)\n\n## Usage\n\n````javascript\n// Load a Tron Tank model from SceneJS format. Give the model an ID - this\n// gets prefixed to the IDs of it's Entities.\n\nvar model = new xeogl.SceneJSModel({\n       id: \"tank\",\n       src: \"models/scenejs/tronTank/tronTank.json\"\n   });\n\nmodel.scene.camera.view.eye = [15, 20, -25];\n\n// When the model has loaded, create a story with annotations\n\nmodel.on(\"loaded\", function () {\n\n   new xeogl.AnnotationStory({\n       speaking: false, // Set true to have a voice announce each annotation\n       authoring: true, // Set true to author the annotations\n       text: [\n           \"# [Stories](../docs/classes/AnnotationStory.html) : Tron Tank Program\",\n           \"This is a Light Tank from the 1982 Disney movie *Tron*.\",\n           \"The [orange tracks](focusAnnotation(0)) on this tank indicate that ....\",\n           \"![](./images/Clu_Program.png)\",\n           \"The [cannon](focusAnnotation(1)) is the tank's main armament, which  ....\",\n           \"The [pilot hatch](focusAnnotation(2)) is where Clu enters and exits the tank.\",\n           \"At the back of the tank is the [antenna](focusAnnotation(3)) through ....\",\n           \"*\\\"I fight for the users!\\\" -- Clu*\"\n       ],\n       annotations: [\n           {\n               primIndex: 204,\n               bary: [0.05, 0.16, 0.79],\n               occludable: true,\n               glyph: \"A\",\n               title: \"Orange tracks\",\n               desc: \"Indicates that the pilot is the rebel hacker, Clu\",\n               eye: [14.69, 17.89, -26.88],\n               look: [5.35, 4.14, -15.44],\n               up: [-0.09, 0.99, 0.11],\n               pinShown: true,\n               labelShown: true,\n               entity: \"tank.entity2\"\n           },\n           {\n               primIndex: 468,\n               bary: [0.05, 0.16, 0.79],\n               occludable: true,\n               glyph: \"B\",\n               title: \"Cannon\",\n               desc: \"Fires chevron-shaped bolts of de-rezzing energy\",\n               eye: [-0.66, 20.84, -21.59],\n               look: [-0.39, 6.84, -9.18],\n               up: [0.01, 0.97, 0.24],\n               pinShown: true,\n               labelShown: true,\n               entity: \"tank.entity9\"\n           },\n           {\n               primIndex: 216,\n               bary: [0.05, 0.16, 0.79],\n               occludable: true,\n               glyph: \"C\",\n               title: \"Pilot hatch\",\n               desc: \"Clu hops in and out of the tank program here\",\n               eye: [1.48, 11.79, -15.13],\n               look: [1.62, 5.04, -9.14],\n               up: [0.01, 0.97, 0.24],\n               pinShown: true,\n               labelShown: true,\n               entity: \"tank.entity6\"\n           },\n           {\n               primIndex: 4464,\n               bary: [0.05, 0.16, 0.79],\n               occludable: true,\n               glyph: \"D\",\n               title: \"Antenna\",\n               desc: \"Links the tank program to the Master Control Program\",\n               eye: [13.63, 16.79, 13.87],\n               look: [1.08, 7.72, 3.07],\n               up: [0.08, 0.99, 0.07],\n               pinShown: true,\n               labelShown: true,\n               entity: \"tank.entity9\"\n           }\n       ]\n   });\n});\n````",
            "submodule": "stories",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this AnnotationStory in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AnnotationStory.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Story"
        },
        "Story": {
            "name": "Story",
            "shortname": "Story",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/stories/story.js",
            "line": 5,
            "description": "A **Story** defines a panel of text generated from markdown.\n\nStory is the base class for:\n\n* {{#crossLink \"AnnotationStory\"}}{{/crossLink}} - a list of\n{{#crossLink \"Annotation\"}}Annotations{{/crossLink}} accompanied by a panel of text containing links\nthat activate them.",
            "submodule": "stories",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Story in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Story.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "text",
                            "description": "Story text in markdown format.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "HeightmapGeometry": {
            "name": "HeightmapGeometry",
            "shortname": "HeightmapGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 1,
            "description": "A **Heightmap** extends {{#crossLink \"Geometry\"}}{{/crossLink}} to define a height mapped geometry for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_heightmap\"><img src=\"../../assets/images/screenshots/HeightmapGeometry.png\"></img></a>\n\n## Overview\n\n* A HeightmapGeometry is a grid shape, to which the Y-axis is perpendicular.\n* The height of each vertex on the Y-axis is determined by the image file referenced by the HeightmapGeometry's {{#crossLink \"HeightmapGeometry/src:property\"}}{{/crossLink}} property.\n* Set the {{#crossLink \"HeightmapGeometry/src:property\"}}{{/crossLink}} property to a different image file at any time, to regenerate the HeightmapGeometry's mesh from the new image.\n* Also dynamically modify it's shape at any time by updating its {{#crossLink \"HeightmapGeometry/center:property\"}}{{/crossLink}}, {{#crossLink \"HeightmapGeometry/xSize:property\"}}{{/crossLink}}, {{#crossLink \"HeightmapGeometry/ySize:property\"}}{{/crossLink}}, {{#crossLink \"HeightmapGeometry/zSize:property\"}}{{/crossLink}}, {{#crossLink \"HeightmapGeometry/xSegments:property\"}}{{/crossLink}},  {{#crossLink \"HeightmapGeometry/zSegments:property\"}}{{/crossLink}} and\n{{#crossLink \"Geometry/autoNormals:property\"}}{{/crossLink}} properties.\n* Dynamically switch its primitive type between ````\"points\"````, ````\"lines\"```` and ````\"triangles\"```` at any time by\nupdating its {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property.\n* Leave its {{#crossLink \"Geometry/autoNormals:property\"}}{{/crossLink}} property ````true```` to make it automatically generate its vertex normal vectors.\n\n## Examples\n\n* [Textured HeightmapGeometry](../../examples/#geometry_primitives_heightmap)\n\n## Usage\n\n````javascript\nnew xeogl.Entity({\n    geometry: new xeogl.HeightmapGeometry({\n        primitive: \"triangles\",\n        src: \"textures/height/mountain.png\",\n        center: [0,0,0],\n        xSize: 10,\n        ySize: 5,\n        zSize: 10,\n        xSegments: 70,\n        zSegments: 70,\n        lod: 1.0, // Default\n        autoNormals: true // Default\n    }),\n    material: new xeogl.PhongMaterial({\n        diffuseMap: new xeogl.Texture({\n            src: \"textures/diffuse/uvGrid2.jpg\"\n        }),\n        backfaces: true // So that we can see the faces from underneath\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Heightmap in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Heightmap.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "src",
                            "description": "Path to an image file to source this Heightmap from.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "image",
                            "description": "An HTML DOM Image object to source this Heightmap from.",
                            "type": "HTMLImageElement",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "center",
                            "description": "3D point indicating the center position of the BoxGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "xSize",
                            "description": "Dimension on the X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "ySize",
                            "description": "Dimension on the Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.25"
                        },
                        {
                            "name": "zSize",
                            "description": "Dimension (height) on the Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "xSegments",
                            "description": "Number of segments on the X-axis (width).",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "zSegments",
                            "description": "Number of segments on the Z-axis (depth).",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "autoNormals",
                            "description": "Automatically generate vertex normal vectors when true.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "lod",
                            "description": ".",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1]  Level-of-detail, in range [0..1"
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Nintendo3DSGeometry": {
            "name": "Nintendo3DSGeometry",
            "shortname": "Nintendo3DSGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/nintendo3DSGeometry.js",
            "line": 5,
            "description": "A **Nintendo3DSGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that's loaded from a\n<a href=\"https://en.wikipedia.org/wiki/Nintendo_3DS\">Nintendo 3DS</a> file.\n\n<a href=\"../../examples/#importing_3ds_lexus\"><img src=\"../../assets/images/screenshots/Nintendo3DSGeometry.png\"></img></a>\n\n## Overview\n\n* A Nintendo3DSGeometry mesh is defined by the .3DS file referenced by the Nintendo3DSGeometry's {{#crossLink \"Nintendo3DSGeometry/src:property\"}}{{/crossLink}} property.\n* Set the {{#crossLink \"Nintendo3DSGeometry/src:property\"}}{{/crossLink}} property to a different file at any time, to regenerate the Nintendo3DSGeometry's mesh from the new file.\n* Internally uses the <a href=\"http://k3d.ivank.net/\">k3d.js</a> library for parsing .3DS files.\n\n## Examples\n\n<ul>\n<li>[Importing a Lexus from 3DS](../../examples/#importing_3ds_lexus)</li>\n</ul>\n\n## Usage\n\n````javascript\nvar entity = new xeogl.Entity({\n\n   geometry: new xeogl.Nintendo3DSGeometry({\n       src: \"models/3ds/lexus.3ds\"\n   }),\n\n   material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"models/3ds/lexus.jpg\"\n       }),\n       specular: [0, 0, 0]\n   }),\n\n   // We need to rotate this particular .3DS model\n   transform: new xeogl.Rotate({\n       xyz: [1,0,0],\n       angle: -90,\n       parent: new xeogl.Rotate({\n           xyz: [0,1,0],\n           angle: 90\n       })\n   })\n});\n\n// When the Nintendo3DSGeometry has loaded,\n// fly the camera to fit the entity in view\n\nvar cameraFlight = new xeogl.CameraFlightAnimation();\n\nentity.geometry.on(\"loaded\", function () {\n\n        cameraFlight.flyTo({\n            aabb: entity.worldBoundary.aabb\n        });\n    });\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Nintendo3DSGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Nintendo3DSGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to the .3DS file.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "autoNormals",
                            "description": "Set true to automatically generate normal vectors from positions and indices.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "OBJGeometry": {
            "name": "OBJGeometry",
            "shortname": "OBJGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/objGeometry.js",
            "line": 5,
            "description": "An **OBJGeometry** is a {{#crossLink \"Geometry\"}}{{/crossLink}} that's loaded from a\n<a href=\"https://en.wikipedia.org/wiki/Wavefront_.obj_file\">Wavefront .OBJ</a> file.\n\n<a href=\"../../examples/#importing_obj_raptor\"><img src=\"../../assets/images/screenshots/OBJGeometry.png\"></img></a>\n\n## Overview\n\n* An OBJGeometry mesh is defined by the Wavefront .OBJ file referenced by the OBJGeometry's {{#crossLink \"OBJGeometry/src:property\"}}{{/crossLink}} property.\n* An OBJGeometry only parses the geometry data from the .OBJ file and ignores any associated .MTL file.\n* Set the {{#crossLink \"OBJGeometry/src:property\"}}{{/crossLink}} property to a different file at any time, to regenerate the OBJGeometry's mesh from the new file.\n* Internally uses the <a href=\"http://k3d.ivank.net/\">k3d.js</a> library for parsing .OBJ files.\n\n## Examples\n\n<ul>\n<li>[Importing a Raptor from OBJ](../../examples/#importing_obj_raptor)</li>\n</ul>\n\n## Usage\n\n````javascript\nvar entity = new xeogl.Entity({\n\n   geometry: new xeogl.OBJGeometry({\n       src: \"models/obj/raptor.obj\"\n   }),\n\n   material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"models/obj/raptor.jpg\"\n       })\n   }),\n\n   transform: new xeogl.Rotate({\n       xyz: [1, 0, 0],\n       angle: 0,\n\n       parent: new xeogl.Translate({\n           xyz: [10, 3, 10]\n       })\n   })\n});\n\n// When the OBJGeometry has loaded,\n// fly the camera to fit the entity in view\n\nvar cameraFlight = new xeogl.CameraFlightAnimation();\n\nentity.geometry.on(\"loaded\", function () {\n\n        cameraFlight.flyTo({\n            aabb: entity.worldBoundary.aabb\n        });\n    });\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this OBJGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this OBJGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to the .OBJ file.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "TeapotGeometry": {
            "name": "TeapotGeometry",
            "shortname": "TeapotGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/teapotGeometry.js",
            "line": 1,
            "description": "A **TeapotGeometry** defines a [Utah Teapot](https://en.wikipedia.org/wiki/Utah_teapot) geometry for attached\n{{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_teapot\"><img src=\"../../assets/images/screenshots/TeapotGeometry.png\"></img></a>\n\n## Examples\n\n<ul>\n<li>[TeapotGeometry example](../../examples/#geometry_primitives_teapot)</li>\n</ul>\n\n## Usage\n\nAn {{#crossLink \"Entity\"}}{{/crossLink}} with a TeapotGeometry, transformed with a {{#crossLink \"Rotate\"}}{{/crossLink}}\nand {{#crossLink \"Translate\"}}{{/crossLink}}, colored with a {{#crossLink \"PhongMaterial\"}}{{/crossLink}}, and with a\n{{#crossLink \"Camera\"}}{{/crossLink}} positioned to arrange it within the view:\n````javascript\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.TeapotGeometry(),\n    material: new xeogl.PhongMaterial({\n        ambient: [0.9, 0.3, 0.9],\n        diffuse: [0.4, 0.4, 0.9],\n        shininess: 30\n    }),\n    transform: new xeogl.Rotate({\n        xyz: [1,0,0],\n        angle: -90,\n        parent: new xeogl.Translate({\n            xyz: [0,-20,0]\n        })\n    })\n});\n\nentity.scene.camera.view.eye = [0, 0, -80];\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this TeapotGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this TeapotGeometry.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "VectorTextGeometry": {
            "name": "VectorTextGeometry",
            "shortname": "VectorTextGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 1,
            "description": "A **VectorTextGeometry** extends {{#crossLink \"Geometry\"}}{{/crossLink}} to define vector text geometry for attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\n<a href=\"../../examples/#geometry_primitives_vectorText\"><img src=\"../../assets/images/screenshots/VectorTextGeometry.png\"></img></a>\n\n## Overview\n\n* A VectorTextGeometry is a mesh of line segments in the X-Y plane  that is generated from the value of\nits {{#crossLink \"VectorTextGeometry/text:property\"}}{{/crossLink}} property.\n* Text is monospaced and each character occupies a square cell.\n* Set its {{#crossLink \"VectorTextGeometry/origin:property\"}}{{/crossLink}}, {{#crossLink \"VectorTextGeometry/size:property\"}}{{/crossLink}} or {{#crossLink \"VectorTextGeometry/text:property\"}}{{/crossLink}} properties to new values at any time to dynamically regenerate it.\n\n## Example\n\n````javascript\nnew xeogl.Entity({\n    geometry: new xeogl.VectorTextGeometry({\n        text: \"Attack ships on fire off the Shoulder of Orion\",\n        origin: [0,0,0],\n        size: 2 // Size of each square character cell\n    }),\n    material: new xeogl.PhongMaterial({\n        emissive: [0.5, 1.0, 1.0],\n        lineWidth: 2\n    }),\n    lights: new xeogl.Lights({\n        lights: [] // No lights - rely on emissive color\n    }),\n    transform: new xeogl.Translate({\n        xyz: [0, 40, 0]\n    })\n});\n````",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this VectorTextGeometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this VectorTextGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "3D point indicating the top left corner of the VectorTextGeometry.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "size",
                            "description": "Size of each character.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "text",
                            "description": "The text.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "PointMarkings": {
            "name": "PointMarkings",
            "shortname": "PointMarkings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/marking/pointMarkings.js",
            "line": 1,
            "description": "A **PointMarkings** is used to draw persistable markings on Entities.\n\n## Examples\n\nTODO\n\n## Usage\n\n````javascript\n// Load a gearbox model to draw marks on\nvar gearbox = new xeogl.GLTFModel({\n        src: \"models/gltf/GearboxAssy/glTF/GearboxAssy.gltf\"\n});\n\n// Set initial camera position\nvar view = gearbox.scene.camera.view;\nview.eye = [184.21, 10.54, -7.03];\nview.look = [159.20, 17.02, 3.21];\nview.up = [-0.15, 0.97, 0.13];\n\n// Create marks wherever we draw on the surface of our gearbox\n\nvar scene = gearbox.scene; // Using default scene for this example\nvar input = scene.input;\nvar pointMarkings = new xeogl.PointMarkings();\n\ninput.on(\"mousemove\", function (coords) {\n\n    var hit = scene.pick({\n        canvasPos: coords,\n        pickSurface: true\n    });\n\n    if (hit) {\n        pointMarkings.draw(hit);\n    }\n});\n\n// Allow user camera control\nnew xeogl.InputControl();\n````\n\n````javascript\nvar data = pointMarkings.save();\n\npointMarkings.clear();\n\npointMarkings.load(data);\n````",
            "submodule": "marking",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this PointMarkings in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointMarkings.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} for this PointMarkings.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PointMarkings. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this PointMarkings is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "CameraController"
        },
        "OBJModel": {
            "name": "OBJModel",
            "shortname": "OBJModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/models/OBJModel.js",
            "line": 1,
            "description": "An **OBJModel** is a {{#crossLink \"Model\"}}{{/crossLink}} that loads itself from OBJ and MTL files.\n\n<a href=\"../../examples/#importing_obj_conferenceRoom\"><img src=\"../../../assets/images/screenshots/OBJModel.png\"></img></a>\n\n## Overview\n\n* Begins loading as soon as you set its {{#crossLink \"OBJModel/src:property\"}}{{/crossLink}} property to the location of an OBJ file.\n* Once loaded, contains an {{#crossLink \"Entity\"}}{{/crossLink}} for each object. The {{#crossLink \"Entity\"}}Entities{{/crossLink}} can then be independently shown, hidden, colored, transformed etc.\n* Set {{#crossLink \"OBJModel/src:property\"}}{{/crossLink}} to a new file path at any time, to clear the OBJModel and load components from the new file.\n\nOBJModel inherits these capabilities from its {{#crossLink \"Model\"}}{{/crossLink}} base class:\n\n* Allows you to access and manipulate the components within it (as mentioned).\n* Can be transformed as a unit within World-space by attaching it to a {{#crossLink \"Transform\"}}{{/crossLink}}.\n* Provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n## Usage\n\nLet's load the conference room model (shown in the screenshot above):\n\n````javascript\nvar confRoom = new xeogl.OBJModel({\n    id: \"confRoom\",\n    src: \"models/obj/conference/conference.obj\"\n});\n````\n\nBind a callback to fire when the model has loaded:\n\n````javascript\nconfRoom.on(\"loaded\", function() {\n    // OBJModel has loaded!\n});\n````\n\nThat fires immediately if the OBJModel already happens to be loaded. You can also bind a callback to fire if loading fails:\n\n````javascript\nconfRoom.on(\"error\", function(msg) {\n    // Error occurred\n});\n````\n\nTo switch to a different OBJ file, simply update {{#crossLink \"OBJModel/src:property\"}}{{/crossLink}}:\n\n````javascript\nconfRoom.src = \"models/obj/female02/female02.obj\";\n````\n\n### Fitting to view\n\n````javascript\nvar cameraFlight = new xeogl.CameraFlightAnimation();\ncameraFlight.flyTo(confRoom);\n````\n\n### Accessing components\n\nLet's make everything  transparent, except for the conference table and chairs:\n\n````javascript\nfor (var id in confRoom.entities) {\n   var entity = confRoom.entities[id];\n   switch (id) {\n       case \"confRoom#mesh31\":\n       case \"confRoom#mesh29\":\n       case \"confRoom#mesh30\":\n           break;\n       default: // Not a chair entity\n           entity.material.alpha = 0.5;\n           entity.material.blendMode = \"blend\"\n   }\n}\n````\n\nNote the format of the {{#crossLink \"Entity\"}}{{/crossLink}} IDs - an OBJModel prefixes its own ID to the IDs of its components:\n\n````<OBJModel ID>#<OBJ object/group ID>````\n\n**Transforms**\n\nLet's move the white table top upwards:\n\n````javascript\nvar tableTop = confRoom.entities[\"confRoom#mesh29\"];\ntableTop.transform = new xeogl.Translate({\n   xyz: [0, 150, 0],\n   parent: tableTop.transform\n});\n````\n\n## Examples\n\n* [Conference room model](../../examples/#importing_obj_conferenceRoom)\n* [Two character models](../../examples/#importing_obj_people)",
            "submodule": "models",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this OBJModel in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this OBJModel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to an OBJ file. You can set this to a new file path at any time, which will cause the\nOBJModel to load components from the new file (after first destroying any components loaded from a previous file path).",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "A Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} to attach to this OBJModel.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this OBJModel. Internally, the given\n{{#crossLink \"Transform\"}}{{/crossLink}} will be inserted above each top-most {{#crossLink \"Transform\"}}Transform{{/crossLink}}\nthat the OBJModel attaches to its {{#crossLink \"Entity\"}}Entities{{/crossLink}}.",
                            "type": "Number|String|Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Model"
        },
        "BuildableModel": {
            "name": "BuildableModel",
            "shortname": "BuildableModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/models/buildableModel.js",
            "line": 1,
            "description": "A **BuildableModel** is a {{#crossLink \"Model\"}}{{/crossLink}} that provides a \"stateful builder\" API through which you can\nprocedurally generate xeogl content.\n\n<a href=\"../../examples/#models_generation_city\"><img src=\"http://i.giphy.com/l0HlPJO1AN01Lz27e.gif\"></img></a>\n\n## Overview\n\n* A BuilderModel implements the [Builder pattern](https://en.wikipedia.org/wiki/Builder_pattern).\n* Create various assets within a BuilderModel, such as {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}\nand {{#crossLink \"Material\"}}Materials{{/crossLink}}, then create {{#crossLink \"Entity\"}}Entities{{/crossLink}} that use those assets.\n* The BuilderModel then owns those components and will destroy them when you\ncall its {{#crossLink \"BuildableModel/clear:method\"}}clear(){{/crossLink}} or {{#crossLink \"Component/destroy:method\"}}destroy(){{/crossLink}} methods.\n* A BuildableModel can be transformed within World space by attaching it to a {{#crossLink \"Transform\"}}{{/crossLink}}.\n* A BuildableModel provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n## Examples\n\n* [Generating a city with a BuildableModel](../../examples/#models_generation_city)</li>\n\n## Usage\n\nA BuildableModel containing ten textured boxes with random sizes and positions:\n\n````javascript\nvar model = new xeogl.BuildableModel();\n\n// Add a BoxGeometry asset\nbuildableModel.asset(\"boxGeometry\", {\n    type: \"xeogl.BoxGeometry\"\n});\n\n// Add a PhongMaterial asset\nbuildableModel.asset(\"gridMaterial\", {\n    type: \"xeogl.PhongMaterial\",\n    ambient: [0.9, 0.3, 0.9],\n    shininess: 30,\n    diffuseMap: {\n        src: \"textures/diffuse/gridMaterial.jpg\"\n    }\n});\n\n// Set the BoxGeometry asset as the current geometry\nbuildableModel.geometry(\"boxGeometry\");\n\n// Set the PhongMaterial asset as the current material\nbuildableModel.material(\"gridMaterial\");\n\n// Build ten entities with random sizes and positions,\n// that each get the current geometry and material\nfor (var i = 0; i < 10; i++) {\n\n    buildableModel.scale(Math.random() * 10 + 1, Math.random() * 10 + 1, Math.random() * 10 + 1);\n    buildableModel.pos(Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50);\n\n    buildableModel.entity();\n}\n````",
            "submodule": "models",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this BuildableModel in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BuildableModel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "A Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} to attach to this BuildableModel.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this BuildableModel. Internally, the given\n{{#crossLink \"Transform\"}}{{/crossLink}} will be inserted above each top-most {{#crossLink \"Transform\"}}Transform{{/crossLink}}\nthat the BuildableModel attaches to its {{#crossLink \"Entity\"}}Entities{{/crossLink}}.",
                            "type": "Number|String|Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Model"
        },
        "GLTFModel": {
            "name": "GLTFModel",
            "shortname": "GLTFModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/models/glTFModel2.js",
            "line": 1,
            "description": "A **GLTFModel** is a {{#crossLink \"Model\"}}{{/crossLink}} loaded from a <a href=\"https://github.com/KhronosGroup/glTF\" target = \"_other\">glTF</a> file.\n\n<a href=\"../../examples/#importing_gltf_gearbox\"><img src=\"../../../assets/images/gltf/glTF_gearbox_squashed.png\"></img></a>\n\n## Overview\n\n* A GLTFModel is a container of {{#crossLink \"Component\"}}Components{{/crossLink}} that loads itself from a glTF file.\n* It begins loading as soon as you set its {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}\nproperty to the location of a valid glTF file.\n* You can set {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}} to a new file path at any time, which causes\nthe GLTFModel to clear itself and load components from the new file.\n\nIt inherits these capabilities from its {{#crossLink \"Model\"}}{{/crossLink}} base class:\n\n* Allows you to access and manipulate the components within it.\n* Can be transformed within World-space by attaching it to a {{#crossLink \"Transform\"}}{{/crossLink}}.\n* Provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n<img src=\"../../../assets/images/GLTFModel.png\"></img>\n\n## Supported glTF 2.0 features\n\nSo far, GLTFModel loads only geometry, materials and modeling transform hierarchies, without animations. It does not\nload cameras or lights because its purpose is to import models into environments that have already been created using\nthe xeogl API.\n\nIn addition to glTF's core metal-roughness material workflow, GLTFModel also supports two material extensions:\n\n* [KHR_materials_pbrSpecularGlossiness](https://github.com/KhronosGroup/glTF/blob/master/extensions/Khronos/KHR_materials_pbrSpecularGlossiness/README.md)\n* [KHR_materials_common](https://github.com/KhronosGroup/glTF/blob/master/extensions/Khronos/KHR_materials_common/README.md)\n\n## Usage\n\n### Loading glTF\n\nLoad a glTF file by creating a GLTFModel:\n\n````javascript\nvar gearbox = new xeogl.GLTFModel({\n  id: \"gearbox\",\n  src: \"models/gltf/gearbox/gearbox_assy.gltf\"\n});\n````\n\nA GLTFModel prefixes its own ID to those of its components. Its ID is optional and defaults to\nthe value of {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}. In this example we're providing our own short ID,\nhowever, in order to keep the component IDs short and easy to use.\n\nThe GLTFModel begins loading the glTF file immediately. Bind a callback to be notified when the file has loaded (which\nfires immediately if already loaded):\n\n````javascript\ngearbox.on(\"loaded\", function() {\n       // GLTFModel has loaded!\n   });\n````\n\nYou can also bind a callback to fire if loading fails:\n\n````javascript\ngearbox.on(\"error\", function(msg) {\n       // Error occurred\n   });\n````\n\nTo switch to a different glTF file, simply update {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}:\n\n````javascript\ngearbox.src = \"models/gltf/Buggy/glTF/Buggy.gltf\"\n````\n\n### Accessing components\n\nOnce the GLTFModel has loaded, its {{#crossLink \"Scene\"}}{{/crossLink}} will contain various components that represent the elements of the glTF file.\nWe'll now access some of those components by ID, to query and update them programmatically.\n\n**Transforms**\n\nLet's reposition one of the {{#crossLink \"Entity\"}}Entities{{/crossLink}} in our GLTFModel. We'll get the {{#crossLink \"Transform\"}}{{/crossLink}} that\npositions our target {{#crossLink \"Entity\"}}{{/crossLink}}, in this case a gear. Then we'll update its matrix to translate it ten units along the negative Z-axis.\n\n````javascript\nvar transform = gearbox.scene.components[\"gearbox#n274017_gear_53t-node.transform\"];\n\ntransform.matrix = xeogl.math.translationMat4v([0,0,-10]);\n````\n\nNote the format of the {{#crossLink \"Transform\"}}{{/crossLink}}'s ID:\n\n````<GLTFModel ID>#<glTF node ID>.transform````\n\nFrom left to right, the format contains the GLTFModel's ID, the ID of the glTF node that contains the transform, then\n\"transform\", to distinguish it from the IDs of any other components loaded from elements on the same glTF node.\n\n**Entities**\n\nLet's make our gear {{#crossLink \"Entity\"}}{{/crossLink}} invisible:\n\n````javascript\nvar gear53 = gearbox.scene.components[\"gearbox#n274017_gear_53.entity.0\"];\n\ngear53.visible = false;\n````\n\nNote the format of the {{#crossLink \"Entity\"}}{{/crossLink}}'s ID: ````<GLTFModel ID>#<glTF node ID>.entity.<glTF mesh index>````\n\nA glTF scene node may contain multiple meshes, and for each of those xeogl will create an individual {{#crossLink \"Entity\"}}{{/crossLink}}. As\nbefore, the part before the hash is the ID of the GLTFModel, which is then followed by the ID of the glTF node, then \"entity\"\nto signify that this is an Entity ID, then finally an index to differentiate the Entity from those loaded from other\nmeshes on the same glTF node.\n\n## Examples\n\n* [Damaged Helmet with metal/rough PBR materials](../../examples/#importing_gltf_pbr_metallic_helmet)\n* [Gearbox with entity explorer](../../examples/#importing_gltf_explorer)\n* [Ensuring individual materials on GLTFModel entities](../../examples/#models_filter_uniqueMaterials)\n* [Baking transform hierarchies in a GLTFModel](../../examples/#models_filter_bakeTransforms)",
            "submodule": "models",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this GLTFModel in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this GLTFModel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to a glTF file. You can set this to a new file path at any time, which will cause the\nGLTFModel to load components from the new file (after first destroying any components loaded from a previous file path).",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "A Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} to attach to this GLTFModel.\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this GLTFModel. Internally, the given\n{{#crossLink \"Transform\"}}{{/crossLink}} will be inserted above each top-most {{#crossLink \"Transform\"}}Transform{{/crossLink}}\nthat the GLTFModel attaches to its {{#crossLink \"Entity\"}}Entities{{/crossLink}}.",
                            "type": "Number|String|Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Model"
        },
        "SceneJSModel": {
            "name": "SceneJSModel",
            "shortname": "SceneJSModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/models/sceneJSModel.js",
            "line": 1,
            "description": "A **SceneJSModel** is a {{#crossLink \"Model\"}}{{/crossLink}} that\nimports content from the JSON-based <a href=\"http://scenejs.org\">SceneJS</a> scene definition format.\n\n<a href=\"../../examples/#importing_scenejs_tronTank\"><img src=\"http://i.giphy.com/l3vR50pFTpEbJTztS.gif\"></img></a>\n\n## Overview\n\n* A SceneJSModel is a container of {{#crossLink \"Component\"}}Components{{/crossLink}} that loads itself from a\nSceneJS scene definition, given as either a JSON file or a JavaScript object (POJO).\n* It begins loading as soon as you either set its {{#crossLink \"SceneJSModel/src:property\"}}{{/crossLink}}\nproperty to the location of a valid SceneJS JSON file, or set its {{#crossLink \"SceneJSModel/data:property\"}}{{/crossLink}} property to a\nvalid POJO.\n* You can set these properties to new values at any time, which causes\nthe SceneJSModel to clear itself and load fresh components.\n* Can be configured to do a best-effort conversion of SceneJS Phong materials into xeogl's PBR {{#crossLink \"PBRMetalness\"}}{{/crossLink}} or {{#crossLink \"SpecularMaterials\"}}{{/crossLink}}.\n\nIt inherits these capabilities from its {{#crossLink \"Model\"}}{{/crossLink}} base class:\n\n* Allows you to access and manipulate the components within it.\n* Can be transformed within World-space by attaching it to a {{#crossLink \"Transform\"}}{{/crossLink}}.\n* Provides its World-space boundary as a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.\n\n<img src=\"../../../assets/images/SceneJSModel.png\"></img>\n\n## SceneJS Support\n\nSceneJSModel was developed to import the [Tron Tank model](../../examples/#importing_scenejs_tronTank). As such,\nit only imports a limited subset of the SceneJS scene definition API. <b>Use with caution</b> and be prepared to\nfix and contribute missing functionality!\n\nSceneJS nodes supported so far:\n\n* ````\"node\"````\n* ````\"rotate\"````\n* ````\"translate\"````\n* ````\"scale\"````\n* ````\"material\"````\n* ````\"texture\"````\n* ````\"fresnel\"````\n* ````\"flags\"````\n* ````\"geometry\"````\n* ````\"layer\"````\n* ````\"stage\"````\n\nUnsupported API features include:\n\n* Lights\n* Cameras\n* Shared node cores\n* SceneJS plugins\n\n## Examples\n\n* [Importing POJO defining geometry with diffuse, specular and normal maps](../../examples/#importing_scenejs_pojo_textures)\n* [Importing POJO defining transparent geometry](../../examples/#importing_scenejs_pojo_transparency)\n* [Importing JSON file defining geometry with diffuse, specular and normal maps](../../examples/#importing_scenejs_json_textures)\n* [Importing JSON file defining the SceneJS Tron Tank](../../examples/#importing_scenejs_tronTank)\n\n## Usage\n\n#### Loading a POJO scene definition\n\nThe simplest way to import SceneJS content is by setting a POJO on the SceneJSModel's {{#crossLink \"SceneJSModel/data:property\"}}data{{/crossLink}}\nproperty:\n\n````javascript\nvar pojoModel = new xeogl.SceneJSModel({\n       id: \"myModel\",\n\n       // Our POJO scene definition\n       data: {\n           type: \"node\",\n           nodes: [\n               {\n                   type: \"rotate\",\n                   id: \"myRotate\",\n                   nodes: [\n                       {\n                           type: \"geometry\",\n                           id: \"boxEntity\",\n                           primitive: \"triangles\",\n                           positions: [\n                               2, 2, 2, -2, 2, 2, -2, -2, 2, 2, -2, 2, 2, 2, 2, 2, -2,\n                               2, 2, -2, -2, 2, 2, -2, 2, 2, 2, 2, 2, -2, -2, 2, -2,\n                               -2, 2, 2, -2, 2, 2, -2, 2, -2, -2, -2, -2, -2, -2, 2,\n                               -2, -2, -2, 2, -2, -2, 2, -2, 2, -2, -2, 2, 2, -2, -2,\n                               -2, -2, -2, -2, 2, -2, 2, 2, -2\n                           ],\n                           normals: [\n                               0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n                               0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0,\n                               0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0,\n                              -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1\n                           ],\n                           uv: [\n                               5, 5, 0, 5, 0, 0, 5, 0, 0, 5, 0, 0, 5, 0, 5, 5,\n                               5, 0, 5, 5, 0, 5, 0, 0, 5, 5, 0, 5, 0, 0, 5, 0,\n                               0, 0, 5, 0, 5, 5, 0, 5, 0, 0, 5, 0, 5, 5, 0, 5\n                           ],\n                           indices: [\n                               0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11,\n                               12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21,\n                               22, 20, 22, 23\n                           ]\n                       }\n                   ]\n               }\n           ]\n       }\n    });\n\n// Set camera position\nvar view = pojoModel.scene.camera.view;\nview.eye = [0, 0, -25];\nview.look = [0, 0, 0];\nview.up = [0, 1, 0];\n````\n\n#### Finding components\n\nOur SceneJSModel has now created various xeogl components\nwithin itself, which we can find by their IDs. In this particular example, our POJO has a SceneJS ````\"rotate\"```` node\nwith ID ````\"myRotate\"````. Our SceneJSModel parsed that into a {{#crossLink \"Rotate\"}}{{/crossLink}} component with\nID ````\"myModel.myRotate\"````.\n\nTo see what components our SceneJSModel created, we can drop this expression into the browser's JavaScript\ndebug console (we're using Chrome here):\n\n````\npojoModel.types;\n````\n\nThe result is the value of the SceneJSModel's {{#crossLink \"Model/types:property\"}}types{{/crossLink}} map, which\ncontains its xeogl components, mapped to their types:\n\n<img src=\"../../../assets/images/screenshots/SceneJSModel_console_tankModel.types.png\"></img>\n\nHere we've expanded the {{#crossLink \"Rotate\"}}{{/crossLink}} components, and we can see\nour {{#crossLink \"Rotate\"}}{{/crossLink}}. **Note that its ID is prefixed with the ID of the SceneJSModel.**\n\nLet's get that {{#crossLink \"Rotate\"}}{{/crossLink}} from our SceneJSModel's\n{{#crossLink \"Model/components:property\"}}{{/crossLink}} map and set it spinning:\n\n```` JavaScript\nvar rotate = pojoModel.components[\"myModel.myRotate\"];\n\npojoModel.scene.on(\"tick\", function() {\n   rotate.angle += 0.2;\n});\n````\n\n#### Loading a JSON scene definition\n\nAs shown in the example below, we can also import a SceneJS scene definition from a JSON file (eg. <a href=\"../../examples/models/scenejs/tronTank.json\">tronTank.json</a>).\nNote that we need to wait for the SceneJSModel's {{#crossLink \"SceneJSModel/loaded:event\"}}{{/crossLink}} event before we\ncan access its components. In this example we're also showing how a SceneJSModel can be attached to a modeling {{#crossLink \"Transform\"}}{{/crossLink}}\nhierarchy to transform it within World space (see {{#crossLink \"Model\"}}{{/crossLink}}).\n\n````javascript\n// Import SceneJS JSON model\nvar tankModel = new xeogl.SceneJSModel({\n       id: \"tankModel\",\n\n       // Path to our JSON scene definition file\n       src: \"models/scenejs/tronTank.json\",\n\n       // We can also bolt on a hierarchy of modeling transforms,\n       // to transform the entire SceneJSModel in World space\n       transform: new xeogl.Rotate({\n           xyz: [0, 1, 0],\n           angle: 0,\n           parent: new xeogl.Translate({\n               xyz: [0, 0, 0]\n           })\n       })\n    });\n\n// Once our SceneJSModel has loaded, we can access its components\ntankModel.on(\"loaded\", function() {\n\n       tankModel.components[\"tankModel.gunDir\"].angle = gunDir;\n\n       // Set camera position\n       var view = tankModel.scene.camera.view;\n       view.eye = [0, 0, -70];\n       view.look = [0, 0, 0];\n       view.up = [0, 1, 0];\n   });\n````\n\n#### Converting materials to PBR\n\n\n````javascript\nvar pbrSpecularTankModel = new xeogl.SceneJSModel({\n   src: \"models/scenejs/tronTank.json\",\n   materialWorkflow: \"SpecularMaterial\"\n});\n````\n\n````javascript\nvar pbrMetalnessTankModel = new xeogl.SceneJSModel({\n   src: \"models/scenejs/tronTank.json\",\n   materialWorkflow: \"MetallicMaterial\"\n});\n````",
            "submodule": "models",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this SceneJSModel in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this SceneJSModel.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "materialWorkflow",
                            "description": "Selects material workflow - \"classic\" | \"pbrMatalness\" | \"pbrSpecular\"",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "src",
                            "description": "Path to a SceneJS JSON scene description file.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Path to a SceneJS JSON scene description file.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "ZSpaceEffect": {
            "name": "ZSpaceEffect",
            "shortname": "ZSpaceEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 1,
            "description": "A **ZSpaceEffect** makes its {{#crossLink \"Scene\"}}{{/crossLink}} viewable with a zSpace viewer.\n\n<a href=\"../../examples/#effects_zspace_gearbox\"><img src=\"http://i.giphy.com/mRdkHVQ1NdUWc.gif\"></img></a>\n\n## Overview\n\n<ul>\n<li>Create a ZSpaceEffect within your xeogl {{#crossLink \"Scene\"}}{{/crossLink}} to make it viewable with a ZSpace display.</li>\n<li>Activate or deactivate the ZSpaceEffect at any time to switch between zSpace stereo mode and normal viewing mode.</li>\n<li>Requires WebGL2 and WebVR support, which you'll have if you're running on a zSpace viewer.</li>\n<li>Attaches to a {{#crossLink \"Camera\"}}{{/crossLink}}, defaulting to its {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/camera:property\"}}{{/crossLink}} if none is specified.</li>\n<li>Use a {{#crossLink \"ZSpaceStylusControl\"}}{{/crossLink}} to drag {{#crossLink \"Entity\"}}Entities{{/crossLink}}\naround with the stylus.</li>\n</ul>\n\n### Limitations\n\n<ul>\n<li>Don't attach different viewing or projection transforms to a ZSpaceEffect's {{#crossLink \"Camera\"}}{{/crossLink}} while the ZSpaceEffect is active.</li>\n</ul>\n\n<img src=\"../../../assets/images/ZSpaceEffect.png\"></img>\n\n## Examples\n\nUse these examples as boilerplates to get started:\n\n<ul>\n<li>[zSpace cube](../../examples/#effects_zspace_cube)</li>\n<li>[zSpace with random geometries](../../examples/#effects_zspace_geometries)</li>\n<li>[zSpace with glTF gearbox model](../../examples/#effects_zspace_gearbox)</li>\n<li>[zSpace with glTF gearbox model and entity explorer](../../examples/#effects_zspace_gearbox_explorer)</li>\n<li>[zSpace with glTF reciprocating saw model](../../examples/#effects_zspace_ReciprocatingSaw)</li>\n</ul>\n\n## Usage\n\nIn the following example we're going to set up a ZSpace-viewable scene with xeogl, defining the scene step-by-step to\nemphasize the plug-and-play design of xeogl's API. We'll assume that you've included all the required JavaScript libraries\nin your page - use the examples listed above as a boilerplate to get started.\n\n**1. Create an entity**\n\nFirst we'll create a simple torus-shaped {{#crossLink \"Entity\"}}{{/crossLink}}, which will be within xeogl's default\n{{#crossLink \"Scene\"}}{{/crossLink}}, since we're not defining the {{#crossLink \"Scene\"}}{{/crossLink}} component\nexplicitly. Our {{#crossLink \"Entity\"}}{{/crossLink}} is also implicitly connected to the\n{{#crossLink \"Scene\"}}{{/crossLink}}'s default {{#crossLink \"Camera\"}}{{/crossLink}}, since we didn't explicitly create\na {{#crossLink \"Camera\"}}{{/crossLink}} for it either.\n\n````javascript\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.TorusGeometry(),\n    material: new xeogl.PhongMaterial({\n       diffuseMap: new xeogl.Texture({\n           src: \"textures/diffuse/uvGrid2.jpg\"\n       })\n    })\n});\n````\n\n**2. Enable mouse/keyboard camera interaction**\n\nAt this point we've got a textured torus floating in the middle of the canvas (which is also created automatically\nsince we didn't specify one). Now we'll create a\n{{#crossLink \"CameraControl\"}}{{/crossLink}}, which immediately allows us to move our viewpoint around with the mouse and\nkeyboard. This component is also within xeogl's default {{#crossLink \"Scene\"}}{{/crossLink}} and connected to the\n{{#crossLink \"Scene\"}}{{/crossLink}}'s default {{#crossLink \"Camera\"}}{{/crossLink}}.\n\n````javascript\nnew CameraControl();\n````\n\n**3. Enable ZSpace viewing**\n\nNow we can orbit, pan and zoom around the torus with the mouse and keyboard. Let's view it on a ZSpace display by\ndropping a ZSpaceEffect into our default {{#crossLink \"Scene\"}}{{/crossLink}}.\n\n````javascript\nvar zspaceEffect = new ZSpaceEffect();\n````\n\nThe ZSpaceEffect immediately activates, so at this point if we're running on a ZSpace device we'll have a stereo\nview of the torus, which we can view with the stereo glasses.\n\nAt any point we can always disable the ZSpaceEffect effect to switch between normal WebGL mono viewing mode:\n\n````javascript\nzspaceEffect.active = false; // Back to normal mono viewing..\nzspaceEffect.active = true; // ..and then back to ZSpace stereo mode.\n\n````\n\n## Detecting support\n\nThe **ZSpaceEffect** will fire a \"supported\" event once it has determined whether or not the browser\nsupports a zSpace viewer:\n\n````javascript\nzspaceEffect.on(\"supported\", function (supported) {\n\n       if (!supported) {\n\n           // Not a zSpace device\n\n           this.error(\"This computer is not a ZSpace viewer!\"); // Log error on the xeogl.ZSpaceEffect\n\n           // At this point you could just destroy the xeogl.ZSpaceEffect to make it detach from the Camera\n       }\n   });\n````\n\n## Handling stylus input\n\nReading the current World-space position and direction of the stylus:\n\n````javascript\nvar stylusPos = zspaceEffect.stylusPos;\nvar stylusDir = zspaceEffect.stylusDir;\n````\n\nNote that these properties only have meaningful values once the ZSpaceEffect has fired at least one {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event.\n\nSubscribing to stylus movement:\n\n````javascript\nzspaceEffect.on(\"stylusMoved\", function() {\n    var stylusPos = zspaceEffect.stylusPos;\n    var stylusDir = zspaceEffect.stylusDir;\n    //...\n});\n````\n\nReading the current state of each stylus button:\n\n````javascript\nvar button0 = zspaceEffect.stylusButton0; // Boolean\nvar button1 = zspaceEffect.stylusButton1;\nvar button2 = zspaceEffect.stylusButton2;\n````\n\nSubscribing to change of state of each stylus button:\n\n````javascript\nzspaceEffect.on(\"stylusButton0\", function(value) { // Boolean value\n    this.log(\"stylusButton0 = \" + value);\n});\n\nzspaceEffect.on(\"stylusButton1\", function(value) {\n    this.log(\"stylusButton1 = \" + value);\n});\n\nzspaceEffect.on(\"stylusButton2\", function(value) {\n    this.log(\"stylusButton2 = \" + value);\n});\n````\n\nPicking an {{#crossLink \"Entity\"}}{{/crossLink}} with the stylus when button 0 is pressed:\n\n````javascript\nzspaceEffect.on(\"stylusButton0\", function() {\n\n   var hit = zspaceEffect.scene.pick({\n       pickSurface: true,\n       origin: zspaceEffect.stylusPos,\n       direction: zspaceEffect.stylusDir\n   });\n\n   if (hit) { // Picked an Entity\n\n       var entity = hit.entity;\n\n       // Other properties on the hit result:\n\n       var primitive = hit.primitive; // Type of primitive that was picked, usually \"triangles\"\n       var primIndex = hit.primIndex; // Position of triangle's first index in the picked Entity's Geometry's indices array\n       var indices = hit.indices; // UInt32Array containing the triangle's vertex indices\n       var localPos = hit.localPos; // Float32Array containing the picked Local-space position within the triangle\n       var worldPos = hit.worldPos; // Float32Array containing the picked World-space position within the triangle\n       var viewPos = hit.viewPos; // Float32Array containing the picked View-space position within the triangle\n       var bary = hit.bary; // Float32Array containing the picked barycentric position within the triangle\n       var normal = hit.normal; // Float32Array containing the interpolated normal vector at the picked position on the triangle\n       var uv = hit.uv; // Float32Array containing the interpolated UV coordinates at the picked position on the triangle\n\n       //...\n   }\n});\n````",
            "submodule": "zspace",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this ZSpaceEffect in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ZSpaceEffect.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} for this ZSpaceEffect.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this ZSpaceEffect. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "nearClip",
                            "description": "Position of the near clipping plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "farClip",
                            "description": "Position of the far clipping plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        },
                        {
                            "name": "displaySize",
                            "description": "The viewer display size.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "0.521,0.293"
                        },
                        {
                            "name": "displayResolution",
                            "description": "The viewer display resolution.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "1920,1080"
                        },
                        {
                            "name": "canvasOffset",
                            "description": "The offset of the canvas' corner from the edge of the screen - needed for\ncorrect tracking of glasses and stylus. Leave this at its default value if the canvas is to fill the entire screen.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "0,0"
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this ZSpaceEffect is initially active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ZSpaceStylusControl": {
            "name": "ZSpaceStylusControl",
            "shortname": "ZSpaceStylusControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 1,
            "description": "A **ZSpaceStylusControl** component works in conjunction with a {{#crossLink \"ZSpaceEffect\"}}{{/crossLink}} to drag\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} around with a zSpace stylus input device.\n\n<img src=\"../../../assets/images/ZSpaceStylusControl.png\"></img>\n\n## Examples\n\n<ul>\n<li>[zSpace cube](../../examples/effects_zspace_cube.html)</li>\n<li>[zSpace with random geometries](../../examples/effects_zspace_geometries.html)</li>\n<li>[zSpace with glTF gearbox model](../../examples/effects_zspace_gearbox.html)</li>\n<li>[zSpace with glTF gearbox model and entity explorer](../../examples/effects_zspace_gearbox_explorer.html)</li>\n<li>[zSpace with glTF reciprocating saw model](../../examples/effects_zspace_ReciprocatingSaw.html)</li>\n</ul>\n\n## Usage\n\n````javascript\n// Create a textured cube entity\nvar entity = new xeogl.Entity({\n    geometry: new xeogl.BoxGeometry({\n        xSize: .6,\n        ySize: .6,\n        zSize: .6\n    }),\n    material: new xeogl.PhongMaterial({\n        diffuseMap: new xeogl.Texture({\n            src: \"textures/diffuse/UVCheckerMap11-1024.png\"\n        }),\n        backfaces: true\n    }),\n    transform: new xeogl.Rotate({\n        xyz: [0, 1, 0],\n        angle: 0\n    })\n});\n\n// Set initial camera position\nvar scene = entity.scene;\nscene.camera.view.eye = [0, 2, -10];\nscene.camera.view.look = [0, 0, 0];\n\n// Allow camera control with keyboard and mouse\nvar inputControl = new xeogl.InputControl();\n\n// Create a ZSpaceEffect\nvar zspaceEffect = new xeogl.ZSpaceEffect({\n    canvasOffset: [330, 0]\n});\n\n// Create a ZSpaceStylusControl\nvar zspaceStylusControl = new xeogl.ZSpaceStylusControl();\n\n// Handle missing zSpace support\nzspaceEffect.on(\"supported\", function (supported) {\n    if (!supported) {\n        document.getElementById(\"log\").innerText = \"(zSpace not detected) \";\n    }\n});\n````",
            "submodule": "zspace",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this ZSpaceStylusControl in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ZSpaceStylusControl.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "zspaceEffect",
                            "description": "ID or instance of a {{#crossLink \"ZSpaceEffect\"}}ZSpaceEffect{{/crossLink}} for this ZSpaceStylusControl.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this ZSpaceStylusControl. Defaults to the first instance found in\nthe parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|ZSpaceEffect",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "Whether or not this ZSpaceStylusControl is initially active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "AABBHelper": {
            "name": "AABBHelper",
            "shortname": "AABBHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 1,
            "description": "Helper that visualizes the axis-aligned boundary of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "boundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
                            "type": "Number|String|Boundary3D",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "Emmissive color",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.4,0.4,0.4]"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "AxisHelper": {
            "name": "AxisHelper",
            "shortname": "AxisHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/axisHelper.js",
            "line": 5,
            "description": "Helper widget that indicates the World coordinate axis.\nThe helper works by tracking updates on a xeogl.Lookat and orienting a gnomon accordingly.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "lookat",
                            "description": "A {{#crossLink \"xeogl.Lookat\"}}{{/crossLink}} to observe.",
                            "type": "xeogl.Lookat"
                        },
                        {
                            "name": "size]  Pixel dimensions of helper's canvas, [250, 250",
                            "description": "by default.",
                            "type": "Int16Array",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "ClipHelper": {
            "name": "ClipHelper",
            "shortname": "ClipHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/clipHelper.js",
            "line": 1,
            "description": "Helper that visualizes the position and direction of a {{#crossLink \"Clip\"}}{{/crossLink}}.\nThe helper works by tracking updates to the {{#crossLink \"Clip\"}}{{/crossLink}}'s\n {{#crossLink \"Clip/pos:property\"}}{{/crossLink}} and {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "clip",
                            "description": "A {{#crossLink \"Clip\"}}{{/crossLink}} to visualize.",
                            "type": "Clip"
                        },
                        {
                            "name": "solid",
                            "description": "Indicates whether or not this helper is filled with color or just wireframe.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "planeSize",
                            "description": "The width and height of the ClipHelper plane indicator.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "autoPlaneSize",
                            "description": "Indicates whether or not this ClipHelper's\n {{#crossLink \"ClipHelper/planeSize:property\"}}{{/crossLink}} is automatically sized to fit within\n the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "LabelHelper": {
            "name": "LabelHelper",
            "shortname": "LabelHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/labelHelper.js",
            "line": 5,
            "description": "Helper widget that shows a label.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*"
                }
            ]
        },
        "OBBHelper": {
            "name": "OBBHelper",
            "shortname": "OBBHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/obbHelper.js",
            "line": 1,
            "description": "Helper that visualizes the object-aligned boundary of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "boundary",
                            "description": "ID or instance of a {{#crossLink \"Boundary3D\"}}{{/crossLink}}.",
                            "type": "Number|String|Boundary3D",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "Emmissive color",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.4,0.4,0.4]"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "PlaneHelper": {
            "name": "PlaneHelper",
            "shortname": "PlaneHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/planeHelper.js",
            "line": 1,
            "description": "Helper that visualizes the position and direction of a plane.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "pos",
                            "description": "World-space position.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "dir",
                            "description": "World-space direction vector.",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0,0,1]"
                        },
                        {
                            "name": "color",
                            "description": "Emmissive color",
                            "type": "Float32Array",
                            "optional": true,
                            "optdefault": "[0.4,0.4,0.4]"
                        },
                        {
                            "name": "solid",
                            "description": "Indicates whether or not this helper is filled with color or just wireframe.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "visible",
                            "description": "Indicates whether or not this helper is visible.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "planeSize",
                            "description": "The width and height of the PlaneHelper plane indicator.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "autoPlaneSize",
                            "description": "Indicates whether or not this PlaneHelper's\n {{#crossLink \"PlaneHelper/planeSize:property\"}}{{/crossLink}} is automatically sized to fit within\n the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "PointLightHelper": {
            "name": "PointLightHelper",
            "shortname": "PointLightHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "xeogl",
            "namespace": "",
            "file": "examples/js/helpers/pointLightHelper.js",
            "line": 1,
            "description": "A **PointLightHelper** shows a visual indicator for a {{#crossLink \"PointLight\"}}{{/crossLink}}.\n\n## Example\n\n````javascript\n\n````",
            "submodule": "entities",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this PointLightHelper in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLightHelper.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Entity"
        },
        "SplineCurveHelper": {
            "name": "SplineCurveHelper",
            "shortname": "SplineCurveHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "entities",
            "namespace": "",
            "file": "examples/js/helpers/splineCurveHelper.js",
            "line": 1,
            "description": "Shows the shape and control points of {{#crossLink \"SplineCurve\"}}{{/crossLink}}",
            "extends": "Component"
        },
        "ViewCube": {
            "name": "ViewCube",
            "shortname": "ViewCube",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "entities",
            "namespace": "",
            "file": "examples/js/helpers/viewCube.js",
            "line": 207,
            "description": "Helper widget that indicates the World coordinate axis.\nTracks updates on a xeogl.Lookat and orients the cube accordingly.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration",
                    "type": "*",
                    "props": [
                        {
                            "name": "mainLookat",
                            "description": "A {{#crossLink \"xeogl.Lookat\"}}{{/crossLink}} to observe.",
                            "type": "xeogl.Lookat"
                        },
                        {
                            "name": "size]  Pixel dimensions of helper's canvas, [250, 250",
                            "description": "by default.",
                            "type": "Int16Array",
                            "optional": true
                        }
                    ]
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/_renderer/chunks/chunk.js",
            "line": 5,
            "description": "A chunk of WebGL state changes to render a xeogl.renderer.State.",
            "access": "private",
            "tagname": "",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunk.js",
            "line": 13,
            "description": "Initialises the chunk.",
            "params": [
                {
                    "name": "id",
                    "description": "Chunk ID",
                    "type": "Number"
                },
                {
                    "name": "program",
                    "description": "Program to render this chunk",
                    "type": "xeogl.renderer.Program"
                },
                {
                    "name": "state",
                    "description": "The state rendered by this chunk",
                    "type": "xeogl.renderer.State"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 5,
            "description": "Manages creation, reuse and destruction of {@link xeogl.renderer.Chunk}s.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 12,
            "description": "Sub-classes of {@link xeogl.renderer.Chunk} provided by this factory",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 17,
            "description": "Creates a chunk type.",
            "params": [
                {
                    "name": "params",
                    "description": "Members to augment the chunk class prototype with",
                    "props": [
                        {
                            "name": "type",
                            "description": "Type name for the new chunk class"
                        },
                        {
                            "name": "draw",
                            "description": "Method to render the chunk in draw render"
                        },
                        {
                            "name": "pickObject",
                            "description": ""
                        },
                        {
                            "name": "pickPrimitive",
                            "description": ""
                        }
                    ]
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 53,
            "description": "Gets a chunk from this factory.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 97,
            "description": "Releases a chunk back to this factory.",
            "params": [
                {
                    "name": "chunk",
                    "description": "Chunk to release",
                    "type": "xeogl.renderer.Chunk"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/chunkFactory.js",
            "line": 123,
            "description": "Restores the chunks in this factory after a WebGL context recovery.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/geometryChunk.js",
            "line": 5,
            "description": "Create display state chunk type for draw and pick render of geometry",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/chunks/viewportChunk.js",
            "line": 5,
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 5,
            "description": "Buffer for vertices and indices",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL"
                },
                {
                    "name": "type",
                    "description": "Eg. ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER"
                },
                {
                    "name": "data",
                    "description": "WebGL array wrapper"
                },
                {
                    "name": "numItems",
                    "description": "Count of items in array wrapper"
                },
                {
                    "name": "itemSize",
                    "description": "Size of each item"
                },
                {
                    "name": "usage",
                    "description": "Eg. STATIC_DRAW"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 17,
            "description": "True when this buffer is allocated and ready to go",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 73,
            "description": "Allocates this buffer",
            "params": [
                {
                    "name": "data",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 102,
            "description": "Updates data within this buffer, reallocating if needed.",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 138,
            "description": "Binds this buffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 150,
            "description": "Unbinds this buffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/arrayBuffer.js",
            "line": 162,
            "description": "Destroys this buffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/attribute.js",
            "line": 5,
            "description": "An attribute within a {@link xeogl.renderer.webgl.Shader}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 22,
            "description": "Wrapper for a WebGL program",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics"
                },
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "vertex",
                    "description": "Source code for vertex shader"
                },
                {
                    "name": "fragment",
                    "description": "Source code for fragment shader"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 36,
            "description": "True when successfully allocated",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 42,
            "description": "True when successfully compiled",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 48,
            "description": "True when successfully linked",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 54,
            "description": "True when successfully validated",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/program.js",
            "line": 60,
            "description": "Contains error log on failure to allocate, compile, validate or link",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 9,
            "description": "True as soon as this buffer is allocated and ready to go",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 14,
            "description": "The HTMLCanvasElement",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 19,
            "description": "WebGL context",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 24,
            "description": "Buffer resources, set up in #_touch",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 29,
            "description": "True while this buffer is bound",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 34,
            "description": "Optional explicit buffer size - when omitted, buffer defaults to canvas size",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 40,
            "description": "Sets custom dimensions for this buffer.\n\nBuffer dynamically re-sizes to canvas when size is null.",
            "params": [
                {
                    "name": "size",
                    "description": "Two-element size vector",
                    "type": "Array of Number"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 51,
            "description": "Called after WebGL context is restored.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 61,
            "description": "Binds this buffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 184,
            "description": "Clears this renderbuffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 195,
            "description": "Reads buffer pixel at given coordinates",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 206,
            "description": "Unbinds this renderbuffer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 214,
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/renderBuffer.js",
            "line": 242,
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 5,
            "description": "A vertex/fragment shader in a program",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "type",
                    "description": "gl.VERTEX_SHADER | gl.FRAGMENT_SHADER"
                },
                {
                    "name": "source",
                    "description": "Source code for shader"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 14,
            "description": "True if this shader successfully allocated. When false,\n#error will contain WebGL the error log.",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 21,
            "description": "True if this shader successfully compiled. When false,\n#error will contain WebGL the error log.",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 28,
            "description": "Saves the WebGL error log when this shader failed to allocate or compile.",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 34,
            "description": "The GLSL for this shader.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/shader.js",
            "line": 40,
            "description": "WebGL handle to this shader's GPU resource",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/webgl/webgl.js",
            "line": 7,
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 5,
            "description": "An object within a xeogl.renderer.Renderer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 10,
            "description": "ID for this object, unique among all objects in the Renderer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 15,
            "description": "Hash code for this object, unique among all objects in the Renderer",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 20,
            "description": "State sort key, computed from #layer, #program and #material",
            "type": "Number",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 26,
            "description": "Sequence of state chunks applied to render this object",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 31,
            "description": "Shader programs that render this object, also used for (re)computing #sortKey",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 36,
            "description": "State for the xeogl.renderer.Stage that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 41,
            "description": "State for the xeogl.renderer.Modes that this object was compiled from, used for visibility cull",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 46,
            "description": "State for the xeogl.renderer.Layer that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 51,
            "description": "State for the xeogl.renderer.Material that this object was compiled from, used for (re)computing #sortKey",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/object.js",
            "line": 56,
            "description": "True once the object has been compiled within the renderer display list.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 7,
            "description": "Vertex and fragment shaders for pick and draw",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics",
                    "type": "*"
                },
                {
                    "name": "hash",
                    "description": "Hash code which uniquely identifies the capabilities of the program, computed from hashes on the {@link Scene_Core}s that the {@link xeogl.renderer.ProgramSource} composed to render",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "Sourcecode from which the the program is compiled in {@link #build}",
                    "type": "xeogl.renderer.ProgramSource"
                },
                {
                    "name": "gl",
                    "description": "WebGL context",
                    "type": "WebGLRenderingContext"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 19,
            "description": "Hash code for this program's capabilities, same as the hash on {@link #source}",
            "type": "String",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 25,
            "description": "Source code for this program's shaders",
            "type": "renderer.ProgramSource",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 31,
            "description": "WebGL context on which this program's shaders are allocated",
            "type": "WebGLRenderingContext",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 37,
            "description": "The drawing program",
            "type": "webgl.Program",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 43,
            "description": "The object picking program",
            "type": "webgl.Program",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 49,
            "description": "The primitive picking program",
            "type": "webgl.Program",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 55,
            "description": "The outline program",
            "type": "webgl.Program",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 61,
            "description": "The count of display objects using this program",
            "type": "Number",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 67,
            "description": "True when successfully allocated",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 73,
            "description": "True when successfully compiled",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 79,
            "description": "True when successfully linked",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 85,
            "description": "True when successfully validated",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 91,
            "description": "Contains error log on failure to allocate, compile, validate or link",
            "type": "{boolean}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 101,
            "description": "Creates the render and pick programs.\n This is also re-called to re-create them after WebGL context loss.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/program.js",
            "line": 230,
            "description": "Destroys this program.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 5,
            "description": "Manages {@link xeogl.renderer.ProgramState} instances.",
            "params": [
                {
                    "name": "stats",
                    "description": "Collects runtime statistics"
                },
                {
                    "name": "gl",
                    "description": "WebGL context"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 20,
            "description": "Get a program that fits the given set of states.\nReuses any free program in the pool that matches the given hash.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 53,
            "description": "Release a program back to the pool.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programFactory.js",
            "line": 72,
            "description": "Rebuild all programs in the pool after WebGL context was lost and restored.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 5,
            "description": "Source code for pick and draw shader programs, to be compiled into one or more {@link xeogl.renderer.Program}s",
            "params": [
                {
                    "name": "hash",
                    "description": "Hash code identifying the rendering capabilities of the programs",
                    "type": "String"
                },
                {
                    "name": "vertexPickObject",
                    "description": "Vertex shader source for object picking.",
                    "type": "String"
                },
                {
                    "name": "fragmentPickObject",
                    "description": "Fragment shader source for object picking.",
                    "type": "String"
                },
                {
                    "name": "vertexPickPrimitive",
                    "description": "Vertex shader source for primitive picking.",
                    "type": "String"
                },
                {
                    "name": "fragmentPickPrimitive",
                    "description": "Fragment shader source for primitive picking.",
                    "type": "String"
                },
                {
                    "name": "vertexDraw",
                    "description": "Vertex shader source for drawing.",
                    "type": "String"
                },
                {
                    "name": "fragmentDraw",
                    "description": "Fragment shader source for drawing.",
                    "type": "String"
                },
                {
                    "name": "vertexShadow",
                    "description": "Vertex shader source for drawing the shadow buffer.",
                    "type": "String"
                },
                {
                    "name": "fragmentShadow",
                    "description": "Fragment shader source for drawing the shadow buffer.",
                    "type": "String"
                },
                {
                    "name": "vertexOutline",
                    "description": "Vertex shader source for drawing outlines.",
                    "type": "String"
                },
                {
                    "name": "fragmentOutline",
                    "description": "Fragment shader source for drawing outlines.",
                    "type": "String"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 27,
            "description": "Hash code identifying the capabilities of the {@link xeogl.renderer.Program} that is compiled from this source",
            "type": "String",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 33,
            "description": "Vertex shader source for object picking",
            "type": "{Array of String]",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 39,
            "description": "Fragment shader source for object picking.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 45,
            "description": "Vertex shader source for primitive picking.",
            "type": "{Array of String]",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 51,
            "description": "Fragment shader source for primitive picking.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 57,
            "description": "Vertex shader source for drawing.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 63,
            "description": "Fragment shader source for drawing.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 69,
            "description": "Vertex shader source for rendering shadow buffer.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 75,
            "description": "Fragment shader source for rendering shadow buffer.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 81,
            "description": "Vertex shader source for rendering outlines.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 87,
            "description": "Fragment shader source for rendering outlines.",
            "type": "{Array of String}",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSource.js",
            "line": 93,
            "description": "Count of {@link xeogl.renderer.Program}s compiled from this program source code",
            "type": "Number",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 5,
            "description": "Manages creation, sharing and recycle of {@link xeogl.renderer.ProgramSource} instances",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 30,
            "description": "Get source code for a program to render the given states.\nAttempts to reuse cached source code for the given hash.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/programSourceFactory.js",
            "line": 134,
            "description": "Releases program source code back to this factory.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 27,
            "description": "Optional callback to fire when renderer wants to\nbind an output framebuffer. This is useful when we need to bind a stereo output buffer for WebVR.\n\nWhen this is missing, the renderer will implicitly bind\nWebGL's default framebuffer.\n\nThe callback takes one parameter, which is the index of the current\nrendering pass in which the buffer is to be bound.\n\nUse like this: myRenderer.bindOutputFramebuffer = function(pass) { .. });",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 41,
            "description": "Optional callback to fire when renderer wants to\nunbind any output drawing framebuffer that was\npreviously bound with #bindOutputFramebuffer.\n\nThe callback takes one parameter, which is the index of the current\nrendering pass in which the buffer is to be bound.\n\nUse like this: myRenderer.unbindOutputFramebuffer = function(pass) { .. });\n\nCallback takes no parameters.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 97,
            "description": "Reallocates WebGL resources for objects within this renderer.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 110,
            "description": "Internally creates (or updates) a {@link xeogl.renderer.Object} of the given\nID from whatever component state cores are currently set on this {@link xeogl.Renderer}.\nThe object is created if it does not already exist in the display, otherwise\nit is updated with the current states, possibly replacing states already\nreferenced by the object.",
            "params": [
                {
                    "name": "objectId",
                    "description": "ID of object to create or update",
                    "type": "String"
                }
            ],
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 691,
            "description": "Attempts to pick an object.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/renderer.js",
            "line": 893,
            "description": "Reads the colors of some pixels in the current image.",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_renderer/states.js",
            "line": 1,
            "description": "Renderer states",
            "class": "CameraFlightAnimation"
        },
        {
            "file": "src/_utils/inheritance.js",
            "line": 114,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "CameraFlightAnimation",
            "module": "xeogl"
        },
        {
            "file": "src/_utils/map.js",
            "line": 7,
            "description": "Generic map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "class": "CameraFlightAnimation",
            "module": "xeogl"
        },
        {
            "file": "src/_utils/map.js",
            "line": 13,
            "description": "Items in this map",
            "class": "CameraFlightAnimation",
            "module": "xeogl"
        },
        {
            "file": "src/_utils/map.js",
            "line": 21,
            "description": "Adds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "class": "CameraFlightAnimation",
            "module": "xeogl"
        },
        {
            "file": "src/_utils/map.js",
            "line": 53,
            "description": "Removes the item of the given ID from the map and returns it",
            "class": "CameraFlightAnimation",
            "module": "xeogl"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 116,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 196,
            "description": "Begins flying this CameraFlightAnimation's {{#crossLink \"Camera\"}}{{/crossLink}} to the given target.\n\n\n * When the target is a boundary, the {{#crossLink \"Camera\"}}{{/crossLink}} will fly towards the target\n   and stop when the target fills most of the canvas.\n * When the target is an explicit {{#crossLink \"Camera\"}}{{/crossLink}} position, given as ````eye````, ````look```` and ````up````\n   vectors, then this CameraFlightAnimation will interpolate the {{#crossLink \"Camera\"}}{{/crossLink}} to that target and stop there.",
            "itemtype": "method",
            "name": "flyTo",
            "params": [
                {
                    "name": "params",
                    "description": "Either a parameters object or a {{#crossLink \"Component\"}}{{/crossLink}} subtype that has a {{#crossLink \"WorldBoundary\"}}{{/crossLink}}.",
                    "type": "*|Component",
                    "optional": true,
                    "optdefault": "scene",
                    "props": [
                        {
                            "name": "arc",
                            "description": "indicating how much the\n{{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} position will\nswing away from its {{#crossLink \"Camera/eye:property\"}}look{{/crossLink}} position as it flies to the target.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0]   Factor in range [0..1"
                        },
                        {
                            "name": "component",
                            "description": "ID or instance of a component to fly to. Defaults to the entire {{#crossLink \"Scene\"}}{{/crossLink}}.",
                            "type": "Number|String|Component",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "World-space axis-aligned bounding box (AABB) target to fly to.",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Position to fly the eye position to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "look",
                            "description": "Position to fly the look position to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "up",
                            "description": "Position to fly the up vector to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "fit",
                            "description": "Whether to fit the target to the view volume. Overrides {{#crossLink \"CameraFlightAnimation/fit:property\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "fitFOV",
                            "description": "How much of field-of-view, in degrees, that a target {{#crossLink \"Entity\"}}{{/crossLink}} or its AABB should\nfill the canvas on arrival. Overrides {{#crossLink \"CameraFlightAnimation/fitFOV:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "duration",
                            "description": "Flight duration in seconds.  Overrides {{#crossLink \"CameraFlightAnimation/duration:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Callback fired on arrival",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "scope",
                    "description": "Optional scope for callback",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 417,
            "description": "Jumps this CameraFlightAnimation's {{#crossLink \"Camera\"}}{{/crossLink}} to the given target.\n\n * When the target is a boundary, this CameraFlightAnimation will position the {{#crossLink \"Camera\"}}{{/crossLink}}\n at where the target fills most of the canvas.\n * When the target is an explicit {{#crossLink \"Camera\"}}{{/crossLink}} position, given as ````eye````, ````look```` and ````up````\n vectors, then this CameraFlightAnimation will jump the {{#crossLink \"Camera\"}}{{/crossLink}} to that target.",
            "itemtype": "method",
            "name": "flyTo",
            "params": [
                {
                    "name": "params",
                    "description": "Either a parameters object or a {{#crossLink \"Component\"}}{{/crossLink}} subtype that has a {{#crossLink \"WorldBoundary\"}}{{/crossLink}}.",
                    "type": "*|Component",
                    "props": [
                        {
                            "name": "arc",
                            "description": "indicating how much the\n{{#crossLink \"Camera/eye:property\"}}Camera's eye{{/crossLink}} position will\nswing away from its {{#crossLink \"Camera/eye:property\"}}look{{/crossLink}} position as it flies to the target.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0]   Factor in range [0..1"
                        },
                        {
                            "name": "component",
                            "description": "ID or instance of a component to fly to.",
                            "type": "Number|String|Component",
                            "optional": true
                        },
                        {
                            "name": "aabb",
                            "description": "World-space axis-aligned bounding box (AABB) target to fly to.",
                            "type": "*",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Position to fly the eye position to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "look",
                            "description": "Position to fly the look position to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "up",
                            "description": "Position to fly the up vector to.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "fitFOV",
                            "description": "How much of field-of-view, in degrees, that a target {{#crossLink \"Entity\"}}{{/crossLink}} or its AABB should\nfill the canvas on arrival. Overrides {{#crossLink \"CameraFlightAnimation/fitFOV:property\"}}{{/crossLink}}.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "fit",
                            "description": "Whether to fit the target to the view volume. Overrides {{#crossLink \"CameraFlightAnimation/fit:property\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 662,
            "description": "Stops an earlier flyTo, fires arrival callback.",
            "itemtype": "method",
            "name": "stop",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 695,
            "description": "Cancels an earlier flyTo without calling the arrival callback.",
            "itemtype": "method",
            "name": "cancel",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 721,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled by this CameraFlightAnimation.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraFlightAnimation. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"CameraFlightAnimation/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 737,
            "description": "Fired whenever this CameraFlightAnimation's {{#crossLink \"CameraFlightAnimation/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 761,
            "description": "Flight duration, in seconds, when calling {{#crossLink \"CameraFlightAnimation/flyTo:method\"}}{{/crossLink}}.\n\nStops any flight currently in progress.\n\nFires a {{#crossLink \"CameraFlightAnimation/duration:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "duration",
            "default": "0.5",
            "type": "Number",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 778,
            "description": "Fired whenever this CameraFlightAnimation's {{#crossLink \"CameraFlightAnimation/duration:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "duration",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 794,
            "description": "When true, will ensure that this CameraFlightAnimation is flying to a boundary it will always adjust the distance between the\n{{#crossLink \"CameraFlightAnimation/camera:property\"}}camera{{/crossLink}}'s {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}}\nand {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nso as to ensure that the target boundary is always filling the view volume.\n\nWhen false, the eye will remain at its current distance from the look position.\n\nFires a {{#crossLink \"CameraFlightAnimation/fit:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fit",
            "type": "Boolean",
            "default": "true",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 814,
            "description": "Fired whenever this CameraFlightAnimation's\n{{#crossLink \"CameraFlightAnimation/fit:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fit",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 829,
            "description": "How much of field-of-view, in degrees, that a target {{#crossLink \"Entity\"}}{{/crossLink}} or its AABB should\nfill the canvas when calling {{#crossLink \"CameraFlightAnimation/flyTo:method\"}}{{/crossLink}} or {{#crossLink \"CameraFlightAnimation/jumpTo:method\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"CameraFlightAnimation/fitFOV:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fitFOV",
            "default": "45",
            "type": "Number",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 845,
            "description": "Fired whenever this CameraFlightAnimation's {{#crossLink \"CameraFlightAnimation/fitFOV:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fitFOV",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 859,
            "description": "When true, will cause this CameraFlightAnimation to point the {{#crossLink \"CameraFlightAnimation/camera:property\"}}{{/crossLink}}\nin the direction that it is travelling.\n\nFires a {{#crossLink \"CameraFlightAnimation/trail:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "trail",
            "type": "Boolean",
            "default": "false",
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/cameraFlightAnimation.js",
            "line": 875,
            "description": "Fired whenever this CameraFlightAnimation's {{#crossLink \"CameraFlightAnimation/trail:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "trail",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFlightAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 47,
            "description": "The morph targets.\n\nTODO",
            "itemtype": "property",
            "name": "targets",
            "default": "[]",
            "type": "Array",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 60,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/targets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "targets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 72,
            "description": "The morph factor",
            "itemtype": "property",
            "name": "factor",
            "default": "0",
            "type": "Number",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 83,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/factor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "factor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/animation/morphTargets.js",
            "line": 101,
            "description": "JSON representation of this component",
            "itemtype": "property",
            "name": "json",
            "type": "Object",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 85,
            "description": "Fired whenever this Boundary2D's {{#crossLink \"Boundary2D/aabb:property\"}}{{/crossLink}} and {{#crossLink \"Boundary2D/center:property\"}}{{/crossLink}}.\nproperties change.",
            "itemtype": "event",
            "name": "updated",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 116,
            "description": "An axis-aligned box (AABB) representation of this 2D boundary.\n\nThe AABB is represented by a four-element Float32Array containing the min/max canvas-space\nextents of the axis-aligned volume, ie. ````[xmin,ymin,xmax,ymax]````.",
            "itemtype": "property",
            "name": "aabb",
            "final": 1,
            "type": "{Float32Array}",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary2d.js",
            "line": 138,
            "description": "The center point of this 2D boundary.\n\nThe center point is represented by a Float32Array containing canvas-space coordinates,\nie. ````[x,y]````.",
            "itemtype": "property",
            "name": "center",
            "final": 1,
            "type": "{Float32Array}",
            "class": "Boundary2D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 103,
            "description": "Fired whenever this Boundary3D's {{#crossLink \"Boundary3D/obb:property\"}}{{/crossLink}},\n{{#crossLink \"Boundary3D/aabb:property\"}}{{/crossLink}} or {{#crossLink \"Boundary3D/center:property\"}}{{/crossLink}} properties change.",
            "itemtype": "event",
            "name": "updated",
            "class": "Boundary3D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 136,
            "description": "An oriented box (OBB) representation of this 3D boundary.\n\nThe OBB is represented by a 32-element Float32Array containing the eight vertices of the box,\nwhere each vertex is a homogeneous coordinate having [x,y,z,w] elements.\ni",
            "itemtype": "property",
            "name": "obb",
            "final": 1,
            "type": "{Float32Array}",
            "class": "Boundary3D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 158,
            "description": "An axis-aligned box (AABB) representation of this 3D boundary.\n\nThe AABB is represented by a six-element Float32Array containing the min/max extents of the\naxis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.",
            "itemtype": "property",
            "name": "aabb",
            "final": 1,
            "type": "{Float32Array}",
            "class": "Boundary3D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/boundaries/boundary3d.js",
            "line": 180,
            "description": "The center point of this 3D boundary.\n\nThe center point is represented by a Float32Array containing elements ````[x,y,z]````.",
            "itemtype": "property",
            "name": "center",
            "final": 1,
            "type": "{Float32Array}",
            "class": "Boundary3D",
            "module": "xeogl",
            "submodule": "boundaries"
        },
        {
            "file": "src/camera/camera.js",
            "line": 89,
            "description": "The projection transform for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/project:property\"}}project{{/crossLink}}, which is\na {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/project:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "project",
            "type": "Transform",
            "class": "Camera",
            "module": "xeogl",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 105,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/project:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "project",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "xeogl",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 132,
            "description": "The viewing transform for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/view:property\"}}view{{/crossLink}}, which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/view:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "view",
            "type": "Transform",
            "class": "Camera",
            "module": "xeogl",
            "submodule": "camera"
        },
        {
            "file": "src/camera/camera.js",
            "line": 147,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/view:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "view",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "xeogl",
            "submodule": "camera"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 126,
            "description": "The HTML canvas. When the {{#crossLink \"Viewer\"}}{{/crossLink}} was configured with the ID of an existing canvas within the DOM,\nthen this property will be that element, otherwise it will be a full-page canvas that this Canvas has\ncreated by default, with a z-index of -10000.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 137,
            "description": "A transparent HTML DIV overlaid over the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}, with a z-index\nof 100000.\n\nThe parent {{#crossLink \"Scene\"}}{{/crossLink}}'s {{#crossLink \"Input\"}}{{/crossLink}} will relay mouse\nevents from this DIV, instead of from the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}.\n\nWhen you need to have various HTML elements floating around over\nthe {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}}, then if you give those a z-index that lies between\nthat of the {{#crossLink \"Canvas/canvas:property\"}}{{/crossLink}} and this DIV, your elements will not\ninterfere with those events.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 155,
            "description": "The WebGL rendering context.",
            "itemtype": "property",
            "name": "gl",
            "type": "{WebGLRenderingContext}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 164,
            "description": "True when WebGL 2 support is enabled.",
            "itemtype": "property",
            "name": "webgl2",
            "type": "{Boolean}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 173,
            "description": "Indicates whether this Canvas is transparent.",
            "itemtype": "property",
            "name": "transparent",
            "type": "{Boolean}",
            "default": "{false}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 183,
            "description": "Attributes for the WebGL context",
            "type": "{{}|*}",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 242,
            "description": "Boundary of the Canvas in absolute browser window coordinates.\n\n### Usage:\n\n````javascript\nvar boundary = myScene.canvas.boundary;\n\nvar xmin = boundary[0];\nvar ymin = boundary[1];\nvar width = boundary[2];\nvar height = boundary[3];\n````",
            "itemtype": "property",
            "name": "boundary",
            "type": "{{Array of Number}}",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 279,
            "description": "Fired whenever the WebGL context has been lost",
            "itemtype": "event",
            "name": "webglContextLost",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 292,
            "description": "Fired whenever the WebGL context has been restored again after having previously being lost",
            "itemtype": "event",
            "name": "webglContextRestored",
            "params": [
                {
                    "name": "value",
                    "description": "The WebGL context object"
                }
            ],
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 354,
            "description": "Fired whenever this Canvas's {{#crossLink \"Canvas/boundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 391,
            "description": "Creates a default canvas in the DOM.",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 421,
            "description": "Creates a image element behind the canvas, for purpose of showing a custom background.",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 448,
            "description": "Creates an invisible DIV over the canvas, for purpose of catching\ninput events without interfering with app-lever UI bits floating underneath.",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 475,
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 505,
            "description": "Initialises the WebGL context",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 538,
            "description": "Fired whenever the canvas failed to get a WebGL context, which probably means that WebGL\nis either unsupported or has been disabled.",
            "itemtype": "event",
            "name": "webglContextFailed",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 547,
            "description": "Returns a snapshot of this Canvas as a Base64-encoded image.\n\nWhen a callback is given, this method will capture the snapshot asynchronously, on the next animation frame,\nand return it via the callback.\n\nWhen no callback is given, this method captures and returns the snapshot immediately. Note that is only\npossible when you have configured the Canvas's {{#crossLink \"Scene\"}}Scene{{/crossLink}} to preserve the\nWebGL drawing buffer, which has a performance overhead.\n\n#### Usage:\n\n````javascript\n// Get snapshot asynchronously\nmyScene.canvas.getSnapshot({\n    width: 500, // Defaults to size of canvas\n    height: 500,\n    format: \"png\" // Options are \"jpeg\" (default), \"png\" and \"bmp\"\n}, function(imageDataURL) {\n    imageElement.src = imageDataURL;\n});\n\n// Get snapshot synchronously, requires that Scene be\n// configured with preserveDrawingBuffer; true\nimageElement.src = myScene.canvas.getSnapshot({\n    width: 500,\n    height: 500,\n    format: \"png\"\n});\n````",
            "itemtype": "method",
            "name": "getSnapshot",
            "params": [
                {
                    "name": "params",
                    "description": "Capture options.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "width",
                            "description": "Desired width of result in pixels - defaults to width of canvas.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "Desired height of result in pixels - defaults to height of canvas.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "format",
                            "description": "Desired format; \"jpeg\", \"png\" or \"bmp\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"jpeg\""
                        }
                    ]
                },
                {
                    "name": "ok",
                    "description": "Callback to return the image data when taking a snapshot asynchronously.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "String-encoded image data when taking the snapshot synchronously. Returns null when the ````ok```` callback is given.",
                "type": "String"
            },
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 628,
            "description": "Reads colors of pixels from the last rendered frame.\n\n<p>Call this method like this:</p>\n\n````JavaScript\n\n// Ignore transparent pixels (default is false)\nvar opaqueOnly = true;\n\nvar colors = new Float32Array(8);\n\nmyCanvas.readPixels([ 100, 22, 12, 33 ], colors, 2, opaqueOnly);\n````\n\nThen the r,g,b components of the colors will be set to the colors at those pixels.",
            "params": [
                {
                    "name": "pixels",
                    "description": "",
                    "type": "Float32Array"
                },
                {
                    "name": "colors",
                    "description": "",
                    "type": "Float32Array"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "opaqueOnly",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 656,
            "description": "A background color for the canvas. This is overridden by {{#crossLink \"Canvas/backgroundImage:property\"}}{{/crossLink}}.\n\nYou can set this to a new color at any time.\n\nFires a {{#crossLink \"Canvas/backgroundColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "Float32Array",
            "default": "null",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 685,
            "description": "Fired whenever this Canvas's {{#crossLink \"Canvas/backgroundColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backgroundColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 698,
            "description": "URL of a background image for the canvas. This is overrided by {{#crossLink \"Canvas/backgroundColor/property\"}}{{/crossLink}}.\n\nYou can set this to a new file path at any time.\n\nFires a {{#crossLink \"Canvas/background:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backgroundImage",
            "type": "String",
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 733,
            "description": "Fired whenever this Canvas's {{#crossLink \"Canvas/backgroundImage:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backgroundImage",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/canvas.js",
            "line": 746,
            "description": "The busy {{#crossLink \"Spinner\"}}{{/crossLink}} for this Canvas.",
            "itemtype": "property",
            "name": "spinner",
            "type": "Spinner",
            "final": 1,
            "class": "Canvas",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/spinner.js",
            "line": 111,
            "description": "Whether Spinner shows while images are loading for components like {{#crossLink \"Texture\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Spinner/textures:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "textures",
            "default": "true",
            "type": "Boolean",
            "class": "Spinner",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/spinner.js",
            "line": 128,
            "description": "Fired whenever this Spinner's  {{#crossLink \"Spinner/textures:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "textures",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Spinner",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/spinner.js",
            "line": 142,
            "description": "The number of processes this Spinner represents.\n\nThe Spinner is visible while this property is greater than zero.\n\nIncrement this property whenever you commence some process during which you want\nthe Spinner to be visible, then decrement it again when the process is complete.\n\nClamps to zero if you attempt to set to to a negative value.\n\nFires a {{#crossLink \"Spinner/processes:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "processes",
            "default": "0",
            "type": "Number",
            "class": "Spinner",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/canvas/spinner.js",
            "line": 176,
            "description": "Fired whenever this Spinner's {{#crossLink \"Spinner/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "processes",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Spinner",
            "module": "xeogl",
            "submodule": "canvas"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 105,
            "description": "Indicates whether this Clip is active or not.\n\nFires a {{#crossLink \"Clip/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "default": "true",
            "type": "Boolean",
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 120,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 134,
            "description": "The World-space position of this Clip's plane.\n\nFires a {{#crossLink \"Clip/pos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pos",
            "default": "[0, 0, 0]",
            "type": "Float32Array",
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 151,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "Float32Array The property's new value"
                }
            ],
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 165,
            "description": "Vector indicating the orientation of this Clip plane.\n\nThe vector originates at {{#crossLink \"Clip/pos:property\"}}{{/crossLink}}. Elements on the\nsame side of the vector are clipped.\n\nFires a {{#crossLink \"Clip/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[0, 0, -1]",
            "type": "Float32Array",
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clip.js",
            "line": 185,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Clip",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clips.js",
            "line": 55,
            "description": "The clipping planes contained within this Clips.\n\nFires a {{#crossLink \"Clips/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "default": "[]",
            "type": "Array(xeogl.Clip)",
            "class": "Clips",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/clipping/clips.js",
            "line": 150,
            "description": "Fired whenever this Clips' {{#crossLink \"Clips/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of xeogl.Clip"
                }
            ],
            "class": "Clips",
            "module": "xeogl",
            "submodule": "clipping"
        },
        {
            "file": "src/configs/configs.js",
            "line": 78,
            "description": "Sets a property on this Configs.\n\nFires an event with the same name as the property. Existing subscribers to the event will be\nnotified immediately of the property value. Like all events on a Component, this Configs will\nretain the event, to notify any subscribers that are attached subsequently.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The property value",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Configs",
            "module": "xeogl",
            "submodule": "configs"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 80,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 89,
            "description": "Indicates that only one instance of a CameraControl may be active within\nits {{#crossLink \"Scene\"}}{{/crossLink}} at a time. When a CameraControl is activated, that has\na true value for this flag, then any other active CameraControl will be deactivated first.",
            "itemtype": "property",
            "name": "exclusive",
            "type": "Boolean",
            "final": 1,
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 173,
            "description": "The {{#crossLink \"cameraFlightAnimation\"}}{{/crossLink}} within this CameraControl.",
            "itemtype": "property",
            "name": "cameraFlight",
            "final": 1,
            "type": "cameraFlightAnimation",
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 240,
            "description": "Flag which indicates whether this CameraControl is in \"first person\" mode.\n\nIn \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,\nthe eye rotates about the look.\n\nFires a {{#crossLink \"KeyboardRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 263,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 276,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled by this CameraControl.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraControl. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 290,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 326,
            "description": "Flag which indicates whether this CameraControl is active or not.\n\nFires an {{#crossLink \"CameraControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraControl.js",
            "line": 356,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/cameraController.js",
            "line": 35,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} attached to this CameraController.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraController. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraController",
            "module": "xeogl",
            "submodule": "interaction"
        },
        {
            "file": "src/controls/cameraController.js",
            "line": 49,
            "description": "Fired whenever this CameraController's {{#crossLink \"CameraController/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraController",
            "module": "xeogl",
            "submodule": "interaction"
        },
        {
            "file": "src/controls/cameraController.js",
            "line": 71,
            "description": "Flag which indicates whether this CameraController is active or not.\n\nFires an {{#crossLink \"CameraController/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "CameraController",
            "module": "xeogl",
            "submodule": "interaction"
        },
        {
            "file": "src/controls/cameraController.js",
            "line": 92,
            "description": "Fired whenever this CameraController's {{#crossLink \"CameraController/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraController",
            "module": "xeogl",
            "submodule": "interaction"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 44,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 53,
            "description": "Indicates that only one instance of a InputControl may be active within\nits {{#crossLink \"Scene\"}}{{/crossLink}} at a time. When a InputControl is activated, that has\na true value for this flag, then any other active InputControl will be deactivated first.",
            "itemtype": "property",
            "name": "exclusive",
            "type": "Boolean",
            "final": 1,
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 105,
            "description": "Flag which indicates whether this InputControl is in \"first person\" mode.\n\nIn \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,\nthe eye rotates about the look.\n\nFires a {{#crossLink \"KeyboardRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 125,
            "description": "Fired whenever this InputControl's {{#crossLink \"InputControl/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 138,
            "description": "Flag which indicates whether this InputControl is in \"walking\" mode.\n\nWhen set true, this constrains eye movement to the horizontal X-Z plane. When doing a walkthrough,\nthis is useful to allow us to look upwards or downwards as we move, while keeping us moving in the\nhorizontal plane.\n\nThis only has an effect when also in \"first person\" mode.\n\nFires a {{#crossLink \"KeyboardRotateCamera/walking:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "walking",
            "default": "false",
            "type": "Boolean",
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 161,
            "description": "Fired whenever this InputControl's {{#crossLink \"InputControl/walking:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "walking",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 174,
            "description": "TODO\nFires a {{#crossLink \"KeyboardRotateCamera/doublePickFlyTo:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "doublePickFlyTo",
            "default": "true",
            "type": "Boolean",
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 190,
            "description": "Fired whenever this InputControl's {{#crossLink \"InputControl/doublePickFlyTo:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "doublePickFlyTo",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 203,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled by this InputControl.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this InputControl. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/inputControl.js",
            "line": 217,
            "description": "Fired whenever this InputControl's {{#crossLink \"InputControl/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "InputControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 66,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 96,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardAxisCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardAxisCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardAxisCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 112,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 135,
            "description": "Flag which indicates whether this KeyboardAxisCamera is active or not.\n\nFires an {{#crossLink \"KeyboardAxisCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardAxisCamera.js",
            "line": 191,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 66,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 90,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardPanCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardPanCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardPanCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 106,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 126,
            "description": "The sensitivity of this KeyboardPanCamera.\n\nFires a {{#crossLink \"KeyboardPanCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 141,
            "description": "Fired whenever this KeyboardPanCamera's  {{#crossLink \"KeyboardPanCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 155,
            "description": "Flag which indicates whether this KeyboardPanCamera is active or not.\n\nFires an {{#crossLink \"KeyboardPanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardPanCamera.js",
            "line": 242,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 72,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 96,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardRotateCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardRotateCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardRotateCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 112,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 132,
            "description": "The sensitivity of this KeyboardRotateCamera.\n\nFires a {{#crossLink \"KeyboardRotateCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "1.0",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 147,
            "description": "Fired whenever this KeyboardRotateCamera's  {{#crossLink \"KeyboardRotateCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 161,
            "description": "Flag which indicates whether this KeyboardRotateCamera is in \"first person\" mode.\n\nA KeyboardRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to its\ntarget {{#crossLink \"Camera\"}}{{/crossLink}}. In 'first person' mode, the\n{{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition orbits the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise\nthe {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} orbits {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"KeyboardRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 184,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 197,
            "description": "Flag which indicates whether this KeyboardRotateCamera is active or not.\n\nFires an {{#crossLink \"KeyboardRotateCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardRotateCamera.js",
            "line": 285,
            "description": "Fired whenever this KeyboardRotateCamera's {{#crossLink \"KeyboardRotateCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 59,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 83,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this KeyboardZoomCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this KeyboardZoomCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"KeyboardZoomCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 99,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 119,
            "description": "The sensitivity of this KeyboardZoomCamera.\n\nFires a {{#crossLink \"KeyboardZoomCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 134,
            "description": "Fired whenever this KeyboardZoomCamera's  {{#crossLink \"KeyboardZoomCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 148,
            "description": "Flag which indicates whether this KeyboardZoomCamera is active or not.\n\nFires an {{#crossLink \"KeyboardZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/keyboardZoomCamera.js",
            "line": 215,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 67,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 94,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MousePanCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MousePanCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MousePanCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 110,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 130,
            "description": "The sensitivity of this MousePanCamera.\n\nFires a {{#crossLink \"MousePanCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 145,
            "description": "Fired whenever this MousePanCamera's  {{#crossLink \"MousePanCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 159,
            "description": "Flag which indicates whether this MousePanCamera is active or not.\n\nFires an {{#crossLink \"MousePanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePanCamera.js",
            "line": 250,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 69,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 87,
            "description": "Flag which indicates whether this MousePickEntity is active or not.\n\nFires a {{#crossLink \"MousePickEntity/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 160,
            "description": "Fired whenever an {{#crossLink \"Entity\"}}Entity{{/crossLink}} is picked.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "entityId",
                    "description": "The ID of the picked {{#crossLink \"Entity\"}}Entity{{/crossLink}} within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space coordinate that was picked.",
                    "type": "Array of Number"
                },
                {
                    "name": "worldPos",
                    "description": "When {{#crossLink \"MousePickEntity/pickSurface\"}}{{/crossLink}} is true,\nprovides the World-space coordinate that was ray-picked on the pickSurface of the\n{{#crossLink \"Entity\"}}Entity{{/crossLink}}.",
                    "type": "Array of Number"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 173,
            "description": "Fired whenever an attempt to pick {{#crossLink \"Entity\"}}Entity{{/crossLink}} picks empty space.",
            "itemtype": "event",
            "name": "nopick",
            "params": [
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space coordinate at which the pick was attempted.",
                    "type": "Array of Number"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 192,
            "description": "Fired whenever this MousePickEntity's {{#crossLink \"MousePickEntity/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 205,
            "description": "Indicates whether this MousePickEntity will try to pick a {{#crossLink \"Geometry\"}}{{/crossLink}} primitive\nwhenever it picks an {{#crossLink \"Entity\"}}{{/crossLink}}.\n\nWhen true, this MousePickEntity will try to return the primitive index in a\n{{#crossLink \"MousePickEntity/picked:event\"}}{{/crossLink}} event.\n\nFires a {{#crossLink \"MousePickEntity/pickSurface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pickSurface",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mousePickEntity.js",
            "line": 229,
            "description": "Fired whenever this MousePickEntity's {{#crossLink \"MousePickEntity/pickSurface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pickSurface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 73,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 100,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MouseRotateCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseRotateCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MouseRotateCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 116,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 136,
            "description": "The sensitivity of this MouseRotateCamera.\n\nFires a {{#crossLink \"MouseRotateCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 151,
            "description": "Fired whenever this MouseRotateCamera's  {{#crossLink \"MouseRotateCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 165,
            "description": "Flag which indicates whether this MouseRotateCamera is in \"first person\" mode.\n\nA MouseRotateCamera updates the {{#crossLink \"Lookat\"}}{{/crossLink}} attached to its\ntarget {{#crossLink \"Camera\"}}{{/crossLink}}. In 'first person' mode, the\n{{#crossLink \"Lookat\"}}Lookat's{{/crossLink}} {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\nposition orbits the {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} position, otherwise\nthe {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} orbits {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"MouseRotateCamera/firstPerson:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "firstPerson",
            "default": "false",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 188,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/firstPerson:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "firstPerson",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 201,
            "description": "Flag which indicates whether this MouseRotateCamera is active or not.\n\nFires an {{#crossLink \"MouseRotateCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseRotateCamera.js",
            "line": 356,
            "description": "Fired whenever this MouseRotateCamera's {{#crossLink \"MouseRotateCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 59,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 84,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this MouseZoomCamera.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MouseZoomCamera. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"MouseZoomCamera/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 100,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 120,
            "description": "The sensitivity of this MouseZoomCamera.\n\nFires a {{#crossLink \"MouseZoomCamera/sensitivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sensitivity",
            "type": "Number",
            "default": "0.5",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 135,
            "description": "Fired whenever this MouseZoomCamera's  {{#crossLink \"MouseZoomCamera/sensitivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sensitivity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 149,
            "description": "Indicates whether this MouseZoomCamera is active or not.\n\nFires an {{#crossLink \"MouseZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/controls/mouseZoomCamera.js",
            "line": 262,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "src/emphasis/outline.js",
            "line": 64,
            "description": "The Outline's thickness in pixels.\n\nFires a {{#crossLink \"Outline/thickness:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "thickness",
            "default": "15",
            "type": "Number",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/outline.js",
            "line": 92,
            "description": "Fired whenever this Outline's  {{#crossLink \"Outline/thickness:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "thickness",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/outline.js",
            "line": 106,
            "description": "The Outline's RGB color.\n\nFires a {{#crossLink \"Outline/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[1.0, 1.0, 0.0]",
            "type": "Float32Array",
            "class": "Outline",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/outline.js",
            "line": 141,
            "description": "Fired whenever this Outline's {{#crossLink \"Outline/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Outline",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/xray.js",
            "line": 64,
            "description": "The XRay's thickness in pixels.\n\nFires a {{#crossLink \"XRay/thickness:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "thickness",
            "default": "15",
            "type": "Number",
            "class": "XRay",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/xray.js",
            "line": 92,
            "description": "Fired whenever this XRay's  {{#crossLink \"XRay/thickness:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "thickness",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "XRay",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/xray.js",
            "line": 106,
            "description": "The XRay's RGB color.\n\nFires a {{#crossLink \"XRay/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[1.0, 1.0, 0.0]",
            "type": "Float32Array",
            "class": "XRay",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/emphasis/xray.js",
            "line": 141,
            "description": "Fired whenever this XRay's {{#crossLink \"XRay/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "XRay",
            "module": "xeogl",
            "submodule": "emphasis"
        },
        {
            "file": "src/entities/entity.js",
            "line": 227,
            "description": "Fired when this Entity is *picked* via a call to the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method\non the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas {{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "entityId",
                    "description": "The ID of this Entity.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 307,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 327,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 356,
            "description": "The {{#crossLink \"Clips\"}}Clips{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "type": "Clips",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 372,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 390,
            "description": "The {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/geometry:property\"}}geometry{{/crossLink}}\n(a simple box) when set to a null or undefined value.\n\nFires an {{#crossLink \"Entity/geometry:event\"}}{{/crossLink}} event on change.\n\nUpdates {{#crossLink \"Entity/boundary\"}}{{/crossLink}},\n{{#crossLink \"Entity/worldObb\"}}{{/crossLink}} and\n{{#crossLink \"Entity/center\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "geometry",
            "type": "Geometry",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 414,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/geometry:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "geometry",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 443,
            "description": "The {{#crossLink \"Lights\"}}Lights{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/lights:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lights",
            "type": "Lights",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 459,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/lights:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lights",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 478,
            "description": "The {{#crossLink \"Material\"}}Material{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/material:property\"}}material{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/material:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "material",
            "type": "Material",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 494,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/material:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "material",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 513,
            "description": "The {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/morphTargets:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "morphTargets",
            "access": "private",
            "tagname": "",
            "type": "MorphTargets",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 530,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/morphTargets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "morphTargets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 548,
            "description": "The Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}}\n(an identity matrix) when set to a null or undefined value.\n\nFires an {{#crossLink \"Entity/transform:event\"}}{{/crossLink}} event on change.\n\nUpdates {{#crossLink \"Entity/boundary\"}}{{/crossLink}},\n{{#crossLink \"Entity/worldObb\"}}{{/crossLink}} and\n{{#crossLink \"Entity/center\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "transform",
            "type": "Transform",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 572,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/transform:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 613,
            "description": "The {{#crossLink \"Viewport\"}}{{/crossLink}} attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. When set to a null or undefined value,\ndefaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/viewport:property\"}}viewport{{/crossLink}},\nwhich automatically resizes to the canvas.\n\nFires an {{#crossLink \"Entity/viewport:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "viewport",
            "type": "Viewport",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 629,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/viewport:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "viewport",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 649,
            "description": "The {{#crossLink \"Outline\"}}Outline{{/crossLink}} effect attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/outline:property\"}}Outline{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/outline:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "outline",
            "type": "Outline",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 665,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/Outline:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "Outline",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 684,
            "description": "The {{#crossLink \"XRay\"}}XRay{{/crossLink}} effect attached to this Entity.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Entity. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/xray:property\"}}XRay{{/crossLink}} when set to\na null or undefined value.\n\nFires an {{#crossLink \"Entity/xray:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xray",
            "type": "XRay",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 700,
            "description": "Fired whenever this Entity's  {{#crossLink \"Entity/XRay:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "XRay",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 719,
            "description": "Indicates whether this Entity is visible or not.\n\nThe Entity is only rendered when {{#crossLink \"Entity/visible:property\"}}{{/crossLink}} is true and\n{{#crossLink \"Entity/culled:property\"}}{{/crossLink}} is false.\n\nFires a {{#crossLink \"Entity/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 739,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 753,
            "description": "Indicates whether or not this Entity is currently culled from view.\n\nThe Entity is only rendered when {{#crossLink \"Entity/visible:property\"}}{{/crossLink}} is true and\n{{#crossLink \"Entity/culled:property\"}}{{/crossLink}} is false.\n\nFires a {{#crossLink \"Entity/culled:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "culled",
            "default": "false",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 773,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/culled:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "culled",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 787,
            "description": "Indicates whether this entity is pickable or not.\n\nPicking is done via calls to {{#crossLink \"Canvas/pick:method\"}}Canvas#pick{{/crossLink}}.\n\nFires a {{#crossLink \"Entity/pickable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pickable",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 813,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/pickable:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pickable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 827,
            "description": "Indicates whether this Entity is clippable by {{#crossLink \"Clips\"}}{{/crossLink}} components.\n\nFires a {{#crossLink \"Entity/clippable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clippable",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 850,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/clippable:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clippable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 864,
            "description": "Indicates whether this Entity is included in boundary calculations.\n\nSet this false if the Entity is a helper or indicator that should not be included in boundary calculations.\n\nFor example, when set false, the {{#crossLink \"Entity/worldBoundary:property\"}}World-space boundary{{/crossLink}} of all attached {{#crossLink \"Entity\"}}Entities{{/crossLink}} would not be considered when calculating the {{#crossLink \"Scene/worldBoundary:property\"}}World-space boundary{{/crossLink}} of their\n{{#crossLink \"Scene\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Entity/collidable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "collidable",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 890,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/collidable:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "collidable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 905,
            "description": "Indicates whether this Entity casts shadows.\n\nFires a {{#crossLink \"Entity/castShadow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "castShadow",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 928,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/castShadow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "castShadow",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 942,
            "description": "Indicates whether this Entity receives shadows.\n\nFires a {{#crossLink \"Entity/receiveShadow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "receiveShadow",
            "default": "true",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 967,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/receiveShadow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "receiveShadow",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 981,
            "description": "Indicates whether this Entity is rendered with an outline.\n\nThe outline effect is configured via the Entity's {{#crossLink \"Entity/outline:property\"}}outline{{/crossLink}} component.\n\nFires a {{#crossLink \"Entity/outlined:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "outlined",
            "default": "false",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1006,
            "description": "Fired whenever this Entity' {{#crossLink \"Entity/outlined:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "outlined",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1020,
            "description": "Indicates whether this Entity is rendered X-rayed (transparent).\n\nThe X-ray effect is configured via the Entity's {{#crossLink \"Entity/xray:property\"}}outline{{/crossLink}} component.\n\nFires a {{#crossLink \"Entity/xrayed:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xrayed",
            "default": "false",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1045,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/xrayed:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xrayed",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1059,
            "description": "Indicates this Entity's rendering order.\n\nThis can be set on multiple transparent Entities, to make them render in a specific order   \nfor correct alpha blending.\n\nFires a {{#crossLink \"Layer/layer:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "layer",
            "default": "0",
            "type": "Number",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1090,
            "description": "Fired whenever this Entity's  {{#crossLink \"Layer/layer:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "layer",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1104,
            "description": "Flag which indicates whether this Entity is stationary or not.\n\nSetting this true will disable the effect of {{#crossLink \"Lookat\"}}view transform{{/crossLink}}\ntranslations for this Entity, while still alowing it to rotate. This is useful for skybox Entities.\n\nFires an {{#crossLink \"Entity/stationary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stationary",
            "default": "false",
            "type": "Boolean",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1132,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/stationary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "stationary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1145,
            "description": "Specifies the billboarding behaviour for this Entity.\n             \nOptions are:\n             \n * **\"none\"** -  **(default)** - No billboarding.\n * **\"spherical\"** - Entity is billboarded to face the viewpoint, rotating both vertically and horizontally.\n * **\"cylindrical\"** - Entity is billboarded to face the viewpoint, rotating only about its vertically\n    axis. Use this mode for things like trees on a landscape.\n             \nFires an {{#crossLink \"Entity/billboard:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "billboard",
            "default": "\"none\"",
            "type": "String",
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1187,
            "description": "Fired whenever this Entity's {{#crossLink \"Entity/billboard:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "billboard",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1200,
            "description": "Local-space 3D boundary of this Entity.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses\nthe {{#crossLink \"Geometry\"}}{{/crossLink}} that is attached to this Entity.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this Entity's {{#crossLink \"Entity/geometry:property\"}}{{/crossLink}} is linked to\na new {{#crossLink \"Geometry\"}}{{/crossLink}}, or whenever the {{#crossLink \"Geometry\"}}{{/crossLink}}'s\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.",
            "itemtype": "property",
            "name": "localBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1227,
            "description": "World-space 3D boundary of this Entity.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses the {{#crossLink \"Geometry\"}}{{/crossLink}}\nthat is attached to this Entity after transformation by this Entity's modelling\n{{#crossLink \"Entity/transform:property\"}}{{/crossLink}}.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this Entity's {{#crossLink \"Entity/geometry:property\"}}{{/crossLink}} is linked to\na new {{#crossLink \"Geometry\"}}{{/crossLink}}, or whenever the {{#crossLink \"Geometry\"}}{{/crossLink}}'s\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Example</h4>\n\n[here](http://xeogl.org/examples/#boundaries_Entity_worldBoundary)\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1316,
            "description": "View-space 3D boundary of this Entity.\n\nThis is a {{#crossLink \"Boundary3D\"}}{{/crossLink}} that encloses the {{#crossLink \"Geometry\"}}{{/crossLink}}\nthat is attached to this Entity after transformation by this Entity's modelling\n{{#crossLink \"Entity/transform:property\"}}{{/crossLink}} and {{#crossLink \"Camera\"}}{{/crossLink}}\n{{#crossLink \"Camera/view:property\"}}view transform{{/crossLink}}.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever there are any changes to the {{#crossLink \"Geometry\"}}{{/crossLink}},\n{{#crossLink \"Entity/transform:property\"}}{{/crossLink}} or {{#crossLink \"Camera\"}}{{/crossLink}} that\nwould affect its extents.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "viewBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1384,
            "description": "Canvas-space 2D boundary.\n\nThis is a {{#crossLink \"Boundary2D\"}}{{/crossLink}} that encloses this Entity's\n{{#crossLink \"Entity/geometry:property\"}}{{/crossLink}} after transformation by this Entity's modelling\n{{#crossLink \"Entity/transform:property\"}}{{/crossLink}} and {{#crossLink \"Camera\"}}{{/crossLink}}\n{{#crossLink \"Camera/view:property\"}}view{{/crossLink}} and\n{{#crossLink \"Camera/project:property\"}}projection{{/crossLink}} transforms.\n\nThe {{#crossLink \"Boundary2D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever there are any changes to the {{#crossLink \"Geometry\"}}{{/crossLink}},\n{{#crossLink \"Entity/transform:property\"}}{{/crossLink}} or {{#crossLink \"Camera\"}}{{/crossLink}} that\nwould affect its extents.\n\nThe a {{#crossLink \"Boundary2D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary2D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary2D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "canvasBoundary",
            "type": "Boundary2D",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1453,
            "description": "World-space vertex positions of this Entity.\n\nThese are internally generated on-demand and cached. To free the cached\nvertex World positions when you're done with them, set this property to null or undefined.",
            "itemtype": "property",
            "name": "worpdPositions",
            "type": "Float32Array",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1489,
            "description": "JSON object containing the (GLSL) source code of the shaders for this Entity.\n\nThis is sometimes useful to have as a reference\nwhen constructing your own custom {{#crossLink \"Shader\"}}{{/crossLink}} components.\n\nWill return null if xeogl has not yet rendered this Entity.",
            "itemtype": "property",
            "name": "glsl",
            "type": "JSON",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/entities/entity.js",
            "line": 1526,
            "description": "The (GLSL) source code of the shaders for this Entity, as a string.\n\nThis is sometimes useful to have as a reference\nwhen constructing your own custom {{#crossLink \"Shader\"}}{{/crossLink}} components.\n\nWill return null if xeogl has not yet rendered this Entity.",
            "itemtype": "property",
            "name": "glslString",
            "type": "String",
            "final": 1,
            "class": "Entity",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "src/geometry/aabbGeometry.js",
            "line": 128,
            "description": "A {{#crossLink \"Boundary3D\"}}{{/crossLink}} whose {{#crossLink \"Boundary3D/aabb:property\"}}AABB{{/crossLink}} we'll\ndynamically fit this OBBGeometry to.\n\nThis property effectively replaces the {{#crossLink \"AABBGeometry/aabb:property\"}}{{/crossLink}} property.\n\nFires a {{#crossLink \"AABBGeometry/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "boundary",
            "type": "Boundary3D",
            "class": "AABBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/aabbGeometry.js",
            "line": 146,
            "description": "Fired whenever this AABBGeometry's {{#crossLink \"AABBGeometry/boundary:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AABBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/aabbGeometry.js",
            "line": 181,
            "description": "Sets this AABBGeometry to an axis-aligned box (AABB), given as a six-element Float32Array\ncontaining the min/max extents of the\naxis-aligned volume, ie. ````[xmin,ymin,zmin,xmax,ymax,zmax]````.\n\nThis property overrides the {{#crossLink \"AABBGeometry/boundary:property\"}}{{/crossLink}} property, causing it to become null.",
            "itemtype": "property",
            "name": "aabb",
            "type": "Float32Array",
            "class": "AABBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 74,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 252,
            "description": "3D point indicating the center position of this BoxGeometry.\n\nFires an {{#crossLink \"BoxGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 269,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 282,
            "description": "The BoxGeometry's half-size on the X-axis.\n\nFires a {{#crossLink \"BoxGeometry/xsize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 310,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/xSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 324,
            "description": "The BoxGeometry's half-size on the Y-axis.\n\nFires a {{#crossLink \"BoxGeometry/ySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ySize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 352,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/ySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ySize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 366,
            "description": "The BoxGeometry's half-size on the Z-axis.\n\nFires a {{#crossLink \"BoxGeometry/zSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSize",
            "default": "1",
            "type": "Number",
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/boxGeometry.js",
            "line": 394,
            "description": "Fired whenever this BoxGeometry's {{#crossLink \"BoxGeometry/zSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "BoxGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 87,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 287,
            "description": "The CylinderGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"CylinderGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 315,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 329,
            "description": "3D point indicating the center position of this CylinderGeometry.\n\nFires an {{#crossLink \"CylinderGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 346,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 359,
            "description": "The CylinderGeometry's top radius.\n\nFires a {{#crossLink \"CylinderGeometry/radiusTop:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radiusTop",
            "default": "1",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 387,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/radiusTop:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radiusTop",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 401,
            "description": "The CylinderGeometry's bottom radius.\n\nFires a {{#crossLink \"CylinderGeometry/radiusBottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radiusBottom",
            "default": "1",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 429,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/radiusBottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radiusBottom",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 443,
            "description": "The CylinderGeometry's height.\n\nFires a {{#crossLink \"CylinderGeometry/height:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "height",
            "default": "1",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 471,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/height:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "height",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 485,
            "description": "The CylinderGeometry's radial segments.\n\nFires a {{#crossLink \"CylinderGeometry/radialSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radialSegments",
            "default": "60",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 513,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/radialSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radialSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 527,
            "description": "The CylinderGeometry's height segments.\n\nFires a {{#crossLink \"CylinderGeometry/heightSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "heightSegments",
            "default": "1",
            "type": "Number",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 555,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/heightSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "heightSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 569,
            "description": "Indicates whether this CylinderGeometry's is open-ended.\n\nFires a {{#crossLink \"CylinderGeometry/openEnded:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "openEnded",
            "default": "false",
            "type": "Boolean",
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/cylinderGeometry.js",
            "line": 592,
            "description": "Fired whenever this CylinderGeometry's {{#crossLink \"CylinderGeometry/openEnded:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "openEnded",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CylinderGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 313,
            "description": "Protected method, called by sub-classes to queue a call to _update(), to rebuild geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 638,
            "description": "The Geometry's usage type.\n\nAccepted values are 'static', 'dynamic' and 'stream'.\n\nFires a {{#crossLink \"Geometry/usage:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "usage",
            "default": "\"triangles\"",
            "type": "String",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 695,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/usage:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "usage",
            "type": "String",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 709,
            "description": "The Geometry's primitive type.\n\nValid types are: 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n\nFires a {{#crossLink \"Geometry/primitive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "primitive",
            "default": "\"triangles\"",
            "type": "String",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 780,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "primitive",
            "type": "String",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 794,
            "description": "The Geometry's positions array.\n\nThis property is a one-dimensional, flattened array - use  {{#crossLink \"xeogl.math/flatten:method\"}}{{/crossLink}} to\nconvert two-dimensional arrays for assignment to this property.\n\nFires a {{#crossLink \"Geometry/positions:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "positions",
            "default": "null",
            "type": "Float32Array",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 820,
            "description": "The Geometry's vertex normal vectors array.\n\nFires a {{#crossLink \"Geometry/normals:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normals",
            "default": "null",
            "type": "Float32Array",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 843,
            "description": "The Geometry's UV coordinate array.\n\nFires a {{#crossLink \"Geometry/uv:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "uv",
            "default": "null",
            "type": "Float32Array",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 866,
            "description": "The Geometry's vertex colors array.\n\nFires a {{#crossLink \"Geometry/colors:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colors",
            "default": "null",
            "type": "Float32Array",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 889,
            "description": "The Geometry's indices array.\n\nIf ````xeogl.WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]```` is true, then this can be\na ````Uint32Array````, otherwise it needs to be a ````Uint16Array````.\n\nFires a {{#crossLink \"Geometry/indices:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "indices",
            "default": "null",
            "type": "Uint16Array | Uint32Array",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 915,
            "description": "Local-space 3D boundary enclosing the {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} of this Geometry.\n\nThe a {{#crossLink \"Boundary3D\"}}{{/crossLink}} is lazy-instantiated the first time that this\nproperty is referenced. If {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} is then called on it,\nthen this property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime it's referenced.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will fire an {{#crossLink \"Boundary3D/updated:event\"}}{{/crossLink}}\nevent whenever this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} are updated.",
            "itemtype": "property",
            "name": "localBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 986,
            "description": "Set true to make this Geometry automatically generate {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} from\n{{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} and {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}.\n\nWhen true, causes this Geometry to auto-generate its {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} on the\nnext {{#crossLink \"Scene\"}}{{/crossLink}} {{#crossLink \"Scene/tick:event\"}}{{/crossLink}} event.\n\nFires an {{#crossLink \"Geometry/autoNormals:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "autoNormals",
            "default": "false",
            "type": "Boolean",
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1018,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/autoNormals:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "autoNormals",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1033,
            "description": "Sets this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "positions",
                    "description": "Flattened array of updated positions.",
                    "type": "Float32Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1091,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "positions",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1098,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/localBoundary:property\"}}{{/crossLink}} property changes.\n\nNote that this event does not carry the value of the property. In order to avoid needlessly\ncalculating unused values for this property, it will be lazy-calculated next time it's referenced\non this Geometry.",
            "itemtype": "event",
            "name": "positions",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1113,
            "description": "Fast method to insert elements into this Geometry's {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "normals",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1169,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normals",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1179,
            "description": "Fast method to insert elements into this Geometry's {{#crossLink \"Geometry/uvs:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "uvs",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1235,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/uvs:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "uvs",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1245,
            "description": "Fast method to insert elements into this Geometry's {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "colors",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1301,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colors",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1311,
            "description": "Sets this Geometry's {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "indices",
                    "description": "Flattened array of updated indices.",
                    "type": "Int16Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1380,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "indices",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/geometry.js",
            "line": 1387,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/localBoundary:property\"}}{{/crossLink}} property changes.\n\nNote that this event does not carry the value of the property. In order to avoid needlessly\ncalculating unused values for this property, it will be lazy-calculated next time it's referenced\non this Geometry.",
            "itemtype": "event",
            "name": "indices",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 73,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 164,
            "description": "Profile points on this LatheGeometry.\n\nFires a {{#crossLink \"LatheGeometry/points:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "points",
            "default": "[]",
            "type": "Float32Array",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 181,
            "description": "Fired whenever this LatheGeometry's\n{{#crossLink \"LatheGeometry/points:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "points",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 195,
            "description": "The LatheGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"LatheGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 223,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 237,
            "description": "Angle at which this LatheGeometry's rotation starts.\n\nFires a {{#crossLink \"LatheGeometry/phiStart:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "phiStart",
            "default": "0",
            "type": "Number",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 265,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/phiStart:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "phiStart",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 279,
            "description": "Angle at which this LatheGeometry's rotation starts.\n\nFires a {{#crossLink \"LatheGeometry/phiLength:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "phiLength",
            "default": "1",
            "type": "Number",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 307,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/phiLength:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "phiLength",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 321,
            "description": "The LatheGeometry's number of segments of rotation.\n\nFires a {{#crossLink \"LatheGeometry/segments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "segments",
            "default": "4",
            "type": "Number",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/latheGeometry.js",
            "line": 349,
            "description": "Fired whenever this LatheGeometry's {{#crossLink \"LatheGeometry/segments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "segments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/obbGeometry.js",
            "line": 128,
            "description": "A {{#crossLink \"Boundary3D\"}}{{/crossLink}} whose {{#crossLink \"Boundary3D/obb:property\"}}OBB{{/crossLink}} we'll\ndynamically fit this OBBGeometry to.\n\nThis property effectively replaces the {{#crossLink \"OBBGeometry/obb:property\"}}{{/crossLink}} property.\n\nFires a {{#crossLink \"OBBGeometry/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "boundary",
            "type": "Boundary3D",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/obbGeometry.js",
            "line": 146,
            "description": "Fired whenever this OBBGeometry's {{#crossLink \"OBBGeometry/boundary:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/obbGeometry.js",
            "line": 181,
            "description": "Sets this OBBGeometry to an entity-oriented bounding box (OBB), given as a 32-element Float32Array\ncontaining homogeneous coordinates for the eight corner vertices, ie. each having elements [x,y,z,w].\n\nThis property effectively replaces the {{#crossLink \"OBBGeometry/boundary:property\"}}{{/crossLink}} property, causing it to become null.",
            "itemtype": "property",
            "name": "obb",
            "type": "Float32Array",
            "class": "OBBGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 70,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "PathGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 117,
            "description": "The Path for this PathGeometry.\n\nFires a {{#crossLink \"PathGeometry/path:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "path",
            "type": "{Path}",
            "class": "PathGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 129,
            "description": "Fired whenever this CameraPaths's {{#crossLink \"CameraPath/path:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "path",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PathGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/pathGeometry.js",
            "line": 153,
            "description": "The number of segments in this PathGeometry.\n\nFires a {{#crossLink \"PathGeometry/divisions:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "divisions",
            "default": "6",
            "type": "{Number}",
            "class": "PathGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 89,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 198,
            "description": "The PlaneGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"PlaneGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 226,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 240,
            "description": "3D point indicating the center position of this PlaneGeometry.\n\nFires an {{#crossLink \"PlaneGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 257,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 270,
            "description": "The PlaneGeometry's dimension on the X-axis.\n\nFires a {{#crossLink \"PlaneGeometry/xSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSize",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 298,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/xSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 312,
            "description": "The PlaneGeometry's dimension on the Y-axis.\n\nFires a {{#crossLink \"PlaneGeometry/zSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSize",
            "default": "1.0",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 340,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/zSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 354,
            "description": "The PlaneGeometry's number of segments on the X-axis.\n\nFires a {{#crossLink \"PlaneGeometry/xSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSegments",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 382,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/xSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 396,
            "description": "The PlaneGeometry's number of segments on the Y-axis.\n\nFires a {{#crossLink \"PlaneGeometry/zSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSegments",
            "default": "1",
            "type": "Number",
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/planeGeometry.js",
            "line": 424,
            "description": "Fired whenever this PlaneGeometry's {{#crossLink \"PlaneGeometry/zSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PlaneGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 79,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 183,
            "description": "The SphereGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"SphereGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 211,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 225,
            "description": "3D point indicating the center position of this SphereGeometry.\n\nFires an {{#crossLink \"SphereGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 242,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 255,
            "description": "The SphereGeometry's radius.\n\nFires a {{#crossLink \"SphereGeometry/radius:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radius",
            "default": "1",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 283,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/radius:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radius",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 298,
            "description": "The SphereGeometry's number of latitudinal bands.\n\nFires a {{#crossLink \"SphereGeometry/heightSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "heightSegments",
            "default": "18",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 326,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/heightSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "heightSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 340,
            "description": "The SphereGeometry's number of longitudinal bands.\n\nFires a {{#crossLink \"SphereGeometry/widthSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "widthSegments",
            "default": "24",
            "type": "Number",
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/sphereGeometry.js",
            "line": 368,
            "description": "Fired whenever this SphereGeometry's {{#crossLink \"SphereGeometry/widthSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "widthSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SphereGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 86,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 189,
            "description": "The TorusGeometry's level-of-detail factor.\n\nFires a {{#crossLink \"TorusGeometry/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 217,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 231,
            "description": "3D point indicating the center position of this TorusGeometry.\n\nFires an {{#crossLink \"TorusGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 248,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 261,
            "description": "The overall radius of the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/radius:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radius",
            "default": "1",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 289,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/radius:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radius",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 304,
            "description": "The tube radius of the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/tube:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "tube",
            "default": "0.3",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 332,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/tube:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "tube",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 346,
            "description": "The number of radial segments that make up the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/radialSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "radialSegments",
            "default": "32",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 374,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/radialSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "radialSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 389,
            "description": "The number of tubular segments that make up the TorusGeometry.\n\nFires a {{#crossLink \"TorusGeometry/tubeSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "tubeSegments",
            "default": "24",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 417,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/tubeSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "tubeSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 431,
            "description": "The length of the TorusGeometry's arc in radians, where Math.PI*2 is a closed torus.\n\nFires a {{#crossLink \"TorusGeometry/arc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "arc",
            "default": "Math.PI * 2",
            "type": "Number",
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/geometry/torusGeometry.js",
            "line": 459,
            "description": "Fired whenever this TorusGeometry's {{#crossLink \"TorusGeometry/arc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "arc",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "TorusGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "src/input/input.js",
            "line": 111,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 117,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 123,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 129,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 135,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 141,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 147,
            "type": "{boolean}",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 172,
            "description": "Fired whenever a key is pressed while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 205,
            "description": "Fired whenever a key is released while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 226,
            "description": "Fired whenever the mouse is moved into of the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseenter",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 245,
            "description": "Fired whenever the mouse is moved out of the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseleave",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 283,
            "description": "Fired whenever the mouse is pressed over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 322,
            "description": "Fired whenever the mouse is released over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 363,
            "description": "Fired whenever the mouse is double-clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "dblclick",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 384,
            "description": "Fired whenever the mouse is moved over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 405,
            "description": "Fired whenever the mouse wheel is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousewheel",
            "params": [
                {
                    "name": "delta",
                    "description": "The mouse wheel delta,",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 440,
            "description": "Fired whenever the mouse is clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseclicked",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 497,
            "description": "Fired when the orientation of the device has changed.",
            "itemtype": "event",
            "name": "orientationchange",
            "params": [
                {
                    "name": "orientation",
                    "description": "The orientation: \"landscape-primary\", \"landscape-secondary\", \"portrait-secondary\" or \"portrait-primary\""
                },
                {
                    "name": "orientationAngle",
                    "description": "The orientation angle in degrees: 90 for landscape-primary, -90 for landscape-secondary, 180 for portrait-secondary or 0 for portrait-primary."
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 539,
            "description": "Fires on a regular interval and returns data about the rotation\n(in degrees per second) and acceleration (in meters per second squared) of the device, at that moment in\ntime. Some devices do not have the hardware to exclude the effect of gravity.",
            "itemtype": "event",
            "name": "devicemotion",
            "params": [
                {
                    "name": "Float32Array",
                    "description": "acceleration The acceleration of the device, in meters per second squared, as a 3-element vector. This value has taken into account the effect of gravity and removed it from the figures. This value may not exist if the hardware doesn't know how to remove gravity from the acceleration data."
                },
                {
                    "name": "Float32Array",
                    "description": "accelerationIncludingGravity The acceleration of the device, in meters per second squared, as a 3-element vector. This value includes the effect of gravity, and may be the only value available on devices that don't have a gyroscope to allow them to properly remove gravity from the data."
                },
                {
                    "name": ",",
                    "description": "Number interval The interval, in milliseconds, at which this event is fired. The next event will be fired in approximately this amount of time."
                },
                {
                    "name": "Float32Array",
                    "description": "rotationRate The rates of rotation of the device about each axis, in degrees per second."
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 563,
            "description": "Fired when fresh data is available from an orientation sensor about the current orientation\nof the device as compared to the Earth coordinate frame. This data is gathered from a\nmagnetometer inside the device. See\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Orientation_and_motion_data_explained\">Orientation and motion data explained</a> for more info.",
            "itemtype": "event",
            "name": "deviceorientation",
            "params": [
                {
                    "name": "Number",
                    "description": "alpha The current orientation of the device around the Z axis in degrees; that is, how far the device is rotated around a line perpendicular to the device."
                },
                {
                    "name": "Number",
                    "description": "beta The current orientation of the device around the X axis in degrees; that is, how far the device is tipped forward or backward."
                },
                {
                    "name": "Number",
                    "description": "gamma The current orientation of the device around the Y axis in degrees; that is, how far the device is turned left or right."
                },
                {
                    "name": "Boolean",
                    "description": "absolute This value is true if the orientation is provided as a difference between the device coordinate frame and the Earth coordinate frame; if the device can't detect the Earth coordinate frame, this value is false."
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 605,
            "description": "Enable or disable all input handlers",
            "params": [
                {
                    "name": "enable",
                    "description": ""
                }
            ],
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 618,
            "description": "Code for the BACKSPACE key.",
            "itemtype": "property",
            "name": "KEY_BACKSPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 626,
            "description": "Code for the TAB key.",
            "itemtype": "property",
            "name": "KEY_TAB",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 634,
            "description": "Code for the ENTER key.",
            "itemtype": "property",
            "name": "KEY_ENTER",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 642,
            "description": "Code for the SHIFT key.",
            "itemtype": "property",
            "name": "KEY_SHIFT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 650,
            "description": "Code for the CTRL key.",
            "itemtype": "property",
            "name": "KEY_CTRL",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 658,
            "description": "Code for the ALT key.",
            "itemtype": "property",
            "name": "KEY_ALT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 666,
            "description": "Code for the PAUSE_BREAK key.",
            "itemtype": "property",
            "name": "KEY_PAUSE_BREAK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 674,
            "description": "Code for the CAPS_LOCK key.",
            "itemtype": "property",
            "name": "KEY_CAPS_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 682,
            "description": "Code for the ESCAPE key.",
            "itemtype": "property",
            "name": "KEY_ESCAPE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 690,
            "description": "Code for the PAGE_UP key.",
            "itemtype": "property",
            "name": "KEY_PAGE_UP",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 698,
            "description": "Code for the PAGE_DOWN key.",
            "itemtype": "property",
            "name": "KEY_PAGE_DOWN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 706,
            "description": "Code for the END key.",
            "itemtype": "property",
            "name": "KEY_END",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 714,
            "description": "Code for the HOME key.",
            "itemtype": "property",
            "name": "KEY_HOME",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 722,
            "description": "Code for the LEFT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 730,
            "description": "Code for the UP_ARROW key.",
            "itemtype": "property",
            "name": "KEY_UP_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 738,
            "description": "Code for the RIGHT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 746,
            "description": "Code for the DOWN_ARROW key.",
            "itemtype": "property",
            "name": "KEY_DOWN_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 754,
            "description": "Code for the INSERT key.",
            "itemtype": "property",
            "name": "KEY_INSERT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 762,
            "description": "Code for the DELETE key.",
            "itemtype": "property",
            "name": "KEY_DELETE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 770,
            "description": "Code for the 0 key.",
            "itemtype": "property",
            "name": "KEY_NUM_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 778,
            "description": "Code for the 1 key.",
            "itemtype": "property",
            "name": "KEY_NUM_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 786,
            "description": "Code for the 2 key.",
            "itemtype": "property",
            "name": "KEY_NUM_2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 794,
            "description": "Code for the 3 key.",
            "itemtype": "property",
            "name": "KEY_NUM_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 802,
            "description": "Code for the 4 key.",
            "itemtype": "property",
            "name": "KEY_NUM_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 810,
            "description": "Code for the 5 key.",
            "itemtype": "property",
            "name": "KEY_NUM_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 818,
            "description": "Code for the 6 key.",
            "itemtype": "property",
            "name": "KEY_NUM_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 826,
            "description": "Code for the 7 key.",
            "itemtype": "property",
            "name": "KEY_NUM_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 834,
            "description": "Code for the 8 key.",
            "itemtype": "property",
            "name": "KEY_NUM_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 842,
            "description": "Code for the 9 key.",
            "itemtype": "property",
            "name": "KEY_NUM_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 850,
            "description": "Code for the A key.",
            "itemtype": "property",
            "name": "KEY_A",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 858,
            "description": "Code for the B key.",
            "itemtype": "property",
            "name": "KEY_B",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 866,
            "description": "Code for the C key.",
            "itemtype": "property",
            "name": "KEY_C",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 874,
            "description": "Code for the D key.",
            "itemtype": "property",
            "name": "KEY_D",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 882,
            "description": "Code for the E key.",
            "itemtype": "property",
            "name": "KEY_E",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 890,
            "description": "Code for the F key.",
            "itemtype": "property",
            "name": "KEY_F",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 898,
            "description": "Code for the G key.",
            "itemtype": "property",
            "name": "KEY_G",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 906,
            "description": "Code for the H key.",
            "itemtype": "property",
            "name": "KEY_H",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 914,
            "description": "Code for the I key.",
            "itemtype": "property",
            "name": "KEY_I",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 922,
            "description": "Code for the J key.",
            "itemtype": "property",
            "name": "KEY_J",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 930,
            "description": "Code for the K key.",
            "itemtype": "property",
            "name": "KEY_K",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 938,
            "description": "Code for the L key.",
            "itemtype": "property",
            "name": "KEY_L",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 946,
            "description": "Code for the M key.",
            "itemtype": "property",
            "name": "KEY_M",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 954,
            "description": "Code for the N key.",
            "itemtype": "property",
            "name": "KEY_N",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 962,
            "description": "Code for the O key.",
            "itemtype": "property",
            "name": "KEY_O",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 970,
            "description": "Code for the P key.",
            "itemtype": "property",
            "name": "KEY_P",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 978,
            "description": "Code for the Q key.",
            "itemtype": "property",
            "name": "KEY_Q",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 986,
            "description": "Code for the R key.",
            "itemtype": "property",
            "name": "KEY_R",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 994,
            "description": "Code for the S key.",
            "itemtype": "property",
            "name": "KEY_S",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1002,
            "description": "Code for the T key.",
            "itemtype": "property",
            "name": "KEY_T",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1010,
            "description": "Code for the U key.",
            "itemtype": "property",
            "name": "KEY_U",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1018,
            "description": "Code for the V key.",
            "itemtype": "property",
            "name": "KEY_V",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1026,
            "description": "Code for the W key.",
            "itemtype": "property",
            "name": "KEY_W",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1034,
            "description": "Code for the X key.",
            "itemtype": "property",
            "name": "KEY_X",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1042,
            "description": "Code for the Y key.",
            "itemtype": "property",
            "name": "KEY_Y",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1050,
            "description": "Code for the Z key.",
            "itemtype": "property",
            "name": "KEY_Z",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1058,
            "description": "Code for the LEFT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1066,
            "description": "Code for the RIGHT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1074,
            "description": "Code for the SELECT key.",
            "itemtype": "property",
            "name": "KEY_SELECT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1082,
            "description": "Code for the number pad 0 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1090,
            "description": "Code for the number pad 1 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1098,
            "description": "Code for the number pad 2 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD 2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1106,
            "description": "Code for the number pad 3 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1114,
            "description": "Code for the number pad 4 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1122,
            "description": "Code for the number pad 5 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1130,
            "description": "Code for the number pad 6 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1138,
            "description": "Code for the number pad 7 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1146,
            "description": "Code for the number pad 8 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1154,
            "description": "Code for the number pad 9 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1162,
            "description": "Code for the MULTIPLY key.",
            "itemtype": "property",
            "name": "KEY_MULTIPLY",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1170,
            "description": "Code for the ADD key.",
            "itemtype": "property",
            "name": "KEY_ADD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1178,
            "description": "Code for the SUBTRACT key.",
            "itemtype": "property",
            "name": "KEY_SUBTRACT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1186,
            "description": "Code for the DECIMAL POINT key.",
            "itemtype": "property",
            "name": "KEY_DECIMAL_POINT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1194,
            "description": "Code for the DIVIDE key.",
            "itemtype": "property",
            "name": "KEY_DIVIDE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1202,
            "description": "Code for the F1 key.",
            "itemtype": "property",
            "name": "KEY_F1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1210,
            "description": "Code for the F2 key.",
            "itemtype": "property",
            "name": "KEY_F2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1218,
            "description": "Code for the F3 key.",
            "itemtype": "property",
            "name": "KEY_F3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1226,
            "description": "Code for the F4 key.",
            "itemtype": "property",
            "name": "KEY_F4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1234,
            "description": "Code for the F5 key.",
            "itemtype": "property",
            "name": "KEY_F5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1242,
            "description": "Code for the F6 key.",
            "itemtype": "property",
            "name": "KEY_F6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1250,
            "description": "Code for the F7 key.",
            "itemtype": "property",
            "name": "KEY_F7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1258,
            "description": "Code for the F8 key.",
            "itemtype": "property",
            "name": "KEY_F8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1266,
            "description": "Code for the F9 key.",
            "itemtype": "property",
            "name": "KEY_F9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1274,
            "description": "Code for the F10 key.",
            "itemtype": "property",
            "name": "KEY_F10",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1282,
            "description": "Code for the F11 key.",
            "itemtype": "property",
            "name": "KEY_F11",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1290,
            "description": "Code for the F12 key.",
            "itemtype": "property",
            "name": "KEY_F12",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1298,
            "description": "Code for the NUM_LOCK key.",
            "itemtype": "property",
            "name": "KEY_NUM_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1306,
            "description": "Code for the SCROLL_LOCK key.",
            "itemtype": "property",
            "name": "KEY_SCROLL_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1314,
            "description": "Code for the SEMI_COLON key.",
            "itemtype": "property",
            "name": "KEY_SEMI_COLON",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1322,
            "description": "Code for the EQUAL_SIGN key.",
            "itemtype": "property",
            "name": "KEY_EQUAL_SIGN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1330,
            "description": "Code for the COMMA key.",
            "itemtype": "property",
            "name": "KEY_COMMA",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1338,
            "description": "Code for the DASH key.",
            "itemtype": "property",
            "name": "KEY_DASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1346,
            "description": "Code for the PERIOD key.",
            "itemtype": "property",
            "name": "KEY_PERIOD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1354,
            "description": "Code for the FORWARD_SLASH key.",
            "itemtype": "property",
            "name": "KEY_FORWARD_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1362,
            "description": "Code for the GRAVE_ACCENT key.",
            "itemtype": "property",
            "name": "KEY_GRAVE_ACCENT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1370,
            "description": "Code for the OPEN_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_OPEN_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1378,
            "description": "Code for the BACK_SLASH key.",
            "itemtype": "property",
            "name": "KEY_BACK_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1386,
            "description": "Code for the CLOSE_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_CLOSE_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1394,
            "description": "Code for the SINGLE_QUOTE key.",
            "itemtype": "property",
            "name": "KEY_SINGLE_QUOTE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/input/input.js",
            "line": 1402,
            "description": "Code for the SPACE key.",
            "itemtype": "property",
            "name": "KEY_SPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "xeogl",
            "submodule": "input"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 76,
            "description": "The color of this AmbientLight.\n\nFires an {{#crossLink \"AmbientLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Float32Array",
            "class": "AmbientLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 93,
            "description": "Fired whenever this AmbientLight's {{#crossLink \"AmbientLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AmbientLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 107,
            "description": "The intensity of this AmbientLight.\n\nFires a {{#crossLink \"AmbientLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "AmbientLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/ambientLight.js",
            "line": 124,
            "description": "Fired whenever this AmbientLight's  {{#crossLink \"AmbientLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AmbientLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/cubeTexture.js",
            "line": 119,
            "description": "Fired whenever this CubeTexture has loaded the\nimage files that its {{#crossLink \"CubeTexture/src:property\"}}{{/crossLink}} property currently points to.",
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "value",
                    "description": "The value of the {{#crossLink \"CubeTexture/src:property\"}}{{/crossLink}} property",
                    "type": "HTML Image"
                }
            ],
            "class": "CubeTexture",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/cubeTexture.js",
            "line": 168,
            "description": "Array of paths to six image files to source this CubeTexture.\n\nFires a {{#crossLink \"CubeTexture/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "default": "null",
            "type": "{Array of String}",
            "class": "CubeTexture",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/cubeTexture.js",
            "line": 187,
            "description": "Fired whenever this CubeTexture's {{#crossLink \"CubeTexture/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "{Array of String}",
            "class": "CubeTexture",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/cubeTexture.js",
            "line": 201,
            "description": "Flips this CubeTexture's source data along its vertical axis when true.\n\nFires a {{#crossLink \"CubeTexture/flipY:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "flipY",
            "default": "false",
            "type": "Boolean",
            "class": "CubeTexture",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/cubeTexture.js",
            "line": 225,
            "description": "Fired whenever this CubeTexture's  {{#crossLink \"CubeTexture/flipY:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "flipY",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "CubeTexture",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 157,
            "description": "The direction in which the light is shining.\n\nFires a {{#crossLink \"DirLight/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 174,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 187,
            "description": "The color of this DirLight.\n\nFires a {{#crossLink \"DirLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Float32Array",
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 204,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 217,
            "description": "The intensity of this DirLight.\n\nFires a {{#crossLink \"DirLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 236,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 249,
            "description": "Specifies which coordinate space this DirLight is in.\n\nSupported values are:\n\n\n* \"view\" - View space, aligned within the view volume as if fixed to the viewer's head\n* \"world\" - World space, fixed within the world, moving within the view volume with respect to camera\n\n\nFires a {{#crossLink \"DirLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 273,
            "description": "Fired whenever this DirLight's {{#crossLink \"DirLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 286,
            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this DirLight.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this DirLight.\nFires a {{#crossLink \"DirLight/shadow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shadow",
            "default": "undefined",
            "type": "{Shadow}",
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/dirLight.js",
            "line": 302,
            "description": "Fired whenever this DirLight's {{#crossLink \"DirLight/shadow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shadow",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 157,
            "description": "The direction in which the light is shining.\n\nFires a {{#crossLink \"Fog/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 174,
            "description": "Fired whenever this Fog's  {{#crossLink \"Fog/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 187,
            "description": "The color of this Fog.\n\nFires a {{#crossLink \"Fog/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Float32Array",
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 204,
            "description": "Fired whenever this Fog's  {{#crossLink \"Fog/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 217,
            "description": "The intensity of this Fog.\n\nFires a {{#crossLink \"Fog/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 236,
            "description": "Fired whenever this Fog's  {{#crossLink \"Fog/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 249,
            "description": "Specifies which coordinate space this Fog is in.\n\nSupported values are:\n\n\n* \"view\" - View space, aligned within the view volume as if fixed to the viewer's head\n* \"world\" - World space, fixed within the world, moving within the view volume with respect to camera\n\n\nFires a {{#crossLink \"Fog/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 273,
            "description": "Fired whenever this Fog's {{#crossLink \"Fog/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 286,
            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this Fog.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Fog.\nFires a {{#crossLink \"Fog/shadow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shadow",
            "default": "undefined",
            "type": "{Shadow}",
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/fog.js",
            "line": 302,
            "description": "Fired whenever this Fog's {{#crossLink \"Fog/shadow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shadow",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Fog",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 147,
            "description": "The light sources in this Lights.\n\nNote that when removing or inserting light sources, you must reassign this property to the modified array,\nso that this Lights able to detect that lights sources were actually added or removed. For example:\n\n````javascript\nvar lights = myLights.lights;\nlights.push(new xeogl.PointLight({...}));\nmyLights.lights = lights; // This way, the xeogl.Lights component is able to detect that the new light was added.\n````\n\nWe'll be able to relax this once JavaScript gets the (proper) ability to observe array updates.\n\nFires a {{#crossLink \"Lights/lights:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lights",
            "default": "[]",
            "type": "{{Array of AmbientLight, PointLight, DirLight or SpotLight}}",
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 252,
            "description": "Fired whenever this Lights's {{#crossLink \"Lights/lights:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lights",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 266,
            "description": "A {{#crossLink \"CubeTexture\"}}{{/crossLink}} that defines the brightness of the\nsurfaces of attached {{#crossLink \"Entities\"}}{{/crossLink}}.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Lights.\n\nFires a {{#crossLink \"Lights/lightMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lightMap",
            "default": "undefined",
            "type": "{CubeTexture}",
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 282,
            "description": "Fired whenever this Lights's {{#crossLink \"Lights/lightMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lightMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 296,
            "description": "A {{#crossLink \"CubeTexture\"}}{{/crossLink}} that defines a background image that is reflected in the\nsurfaces of attached {{#crossLink \"Entities\"}}{{/crossLink}}.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Lights.\n\nFires a {{#crossLink \"Lights/reflectionMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectionMap",
            "default": "undefined",
            "type": "{CubeTexture}",
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/lights.js",
            "line": 312,
            "description": "Fired whenever this Lights's {{#crossLink \"Lights/reflectionMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectionMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Lights",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 104,
            "description": "The position of this PointLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"PointLight/space:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PointLight/pos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 123,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 136,
            "description": "The color of this PointLight.\n\nFires a {{#crossLink \"PointLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Float32Array",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 153,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 166,
            "description": "The intensity of this PointLight.\n\nFires a {{#crossLink \"PointLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 185,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 198,
            "description": "The constant attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/constantAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 215,
            "description": "Fired whenever this PointLight's {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "constantAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 229,
            "description": "The linear attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/linearAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 246,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "linearAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 260,
            "description": "The quadratic attenuation factor for this Pointlight.\n\nFires a {{#crossLink \"PointLight/quadraticAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 277,
            "description": "Fired whenever this PointLight's {{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "quadraticAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 291,
            "description": "Indicates which coordinate space this PointLight is in.\n\nSupported values are:\n\n\n* \"view\" - View space, aligned within the view volume as if fixed to the viewer's head\n* \"world\" - World space, fixed within the world, moving within the view volume with respect to camera\n\n\nFires a {{#crossLink \"PointLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/pointLight.js",
            "line": 315,
            "description": "Fired whenever this Pointlight's  {{#crossLink \"PointLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/shadow.js",
            "line": 85,
            "description": "The resolution of the texture map for this Shadow.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"Shadow/space:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Shadow/resolution:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "resolution",
            "default": "[1000, 1000]",
            "type": "Uint16Array",
            "class": "Shadow",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/shadow.js",
            "line": 104,
            "description": "Fired whenever this Shadow's  {{#crossLink \"Shadow/resolution:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "resolution",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shadow",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/shadow.js",
            "line": 117,
            "description": "The intensity of this Shadow.\n\nFires a {{#crossLink \"Shadow/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "Shadow",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/shadow.js",
            "line": 136,
            "description": "Fired whenever this Shadow's  {{#crossLink \"Shadow/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shadow",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 167,
            "description": "The position of this SpotLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"SpotLight/space:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"SpotLight/pos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 187,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 200,
            "description": "The direction in which the light is shining.\n\nFires a {{#crossLink \"SpotLight/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 218,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 231,
            "description": "The color of this SpotLight.\n\nFires a {{#crossLink \"SpotLight/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Float32Array",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 248,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 261,
            "description": "The intensity of this SpotLight.\n\nFires a {{#crossLink \"SpotLight/intensity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "intensity",
            "default": "1.0",
            "type": "Number",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 280,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/intensity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "intensity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 293,
            "description": "The constant attenuation factor for this SpotLight.\n\nFires a {{#crossLink \"SpotLight/constantAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 310,
            "description": "Fired whenever this SpotLight's {{#crossLink \"SpotLight/constantAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "constantAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 324,
            "description": "The linear attenuation factor for this SpotLight.\n\nFires a {{#crossLink \"SpotLight/linearAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 341,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/linearAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "linearAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 355,
            "description": "The quadratic attenuation factor for this SpotLight.\n\nFires a {{#crossLink \"SpotLight/quadraticAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 372,
            "description": "Fired whenever this SpotLight's {{#crossLink \"SpotLight/quadraticAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "quadraticAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 386,
            "description": "Indicates which coordinate space this SpotLight is in.\n\nSupported values are:\n\n\n* \"view\" - View space, aligned within the view volume as if fixed to the viewer's head\n* \"world\" - World space, fixed within the world, moving within the view volume with respect to camera\n\n\nFires a {{#crossLink \"SpotLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 410,
            "description": "Fired whenever this SpotLight's  {{#crossLink \"SpotLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 424,
            "description": "Defines a {{#crossLink \"Shadow\"}}{{/crossLink}} that is cast by this SpotLight.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpotLight.\nFires a {{#crossLink \"SpotLight/shadow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shadow",
            "default": "undefined",
            "type": "{Shadow}",
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/lighting/spotLight.js",
            "line": 440,
            "description": "Fired whenever this SpotLight's {{#crossLink \"SpotLight/shadow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shadow",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpotLight",
            "module": "xeogl",
            "submodule": "lighting"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 88,
            "description": "This Fresnel's edge color.\n\nFires an {{#crossLink \"Fresnel/edgeColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "edgeColor",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 105,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/edgeColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "edgeColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 119,
            "description": "This Fresnel's center color.\n\nFires an {{#crossLink \"Fresnel/centerColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "centerColor",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 136,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/centerColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "centerColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 150,
            "description": "Indicates this Fresnel's edge bias.\n\nFires a {{#crossLink \"Fresnel/edgeBias:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "edgeBias",
            "default": "0",
            "type": "Number",
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 167,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/edgeBias:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "edgeBias",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 181,
            "description": "Indicates this Fresnel's center bias.\n\nFires a {{#crossLink \"Fresnel/centerBias:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "centerBias",
            "default": "1",
            "type": "Number",
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 198,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/centerBias:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "centerBias",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 212,
            "description": "Indicates this Fresnel's power.\n\nFires a {{#crossLink \"Fresnel/power:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "power",
            "default": "1",
            "type": "Number",
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/fresnel.js",
            "line": 229,
            "description": "Fired whenever this Fresnel's {{#crossLink \"Fresnel/power:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "power",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Fresnel",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 385,
            "description": "RGB diffuse color of this MetallicMaterial.\n\nMultiplies by the RGB components of {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/baseColor:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "baseColor",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 422,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/baseColor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "baseColor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 436,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing the diffuse color of this MetallicMaterial, with optional *A* component for alpha.\n\nThe RGB components multiply by the {{#crossLink \"MetallicMaterial/baseColor:property\"}}{{/crossLink}} property,\nwhile the *A* component, if present, multiplies by the {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/baseColorMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "baseColorMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 454,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "baseColorMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 468,
            "description": "Factor in the range [0..1] indicating how metallic this MetallicMaterial is.\n\n1 is metal, 0 is non-metal.\n\nMultiplies by the *R* component of {{#crossLink \"MetallicMaterial/metallicMap:property\"}}{{/crossLink}}\nand the *A* component of {{#crossLink \"MetallicMaterial/metalRoughnessMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/metallic:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "metallic",
            "default": "1.0",
            "type": "Number",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 496,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "metallic",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 510,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's metallic factor in its *R* component.\n\nThe *R* component multiplies by the {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/metallicMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "metallicMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 527,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/metallicMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "metallicMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 541,
            "description": "Factor in the range [0..1] indicating the roughness of this MetallicMaterial.\n\n0 is fully smooth, 1 is fully rough.\n\nMultiplies by the *R* component of {{#crossLink \"MetallicMaterial/roughnessMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/roughness:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "roughness",
            "default": "1.0",
            "type": "Number",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 568,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "roughness",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 582,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's roughness factor in its *R* component.\n\nThe *R* component multiplies by the {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/roughnessMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "roughnessMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 599,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/roughnessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "roughnessMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 613,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's metalness in its *R* component and roughness in its *G* component.\n\nIts *B* component multiplies by the {{#crossLink \"MetallicMaterial/metallic:property\"}}{{/crossLink}} property, while\nits *G* component multiplies by the {{#crossLink \"MetallicMaterial/roughness:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/metallicRoughnessMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "metallicRoughnessMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 631,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/metallicRoughnessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "metallicRoughnessMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 645,
            "description": "Factor in the range [0..1] indicating specular Fresnel value.\n\nFires a {{#crossLink \"MetallicMaterial/specularF0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularF0",
            "default": "0.0",
            "type": "Number",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 668,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/specularF0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularF0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 682,
            "description": "RGB emissive color of this MetallicMaterial.\n\nMultiplies by {{#crossLink \"MetallicMaterial/emissiveMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 719,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 733,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing the emissive color of this MetallicMaterial.\n\nMultiplies by the {{#crossLink \"MetallicMaterial/emissive:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 750,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 764,
            "description": "RGB ambient occlusion {{#crossLink \"Texture\"}}{{/crossLink}} attached to this MetallicMaterial.\n\nWithin shaders, multiplies by the specular and diffuse light reflected by surfaces.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/occlusionMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "occlusionMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 781,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/occlusionMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "occlusionMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 795,
            "description": "Factor in the range [0..1] indicating the alpha value.\n\nMultiplies by the *R* component of {{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} and\nthe *A* component, if present, of {{#crossLink \"MetallicMaterial/baseColorMap:property\"}}{{/crossLink}}.\n\nThe value of {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}} indicates how alpha is\ninterpreted when rendering.\n\nFires an {{#crossLink \"MetallicMaterial/alpha:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alpha",
            "default": "1.0",
            "type": "Number",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 824,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alpha",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 838,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing this MetallicMaterial's alpha in its *R* component.\n\nThe *R* component multiplies by the {{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires an {{#crossLink \"MetallicMaterial/alphaMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 855,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 869,
            "description": "RGB tangent-space normal map {{#crossLink \"Texture\"}}{{/crossLink}}.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this MetallicMaterial.\n\nFires a {{#crossLink \"MetallicMaterial/normalMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normalMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 884,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/normalMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normalMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 898,
            "description": "The alpha rendering mode.\n\nThis specifies how alpha is interpreted. Alpha is the combined result of the\n{{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\n* \"opaque\" - The alpha value is ignored and the rendered output is fully opaque.\n* \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha and {{#crossLink \"MetallicMaterial/alphaCutoff:property\"}}{{/crossLink}}.\n* \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator).\n\nFires an {{#crossLink \"MetallicMaterial/alphaMode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMode",
            "default": "\"opaque\"",
            "type": "{String}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 938,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 952,
            "description": "The alpha cutoff value.\n\nSpecifies the cutoff threshold when {{#crossLink \"MetallicMaterial/alphaMode:property\"}}{{/crossLink}}\nequals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully\nopaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire\nmaterial as fully transparent. This value is ignored for other modes.\n\nAlpha is the combined result of the\n{{#crossLink \"MetallicMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"MetallicMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\nFires an {{#crossLink \"MetallicMaterial/alphaCutoff:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaCutoff",
            "default": "0.5",
            "type": "{Number}",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 983,
            "description": "Fired whenever this MetallicMaterial's {{#crossLink \"MetallicMaterial/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaCutoff",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 996,
            "description": "Whether backfaces are visible on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe backfaces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} compoents that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/backfaces:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaces",
            "default": "false",
            "type": "Boolean",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 1022,
            "description": "Fired whenever this MetallicMaterial' {{#crossLink \"MetallicMaterial/backfaces:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaces",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 1036,
            "description": "Indicates the winding direction of front faces on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe faces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"MetallicMaterial/frontface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "frontface",
            "default": "\"ccw\"",
            "type": "String",
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/metallicMaterial.js",
            "line": 1062,
            "description": "Fired whenever this MetallicMaterial' {{#crossLink \"MetallicMaterial/frontface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "frontface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MetallicMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 281,
            "description": "The PhongMaterial's ambient color.\n\nFires a {{#crossLink \"PhongMaterial/ambient:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambient",
            "default": "[0.3, 0.3, 0.3]",
            "type": "Float32Array",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 316,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambient",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 330,
            "description": "The PhongMaterial's diffuse color.\n\nMultiplies by {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 367,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 381,
            "description": "The material's specular color.\n\nMultiplies by {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 418,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 432,
            "description": "The PhongMaterial's emissive color.\n\nMultiplies by {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 469,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 483,
            "description": "Factor in the range [0..1] indicating how transparent the PhongMaterial is.\n\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n\nMultiplies by {{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"PhongMaterial/alpha:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alpha",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 510,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alpha",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 524,
            "description": "A factor in range [0..128] that determines the size and sharpness of the specular highlights create by this PhongMaterial.\n\nLarger values produce smaller, sharper highlights. A value of 0.0 gives very large highlights that are almost never\ndesirable. Try values close to 10 for a larger, fuzzier highlight and values of 100 or more for a small, sharp\nhighlight.\n\nFires a {{#crossLink \"PhongMaterial/shininess:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shininess",
            "default": "80.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 545,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/shininess:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shininess",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 559,
            "description": "The PhongMaterial's line width.\n\nFires a {{#crossLink \"PhongMaterial/lineWidth:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lineWidth",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 576,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/lineWidth:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lineWidth",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 590,
            "description": "The PhongMaterial's point size.\n\nFires a {{#crossLink \"PhongMaterial/pointSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pointSize",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 607,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/pointSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pointSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 621,
            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected by this PhongMaterial.\n\nThe surface will be non-reflective when this is 0, and completely mirror-like when it is 1.0.\n\nMultiplies by {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/reflectivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivity",
            "default": "1.0",
            "type": "Number",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 642,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivity",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 656,
            "description": "A normal {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/normalMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normalMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 671,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/normalMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normalMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 685,
            "description": "An ambient {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/ambient:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/ambientMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambientMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 702,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/ambientMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambientMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 716,
            "description": "A diffuse {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/diffuseMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 733,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuseMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 747,
            "description": "A specular {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/specularMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 764,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specularMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 778,
            "description": "An emissive {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires an {{#crossLink \"PhongMaterial/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 795,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 809,
            "description": "An alpha {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires an {{#crossLink \"PhongMaterial/alphaMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 826,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 840,
            "description": "A reflectivity {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/reflectivityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivityMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 857,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 871,
            "description": "A reflection {{#crossLink \"CubeMap\"}}{{/crossLink}} attached to this PhongMaterial.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/reflection:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflection",
            "default": "undefined",
            "type": "{Reflect}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 886,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflection",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Reflect"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 900,
            "description": "An occlusion map {{#crossLink \"Texture\"}}{{/crossLink}} attached to this PhongMaterial.\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\nFires a {{#crossLink \"PhongMaterial/occlusionMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "occlusionMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 916,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/occlusionMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "occlusionMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 930,
            "description": "A diffuse {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/diffuseFresnel:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/diffuseFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseFresnel",
            "default": "undefined",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 947,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 961,
            "description": "A specular {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/specular:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/specularFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularFresnel",
            "default": "undefined",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 978,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/specularFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 992,
            "description": "An emissive {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/emissive:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires an {{#crossLink \"PhongMaterial/emissiveFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveFresnel",
            "default": "undefined",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1009,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/emissiveFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1023,
            "description": "An alpha {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires an {{#crossLink \"PhongMaterial/alphaFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaFresnel",
            "default": "undefined",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1040,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/alphaFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1054,
            "description": "A reflectivity {{#crossLink \"Fresnel\"}}{{/crossLink}} attached to this PhongMaterial.\n\nThis property multiplies by {{#crossLink \"PhongMaterial/reflectivity:property\"}}{{/crossLink}} when not null or undefined.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this PhongMaterial.\n\nFires a {{#crossLink \"PhongMaterial/reflectivityFresnel:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivityFresnel",
            "default": "undefined",
            "type": "{Fresnel}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1071,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/reflectivityFresnel:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivityFresnel",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1085,
            "description": "The alpha rendering mode.\n\nThis governs how alpha is treated. Alpha is the combined result of the\n{{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\n* \"opaque\" - The alpha value is ignored and the rendered output is fully opaque.\n* \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value.\n* \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator).\n\nFires an {{#crossLink \"PhongMaterial/alphaMode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMode",
            "default": "\"opaque\"",
            "type": "{String}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1125,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1139,
            "description": "The alpha cutoff value.\n\nSpecifies the cutoff threshold when {{#crossLink \"PhongMaterial/alphaMode:property\"}}{{/crossLink}}\nequals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully\nopaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire\nmaterial as fully transparent. This value is ignored for other modes.\n\nAlpha is the combined result of the\n{{#crossLink \"PhongMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"PhongMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\nFires an {{#crossLink \"PhongMaterial/alphaCutoff:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaCutoff",
            "default": "0.5",
            "type": "{Number}",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1170,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaCutoff",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1183,
            "description": "Whether backfaces are visible on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe backfaces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} compoents that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/backfaces:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaces",
            "default": "false",
            "type": "Boolean",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1209,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/backfaces:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaces",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1223,
            "description": "Indicates the winding direction of front faces on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe faces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/frontface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "frontface",
            "default": "\"ccw\"",
            "type": "String",
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/phongMaterial.js",
            "line": 1249,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/frontface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "frontface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PhongMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 378,
            "description": "RGB diffuse color of this SpecularMaterial.\n\nMultiplies by the *RGB* components of {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"SpecularMaterial/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 415,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 429,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} containing the diffuse color of this SpecularMaterial, with optional *A* component for alpha.\n\nThe *RGB* components multiply by the {{#crossLink \"SpecularMaterial/diffuse:property\"}}{{/crossLink}} property,\nwhile the *A* component, if present, multiplies by the {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/diffuseMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 447,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 461,
            "description": "RGB specular color of this SpecularMaterial.\n\nMultiplies by the {{#crossLink \"SpecularMaterial/specularMap:property\"}}{{/crossLink}}\nand the *A* component of {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"SpecularMaterial/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Float32Array",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 499,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 513,
            "description": "RGB texture containing the specular color of this SpecularMaterial.\n\nMultiplies by the {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/specularMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 530,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 544,
            "description": "RGBA texture containing this SpecularMaterial's specular color in its *RGB* components and glossiness in its *A* component.\n\nThe *RGB* components multiply by the {{#crossLink \"SpecularMaterial/specular:property\"}}{{/crossLink}} property, while\nthe *A* component multiplies by the {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/specularGlossinessMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularGlossinessMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 562,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularGlossinessMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 576,
            "description": "Factor in the range [0..1] indicating how glossy this SpecularMaterial is.\n\n0 is no glossiness, 1 is full glossiness.\n\nMultiplies by the *R* component of {{#crossLink \"SpecularMaterial/glossinessMap:property\"}}{{/crossLink}}\nand the *A* component of {{#crossLink \"SpecularMaterial/specularGlossinessMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"SpecularMaterial/glossiness:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "glossiness",
            "default": "1.0",
            "type": "Number",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 604,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "glossiness",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 618,
            "description": "RGB texture containing this SpecularMaterial's glossiness in its *R* component.\n\nThe *R* component multiplies by the {{#crossLink \"SpecularMaterial/glossiness:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/glossinessMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "glossinessMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 635,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/glossinessMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "glossinessMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 649,
            "description": "Factor in the range [0..1] indicating amount of specular Fresnel.\n\nFires a {{#crossLink \"SpecularMaterial/specularF0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularF0",
            "default": "0.0",
            "type": "Number",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 672,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/specularF0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularF0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 686,
            "description": "RGB emissive color of this SpecularMaterial.\n\nMultiplies by {{#crossLink \"SpecularMaterial/emissiveMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"SpecularMaterial/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 723,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 737,
            "description": "RGB texture containing the emissive color of this SpecularMaterial.\n\nMultiplies by the {{#crossLink \"SpecularMaterial/emissive:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 754,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 768,
            "description": "Factor in the range [0..1] indicating how transparent this SpecularMaterial is.\n\nA value of 0.0 is fully transparent, while 1.0 is fully opaque.\n\nMultiplies by the *R* component of {{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} and\nthe *A* component, if present, of {{#crossLink \"SpecularMaterial/diffuseMap:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"SpecularMaterial/alpha:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alpha",
            "default": "1.0",
            "type": "Number",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 796,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alpha",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 810,
            "description": "RGB {{#crossLink \"Texture\"}}{{/crossLink}} with alpha in its *R* component.\n\nThe *R* component multiplies by the {{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} property.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires an {{#crossLink \"SpecularMaterial/alphaMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 827,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 841,
            "description": "RGB tangent-space normal {{#crossLink \"Texture\"}}{{/crossLink}} attached to this SpecularMaterial.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"PhongMaterial/normalMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normalMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 856,
            "description": "Fired whenever this PhongMaterial's {{#crossLink \"PhongMaterial/normalMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normalMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 870,
            "description": "RGB ambient occlusion {{#crossLink \"Texture\"}}{{/crossLink}} attached to this SpecularMaterial.\n\nWithin shaders, multiplies by the specular and diffuse light reflected by surfaces.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this SpecularMaterial.\n\nFires a {{#crossLink \"SpecularMaterial/occlusionMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "occlusionMap",
            "default": "undefined",
            "type": "{Texture}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 887,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/occlusionMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "occlusionMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 901,
            "description": "The alpha rendering mode.\n\nThis governs how alpha is treated. Alpha is the combined result of the\n{{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\n* \"opaque\" - The alpha value is ignored and the rendered output is fully opaque.\n* \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value.\n* \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator).\n\nFires an {{#crossLink \"SpecularMaterial/alphaMode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaMode",
            "default": "\"opaque\"",
            "type": "{String}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 941,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaMode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 955,
            "description": "The alpha cutoff value.\n\nSpecifies the cutoff threshold when {{#crossLink \"SpecularMaterial/alphaMode:property\"}}{{/crossLink}}\nequals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully\nopaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire\nmaterial as fully transparent. This value is ignored for other modes.\n\nAlpha is the combined result of the\n{{#crossLink \"SpecularMaterial/alpha:property\"}}{{/crossLink}} and\n{{#crossLink \"SpecularMaterial/alphaMap:property\"}}{{/crossLink}} properties.\n\nFires an {{#crossLink \"SpecularMaterial/alphaCutoff:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "alphaCutoff",
            "default": "0.5",
            "type": "{Number}",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 986,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "alphaCutoff",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 1000,
            "description": "Whether backfaces are visible on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe backfaces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} compoents that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"PhongMaterial/backfaces:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaces",
            "default": "false",
            "type": "Boolean",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 1026,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/backfaces:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaces",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 1040,
            "description": "Indicates the winding direction of front faces on attached {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe faces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires a {{#crossLink \"SpecularMaterial/frontface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "frontface",
            "default": "\"ccw\"",
            "type": "String",
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/specularMaterial.js",
            "line": 1066,
            "description": "Fired whenever this SpecularMaterial's {{#crossLink \"SpecularMaterial/frontface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "frontface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SpecularMaterial",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 296,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 303,
            "description": "Fired whenever this Texture has loaded the\nimage file that its {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property currently points to.",
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "value",
                    "description": "The value of the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 338,
            "description": "Indicates an HTML DOM Image object to source this Texture from.\n\nFires an {{#crossLink \"Texture/image:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property to null.",
            "itemtype": "property",
            "name": "image",
            "default": "null",
            "type": "{HTMLImageElement}",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 361,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 374,
            "description": "Indicates a path to an image file to source this Texture from.\n\nFires a {{#crossLink \"Texture/src:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property to null.",
            "itemtype": "property",
            "name": "src",
            "default": "null",
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 397,
            "description": "Fired whenever this Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 411,
            "description": "2D translation vector that will be added to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/translate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "translate",
            "default": "[0, 0]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 429,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/translate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "translate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 442,
            "description": "2D scaling vector that will be applied to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/scale:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "scale",
            "default": "[1, 1]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 460,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/scale:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "scale",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 473,
            "description": "Rotation, in degrees, that will be applied to this Texture's *S* and *T* coordinates.\n\nFires a {{#crossLink \"Texture/rotate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "rotate",
            "default": "0",
            "type": "Number",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 497,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/rotate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "rotate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 510,
            "description": "How this Texture is sampled when a texel covers less than one pixel.\n\n\nOptions are:\n\n    * **\"nearest\"** - Uses the value of the texture element that is nearest\n    (in Manhattan distance) to the center of the pixel being textured.\n\n    * **\"linear\"** - Uses the weighted average of the four texture elements that are\n    closest to the center of the pixel being textured.\n\n    * **\"nearestMipmapNearest\"** - Chooses the mipmap that most closely matches the\n    size of the pixel being textured and uses the \"nearest\" criterion (the texture\n    element nearest to the center of the pixel) to produce a texture value.\n\n    * **\"linearMipmapNearest\"** - Chooses the mipmap that most closely matches the size of\n    the pixel being textured and uses the \"linear\" criterion (a weighted average of the\n    four texture elements that are closest to the center of the pixel) to produce a\n    texture value.\n\n    * **\"nearestMipmapLinear\"** - Chooses the two mipmaps that most closely\n    match the size of the pixel being textured and uses the \"nearest\" criterion\n    (the texture element nearest to the center of the pixel) to produce a texture\n    value from each mipmap. The final texture value is a weighted average of those two\n    values.\n\n    * **\"linearMipmapLinear\"** - **(default)** - Chooses the two mipmaps that most closely match the size\n    of the pixel being textured and uses the \"linear\" criterion (a weighted average\n    of the four texture elements that are closest to the center of the pixel) to\n    produce a texture value from each mipmap. The final texture value is a weighted\n    average of those two values.\n\n\nFires a {{#crossLink \"Texture/minFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "minFilter",
            "default": "\"linearMipmapLinear\"",
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 574,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/minFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "minFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 587,
            "description": "How this Texture is sampled when a texel covers more than one pixel.\n\nOptions are:\n\n\n    * **\"nearest\"** - Uses the value of the texture element that is nearest\n    (in Manhattan distance) to the center of the pixel being textured.\n    * **\"linear\"** - **(default)** - Uses the weighted average of the four texture elements that are\n    closest to the center of the pixel being textured.\n\n\nFires a {{#crossLink \"Texture/magFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "magFilter",
            "default": "\"linear\"",
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 624,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/magFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "magFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 637,
            "description": "Wrap parameter for this Texture's *S* coordinate.\n\nOptions are:\n\n\n    * **\"clampToEdge\"** -  causes *S* coordinates to be clamped to the size of the texture.\n    * **\"mirroredRepeat\"** - causes the *S* coordinate to be set to the fractional part of the texture coordinate\n    if the integer part of *S* is even; if the integer part of *S* is odd, then the *S* texture coordinate is\n    set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *S*.\n    * **\"repeat\"** - **(default)** - causes the integer part of the *S* coordinate to be ignored; xeogl uses only the\n    fractional part, thereby creating a repeating pattern.\n\n\nFires a {{#crossLink \"Texture/wrapS:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapS",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 676,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapS:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapS",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 689,
            "description": "Wrap parameter for this Texture's *T* coordinate.\n\nOptions are:\n\n\n    * **\"clampToEdge\"** -  Causes *T* coordinates to be clamped to the size of the texture.\n    * **\"mirroredRepeat\"** - Causes the *T* coordinate to be set to the fractional part of the texture coordinate\n    if the integer part of *T* is even; if the integer part of *T* is odd, then the *T* texture coordinate is\n    set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *T*.\n    * **\"repeat\"** - **(default)** - Causes the integer part of the *T* coordinate to be ignored; xeogl uses only the\n    fractional part, thereby creating a repeating pattern.\n\n\nFires a {{#crossLink \"Texture/wrapT:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapT",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 728,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapT:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapT",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 741,
            "description": "Flips this Texture's source data along its vertical axis when true.\n\nFires a {{#crossLink \"Texture/flipY:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "flipY",
            "default": "false",
            "type": "Boolean",
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/materials/texture.js",
            "line": 765,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/flipY:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "flipY",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "xeogl",
            "submodule": "materials"
        },
        {
            "file": "src/math/math.js",
            "line": 24,
            "description": "The number of radiians in a degree (0.0174532925).",
            "itemtype": "property",
            "name": "DEGTORAD",
            "type": "{Number}",
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 32,
            "description": "Returns a new, uninitialized two-element vector.",
            "itemtype": "method",
            "name": "vec2",
            "params": [
                {
                    "name": "values",
                    "description": "Initial values.",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 43,
            "description": "Returns a new, uninitialized three-element vector.",
            "itemtype": "method",
            "name": "vec3",
            "params": [
                {
                    "name": "values",
                    "description": "Initial values.",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 54,
            "description": "Returns a new, uninitialized four-element vector.",
            "itemtype": "method",
            "name": "vec4",
            "params": [
                {
                    "name": "values",
                    "description": "Initial values.",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 65,
            "description": "Returns a new, uninitialized 3x3 matrix.",
            "itemtype": "method",
            "name": "mat3",
            "params": [
                {
                    "name": "values",
                    "description": "Initial values.",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 76,
            "description": "Converts a 3x3 matrix to 4x4",
            "itemtype": "method",
            "name": "mat3ToMat4",
            "params": [
                {
                    "name": "mat3",
                    "description": "3x3 matrix."
                },
                {
                    "name": "mat4",
                    "description": "4x4 matrix"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 88,
            "description": "Returns a new, uninitialized 4x4 matrix.",
            "itemtype": "method",
            "name": "mat4",
            "params": [
                {
                    "name": "values",
                    "description": "Initial values.",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 99,
            "description": "Converts a 4x4 matrix to 3x3",
            "itemtype": "method",
            "name": "mat4ToMat3",
            "params": [
                {
                    "name": "mat4",
                    "description": "4x4 matrix."
                },
                {
                    "name": "mat3",
                    "description": "3x3 matrix"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 111,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 157,
            "description": "Clamps a value to the given range.",
            "params": [
                {
                    "name": "value",
                    "description": "Value to clamp.",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "Lower bound.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "Upper bound.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Clamped result.",
                "type": "Number"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 168,
            "description": "Floating-point modulus",
            "itemtype": "method",
            "name": "fmod",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 187,
            "description": "Negates a four-element vector.",
            "itemtype": "method",
            "name": "negateVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "Vector to negate",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 206,
            "description": "Adds one four-element vector to another.",
            "itemtype": "method",
            "name": "addVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 226,
            "description": "Adds a scalar value to each element of a four-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 246,
            "description": "Adds one three-element vector to another.",
            "itemtype": "method",
            "name": "addVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 265,
            "description": "Adds a scalar value to each element of a three-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 284,
            "description": "Subtracts one four-element vector from another.",
            "itemtype": "method",
            "name": "subVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 304,
            "description": "Subtracts one three-element vector from another.",
            "itemtype": "method",
            "name": "subVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 323,
            "description": "Subtracts one two-element vector from another.",
            "itemtype": "method",
            "name": "subVec2",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 341,
            "description": "Subtracts a scalar value from each element of a four-element vector.",
            "itemtype": "method",
            "name": "subVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 361,
            "description": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
            "itemtype": "method",
            "name": "subScalarVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 381,
            "description": "Multiplies one three-element vector by another.",
            "itemtype": "method",
            "name": "mulVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 401,
            "description": "Multiplies each element of a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec34calar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 421,
            "description": "Multiplies each element of a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec3Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 440,
            "description": "Multiplies each element of a two-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec2Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 458,
            "description": "Divides one three-element vector by another.",
            "itemtype": "method",
            "name": "divVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 477,
            "description": "Divides one four-element vector by another.",
            "itemtype": "method",
            "name": "divVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 497,
            "description": "Divides a scalar by a three-element vector, returning a new vector.",
            "itemtype": "method",
            "name": "divScalarVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 516,
            "description": "Divides a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "divVec3Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 535,
            "description": "Divides a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "divVec4Scalar",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 556,
            "description": "Divides a scalar by a four-element vector, returning a new vector.",
            "itemtype": "method",
            "name": "divScalarVec4",
            "static": 1,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 576,
            "description": "Returns the dot product of two four-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 588,
            "description": "Returns the cross product of two four-element vectors.",
            "itemtype": "method",
            "name": "cross3Vec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The cross product"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 606,
            "description": "Returns the cross product of two three-element vectors.",
            "itemtype": "method",
            "name": "cross3Vec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The cross product"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 631,
            "description": "Returns the length of a four-element vector.",
            "itemtype": "method",
            "name": "lenVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 642,
            "description": "Returns the dot product of two three-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 654,
            "description": "Returns the dot product of two two-element vectors.",
            "itemtype": "method",
            "name": "dotVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The dot product"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 676,
            "description": "Returns the length of a three-element vector.",
            "itemtype": "method",
            "name": "lenVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 687,
            "description": "Returns the length of a two-element vector.",
            "itemtype": "method",
            "name": "lenVec2",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                }
            ],
            "return": {
                "description": "The length"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 705,
            "itemtype": "method",
            "name": "rcpVec3",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 717,
            "description": "Normalizes a four-element vector",
            "itemtype": "method",
            "name": "normalizeVec4",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 731,
            "description": "Normalizes a three-element vector",
            "itemtype": "method",
            "name": "normalizeVec4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 741,
            "description": "Normalizes a two-element vector",
            "itemtype": "method",
            "name": "normalizeVec2",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 751,
            "description": "Gets the angle between two vectors",
            "itemtype": "method",
            "name": "angleVec3",
            "params": [
                {
                    "name": "v",
                    "description": ""
                },
                {
                    "name": "w",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 764,
            "description": "Creates a three-element vector from the rotation part of a sixteen-element matrix.",
            "params": [
                {
                    "name": "m",
                    "description": ""
                },
                {
                    "name": "dest",
                    "description": ""
                }
            ],
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 797,
            "description": "Converts an n-element vector to a JSON-serializable\narray with values rounded to two decimal places.",
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 814,
            "description": "Duplicates a 4x4 identity matrix.",
            "itemtype": "method",
            "name": "dupMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 823,
            "description": "Extracts a 3x3 matrix from a 4x4 matrix.",
            "itemtype": "method",
            "name": "mat4To3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 836,
            "description": "Returns a 4x4 matrix with each element set to the given scalar value.",
            "itemtype": "method",
            "name": "m4s",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 850,
            "description": "Returns a 4x4 matrix with each element set to zero.",
            "itemtype": "method",
            "name": "setMat4ToZeroes",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 859,
            "description": "Returns a 4x4 matrix with each element set to 1.0.",
            "itemtype": "method",
            "name": "setMat4ToOnes",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 868,
            "description": "Returns a 4x4 matrix with each element set to 1.0.",
            "itemtype": "method",
            "name": "setMat4ToOnes",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 882,
            "description": "Returns a 4x4 matrix with diagonal elements set to the given vector.",
            "itemtype": "method",
            "name": "diagonalMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 891,
            "description": "Returns a 4x4 matrix with diagonal elements set to the given scalar.",
            "itemtype": "method",
            "name": "diagonalMat4s",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 900,
            "description": "Returns a 4x4 identity matrix.",
            "itemtype": "method",
            "name": "identityMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 932,
            "description": "Tests if the given 4x4 matrix is the identity matrix.",
            "itemtype": "method",
            "name": "isIdentityMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 947,
            "description": "Negates the given 4x4 matrix.",
            "itemtype": "method",
            "name": "negateMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 975,
            "description": "Adds the given 4x4 matrices together.",
            "itemtype": "method",
            "name": "addMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1003,
            "description": "Adds the given scalar to each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "addMat4Scalar",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1031,
            "description": "Adds the given scalar to each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "addScalarMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1040,
            "description": "Subtracts the second 4x4 matrix from the first.",
            "itemtype": "method",
            "name": "subMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1068,
            "description": "Subtracts the given scalar from each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "subMat4Scalar",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1096,
            "description": "Subtracts the given scalar from each element of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "subScalarMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1124,
            "description": "Multiplies the two given 4x4 matrix by each other.",
            "itemtype": "method",
            "name": "mulMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1165,
            "description": "Multiplies each element of the given 4x4 matrix by the given scalar.",
            "itemtype": "method",
            "name": "mulMat4Scalar",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1193,
            "description": "Multiplies the given 4x4 matrix by the given four-element vector.",
            "itemtype": "method",
            "name": "mulMat4v4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1208,
            "description": "Transposes the given 4x4 matrix.",
            "itemtype": "method",
            "name": "transposeMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1254,
            "description": "Returns the determinant of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "determinantMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1273,
            "description": "Returns the inverse of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "inverseMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1323,
            "description": "Returns the trace of the given 4x4 matrix.",
            "itemtype": "method",
            "name": "traceMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1332,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1345,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1360,
            "description": "Returns 4x4 translation matrix.",
            "itemtype": "method",
            "name": "translationMat4s",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1369,
            "description": "Efficiently post-concatenates a translation to the given matrix.",
            "params": [
                {
                    "name": "v",
                    "description": ""
                },
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1378,
            "description": "Efficiently post-concatenates a translation to the given matrix.",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                },
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1434,
            "description": "Returns 4x4 rotation matrix.",
            "itemtype": "method",
            "name": "rotationMat4v",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1486,
            "description": "Returns 4x4 rotation matrix.",
            "itemtype": "method",
            "name": "rotationMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1495,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4v",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1508,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1523,
            "description": "Efficiently post-concatenates a scaling to the given matrix.",
            "itemtype": "method",
            "name": "scaleMat4c",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                },
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1551,
            "description": "Efficiently post-concatenates a scaling to the given matrix.",
            "itemtype": "method",
            "name": "scaleMat4c",
            "params": [
                {
                    "name": "xyz",
                    "description": ""
                },
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1579,
            "description": "Returns 4x4 scale matrix.",
            "itemtype": "method",
            "name": "scalingMat4s",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1588,
            "description": "Creates a matrix from a quaternion rotation and vector translation",
            "params": [
                {
                    "name": "q",
                    "description": "Rotation quaternion",
                    "type": "Float32Array"
                },
                {
                    "name": "v",
                    "description": "Translation vector",
                    "type": "Float32Array"
                },
                {
                    "name": "dest",
                    "description": "Destination matrix",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1638,
            "description": "Gets Euler angles from a 4x4 matrix.",
            "params": [
                {
                    "name": "mat",
                    "description": "The 4x4 matrix.",
                    "type": "Float32Array"
                },
                {
                    "name": "order",
                    "description": "Desired Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.",
                    "type": "String"
                },
                {
                    "name": "dest",
                    "description": "Destination Euler angles, created by default.",
                    "type": "Float32Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Euler angles.",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1735,
            "description": "Returns a 4x4 'lookat' viewing transform matrix.",
            "itemtype": "method",
            "name": "lookAtMat4v",
            "params": [
                {
                    "name": "pos",
                    "description": "vec3 position of the viewer"
                },
                {
                    "name": "target",
                    "description": "vec3 point the viewer is looking at"
                },
                {
                    "name": "up",
                    "description": "vec3 pointing \"up\""
                },
                {
                    "name": "dest",
                    "description": "mat4 Optional, mat4 matrix will be written into"
                }
            ],
            "return": {
                "description": "dest if specified, a new mat4 otherwise",
                "type": "Mat4"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1830,
            "description": "Returns a 4x4 'lookat' viewing transform matrix.",
            "itemtype": "method",
            "name": "lookAtMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1839,
            "description": "Returns a 4x4 orthographic projection matrix.",
            "itemtype": "method",
            "name": "orthoMat4c",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1875,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "frustumMat4v",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1919,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "frustumMat4v",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1950,
            "description": "Returns a 4x4 perspective projection matrix.",
            "itemtype": "method",
            "name": "perspectiveMat4v",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1971,
            "description": "Transforms a three-element position by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPoint3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 1987,
            "description": "Transforms a homogeneous coordinate by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPoint3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2005,
            "description": "Transforms an array of three-element positions by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPoints3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2046,
            "description": "Transforms an array of positions by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPositions3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2094,
            "description": "Transforms an array of positions by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformPositions4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2142,
            "description": "Transforms a three-element vector by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformVec3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2156,
            "description": "Transforms a four-element vector by a 4x4 matrix.",
            "itemtype": "method",
            "name": "transformVec4",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2171,
            "description": "Rotate a 3D vector around the x-axis",
            "itemtype": "method",
            "name": "rotateVec3X",
            "params": [
                {
                    "name": "a",
                    "description": "The vec3 point to rotate",
                    "type": "Float32Array"
                },
                {
                    "name": "b",
                    "description": "The origin of the rotation",
                    "type": "Float32Array"
                },
                {
                    "name": "c",
                    "description": "The angle of rotation",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "The receiving vec3",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Float32Array"
            },
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2204,
            "description": "Rotate a 3D vector around the y-axis",
            "itemtype": "method",
            "name": "rotateVec3Y",
            "params": [
                {
                    "name": "a",
                    "description": "The vec3 point to rotate",
                    "type": "Float32Array"
                },
                {
                    "name": "b",
                    "description": "The origin of the rotation",
                    "type": "Float32Array"
                },
                {
                    "name": "c",
                    "description": "The angle of rotation",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "The receiving vec3",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Float32Array"
            },
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2237,
            "description": "Rotate a 3D vector around the z-axis",
            "itemtype": "method",
            "name": "rotateVec3Z",
            "params": [
                {
                    "name": "a",
                    "description": "The vec3 point to rotate",
                    "type": "Float32Array"
                },
                {
                    "name": "b",
                    "description": "The origin of the rotation",
                    "type": "Float32Array"
                },
                {
                    "name": "c",
                    "description": "The angle of rotation",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "The receiving vec3",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Float32Array"
            },
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2270,
            "description": "Transforms a four-element vector by a 4x4 projection matrix.",
            "itemtype": "method",
            "name": "projectVec4",
            "params": [
                {
                    "name": "p",
                    "description": "3D View-space coordinate",
                    "type": "Float32Array"
                },
                {
                    "name": "q",
                    "description": "2D Projected coordinate",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "2D Projected coordinate",
                "type": "Float32Array"
            },
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2287,
            "description": "Linearly interpolates between two 3D vectors.",
            "itemtype": "method",
            "name": "lerpVec3",
            "static": 1,
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2302,
            "description": "Flattens a two-dimensional array into a one-dimensional array.",
            "itemtype": "method",
            "name": "flatten",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "A 2D array",
                    "type": "Array of Arrays"
                }
            ],
            "return": {
                "description": "Flattened 1D array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/math.js",
            "line": 2340,
            "description": "Initializes a quaternion from Euler angles.",
            "params": [
                {
                    "name": "euler",
                    "description": "The Euler angles.",
                    "type": "Float32Array"
                },
                {
                    "name": "order",
                    "description": "Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.",
                    "type": "String"
                },
                {
                    "name": "dest",
                    "description": "Destination quaternion, created by default.",
                    "type": "Float32Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The quaternion.",
                "type": "Float32Array"
            },
            "class": "xeogl.math.math",
            "module": "xeogl",
            "submodule": "math",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 1,
            "description": "Boundary math functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 10,
            "description": "Returns a new, uninitialized 3D axis-aligned bounding box.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 19,
            "description": "Returns a new, uninitialized 2D axis-aligned bounding box.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 28,
            "description": "Returns a new, uninitialized 3D oriented bounding box (OBB).",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 37,
            "description": "Returns a new, uninitialized 2D oriented bounding box (OBB).",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 47,
            "description": "Transforms an OBB3 by a 4x4 matrix.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 95,
            "description": "Gets the diagonal size of an AABB3 given as minima and maxima.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 122,
            "description": "Get a diagonal boundary size that is symmetrical about the given point.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 160,
            "description": "Gets the center of an AABB.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 175,
            "description": "Gets the center of a 2D AABB.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 189,
            "description": "Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\nCreates new AABB if none supplied.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 209,
            "description": "Converts an axis-aligned 3D boundary into an oriented boundary consisting of\nan array of eight 3D positions, one for each corner of the boundary.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 262,
            "description": "Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 321,
            "description": "Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 380,
            "description": "Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 439,
            "description": "Finds the minimum boundary sphere enclosing the given 3D points.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 487,
            "description": "Finds the minimum boundary sphere enclosing the given 3D points.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 541,
            "description": "Gets the center of a bounding sphere.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 556,
            "description": "Expands the first axis-aligned 3D boundary to enclose the second, if required.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 590,
            "description": "Expands an axis-aligned 3D boundary to enclose the given point, if needed.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 624,
            "description": "Collapses a 2D axis-aligned boundary, ready to expand to fit 2D points.\nCreates new AABB if none supplied.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 642,
            "description": "Finds the minimum 2D projected axis-aligned boundary enclosing the given 3D points.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 697,
            "description": "Expands the first axis-aligned 2D boundary to enclose the second, if required.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathBoundaries.js",
            "line": 723,
            "description": "Expands an axis-aligned 2D boundary to enclose the given point, if required.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathCurves.js",
            "line": 1,
            "description": "Curve math functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 1,
            "description": "Geometry math functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 10,
            "description": "Calculates the normal vector of a triangle.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 45,
            "description": "Finds the intersection of a 3D ray with a 3D triangle.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 94,
            "description": "Finds the intersection of a 3D ray with a plane defined by 3 points.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 130,
            "description": "Gets barycentric coordinates from cartesian coordinates within a triangle.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 177,
            "description": "Returns true if the given barycentric coordinates are within their triangle.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometry.js",
            "line": 190,
            "description": "Gets cartesian coordinates from barycentric coordinates within a triangle.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.2.js",
            "line": 1,
            "description": "Boundary math functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.2.js",
            "line": 10,
            "description": "Builds normal vectors from positions and indices.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.2.js",
            "line": 200,
            "description": "Builds vertex tangent vectors from positions, UVs and indices.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.2.js",
            "line": 275,
            "description": "Builds vertex and index arrays needed by color-indexed triangle picking.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.js",
            "line": 1,
            "description": "Boundary math functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.js",
            "line": 10,
            "description": "Builds normal vectors from positions and indices.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.js",
            "line": 103,
            "description": "Builds vertex tangent vectors from positions, UVs and indices.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathGeometryBuild.js",
            "line": 178,
            "description": "Builds vertex and index arrays needed by color-indexed triangle picking.",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathKDTree.js",
            "line": 1,
            "description": "KD-tree functions",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathKDTree.js",
            "line": 13,
            "description": "Returns a KD-tree that contains the triangles of the given mesh",
            "access": "private",
            "tagname": "",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathRays.js",
            "line": 1,
            "description": "Ray casting support functions.",
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathRays.js",
            "line": 10,
            "description": "Transforms a Canvas-space position into a World-space ray, in the context of a Camera.",
            "itemtype": "method",
            "name": "canvasPosToWorldRay",
            "static": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "The Camera.",
                    "type": "Camera"
                },
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space position.",
                    "type": "Float32Array"
                },
                {
                    "name": "worldRayOrigin",
                    "description": "The World-space ray origin.",
                    "type": "Float32Array"
                },
                {
                    "name": "worldRayDir",
                    "description": "The World-space ray direction.",
                    "type": "Float32Array"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathRays.js",
            "line": 73,
            "description": "Transforms a Canvas-space position to an Entity's Local-space coordinate system, in the context of a Camera.",
            "itemtype": "method",
            "name": "canvasPosToLocalRay",
            "static": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "The Camera.",
                    "type": "Camera"
                },
                {
                    "name": "entity",
                    "description": "The Entity.",
                    "type": "Entity"
                },
                {
                    "name": "canvasPos",
                    "description": "The Canvas-space position.",
                    "type": "Float32Array"
                },
                {
                    "name": "localRayOrigin",
                    "description": "The Local-space ray origin.",
                    "type": "Float32Array"
                },
                {
                    "name": "localRayDir",
                    "description": "The Local-space ray direction.",
                    "type": "Float32Array"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/math/mathRays.js",
            "line": 94,
            "description": "Transforms a ray from World-space to an Entity's Local-space coordinate system.",
            "itemtype": "method",
            "name": "worldRayToLocalRay",
            "static": 1,
            "params": [
                {
                    "name": "entity",
                    "description": "The Entity.",
                    "type": "Entity"
                },
                {
                    "name": "worldRayOrigin",
                    "description": "The World-space ray origin.",
                    "type": "Float32Array"
                },
                {
                    "name": "worldRayDir",
                    "description": "The World-space ray direction.",
                    "type": "Float32Array"
                },
                {
                    "name": "localRayOrigin",
                    "description": "The Local-space ray origin.",
                    "type": "Float32Array"
                },
                {
                    "name": "localRayDir",
                    "description": "The Local-space ray direction.",
                    "type": "Float32Array"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "namespace": "xeogl.math"
        },
        {
            "file": "src/models/model.js",
            "line": 245,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 256,
            "description": "The {{#crossLink \"Components\"}}{{/crossLink}} within this Model, mapped to their IDs.\n\nFires an {{#crossLink \"Model/updated:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "components",
            "type": "{{String:Component}}",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 266,
            "description": "The number of {{#crossLink \"Components\"}}{{/crossLink}} within this Model.",
            "itemtype": "property",
            "name": "numComponents",
            "type": "Number",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 274,
            "description": "A map of maps; for each {{#crossLink \"Component\"}}{{/crossLink}} type in this Model,\na map to IDs to {{#crossLink \"Component\"}}{{/crossLink}} instances, eg.\n\n````\n\"xeogl.Geometry\": {\n  \"alpha\": <xeogl.Geometry>,\n  \"beta\": <xeogl.Geometry>\n},\n\"xeogl.Rotate\": {\n  \"charlie\": <xeogl.Rotate>,\n  \"delta\": <xeogl.Rotate>,\n  \"echo\": <xeogl.Rotate>,\n},\n//...\n````",
            "itemtype": "property",
            "name": "types",
            "type": "{String:{String:xeogl.Component}}",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 296,
            "description": "The {{#crossLink \"Entity\"}}Entity{{/crossLink}} component instances within this Model, mapped to their IDs.",
            "itemtype": "property",
            "name": "entities",
            "type": "{{String:Entity}}",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 328,
            "description": "Adds a {{#crossLink \"Component\"}}Component{{/crossLink}} or subtype to this Model.\n\nThe {{#crossLink \"Component\"}}Component(s){{/crossLink}} may be specified by ID, instance, JSON definition or type.\n\nSee class comment for usage examples.\n\nThe {{#crossLink \"Component\"}}Components{{/crossLink}} must be in the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Model.\n\nFires an {{#crossLink \"Model/added:event\"}}{{/crossLink}} event.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "component",
                    "description": "ID, definition or instance of a {{#crossLink \"Component\"}}Component{{/crossLink}} type or subtype.",
                    "type": "Number|String|*|Component"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 476,
            "description": "Fired whenever an individual {{#crossLink \"Component\"}}{{/crossLink}} is added to this {{#crossLink \"Model\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "added",
            "params": [
                {
                    "name": "value",
                    "description": "The {{#crossLink \"Component\"}}{{/crossLink}} that was added.",
                    "type": "Component"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 517,
            "description": "Destroys all {{#crossLink \"Component\"}}Components{{/crossLink}} in this Model.",
            "itemtype": "method",
            "name": "destroyAll",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 553,
            "description": "Removes all {{#crossLink \"Component\"}}Components{{/crossLink}} from this Model.",
            "itemtype": "method",
            "name": "removeAll",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 599,
            "description": "Fired whenever an individual {{#crossLink \"Component\"}}{{/crossLink}} is removed from this {{#crossLink \"Model\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "removed",
            "params": [
                {
                    "name": "value",
                    "description": "The {{#crossLink \"Component\"}}{{/crossLink}} that was removed.",
                    "type": "Component"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 611,
            "description": "Iterates with a callback over the {{#crossLink \"Component\"}}Components{{/crossLink}} in this Model.",
            "itemtype": "method",
            "name": "iterate",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback called for each {{#crossLink \"Component\"}}{{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Optional scope for the callback, defaults to this Model.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 630,
            "description": "The Local-to-World-space (modelling) {{#crossLink \"Transform\"}}{{/crossLink}} attached to this Model.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this Model.\n\nInternally, the given {{#crossLink \"Transform\"}}{{/crossLink}} will be inserted above each top-most\n{{#crossLink \"Transform\"}}Transform{{/crossLink}} that the Model attaches to\nits {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nFires an {{#crossLink \"Model/transform:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "transform",
            "type": "Transform",
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 648,
            "description": "Fired whenever this Model's {{#crossLink \"Model/transform:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/models/model.js",
            "line": 671,
            "description": "World-space 3D boundary enclosing all the components in this Model.\n\nIf you call {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} on this boundary, then\nthis property will be assigned to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance next\ntime you reference it.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Model",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "src/rendering/viewport.js",
            "line": 77,
            "description": "The canvas-space boundary of this Viewport, indicated as [min, max, width, height].\n\nDefaults to the size of the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}{{/crossLink}}.\n\nIgnores attempts to set value when {{#crossLink \"Viewport/autoBoundary:property\"}}{{/crossLink}} is ````true````.\n\nFires a {{#crossLink \"Viewport/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "boundary",
            "default": "[size of Scene Canvas]",
            "type": "{Array of Number}",
            "class": "Viewport",
            "module": "xeogl",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/viewport.js",
            "line": 113,
            "description": "Fired whenever this Viewport's {{#crossLink \"Viewport/boundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Viewport",
            "module": "xeogl",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/viewport.js",
            "line": 127,
            "description": "Indicates whether this Viewport's {{#crossLink \"Viewport/boundary:property\"}}{{/crossLink}} automatically\nsynchronizes with the size of the parent {{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Canvas\"}}{{/crossLink}}.\n\nWhen set true, then this Viewport will fire a {{#crossLink \"Viewport/boundary/event\"}}{{/crossLink}} whenever\nthe {{#crossLink \"Canvas\"}}{{/crossLink}} resizes. Also fires that event as soon as this ````autoBoundary````\nproperty is changed.\n\nFires a {{#crossLink \"Viewport/autoBoundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "autoBoundary",
            "default": "false",
            "type": "Boolean",
            "class": "Viewport",
            "module": "xeogl",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/viewport.js",
            "line": 162,
            "description": "Fired whenever this Viewport's {{#crossLink \"Viewport/boundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "boundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Viewport",
            "module": "xeogl",
            "submodule": "rendering"
        },
        {
            "file": "src/rendering/viewport.js",
            "line": 177,
            "description": "Fired whenever this Viewport's {{#crossLink \"autoBoundary/autoBoundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "autoBoundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Viewport",
            "module": "xeogl",
            "submodule": "rendering"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 109,
            "description": "Position of this Frustum's left plane on the View-space X-axis.\n\nFires a {{#crossLink \"Frustum/left:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "left",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 126,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/left:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 140,
            "description": "Position of this Frustum's right plane on the View-space X-axis.\n\nFires a {{#crossLink \"Frustum/right:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "right",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 157,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/right:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "right",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 171,
            "description": "Position of this Frustum's top plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Frustum/top:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "top",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 188,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/top:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "top",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 202,
            "description": "Position of this Frustum's bottom plane on the View-space Y-axis.\n\nFires a {{#crossLink \"Frustum/bottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bottom",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 219,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/bottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bottom",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 233,
            "description": "Position of this Frustum's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Frustum/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 250,
            "description": "Fired whenever this Frustum's {{#crossLink \"Frustum/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 264,
            "description": "Position of this Frustum's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Frustum/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/frustum.js",
            "line": 281,
            "description": "Fired whenever this Frustum's  {{#crossLink \"Frustum/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 102,
            "description": "Rotate 'eye' about 'look', around the 'up' vector",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 130,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 159,
            "description": "Rotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 190,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 219,
            "description": "Pans the camera along X and Y axis.",
            "params": [
                {
                    "name": "pan",
                    "description": "The pan vector"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 271,
            "description": "Increments/decrements zoom factor, ie. distance between eye and look.",
            "params": [
                {
                    "name": "delta",
                    "description": ""
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 292,
            "description": "Effectively whether Y-axis rotation is about the World-space Y-axis or the View-space Y-axis.\n\nFires a {{#crossLink \"Lookat/gimbalLockY:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "gimbalLockY",
            "default": "false",
            "type": "Boolean",
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 309,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/gimbalLockY:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "gimbalLockY",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 323,
            "description": "Position of this Lookat's eye.\n\nFires an {{#crossLink \"Lookat/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,10]",
            "type": "Float32Array",
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 341,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "eye",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 355,
            "description": "Position of this Lookat's point-of-interest.\n\nFires a {{#crossLink \"Lookat/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "Float32Array",
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 373,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "look",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 387,
            "description": "Direction of the \"up\" vector.\nFires an {{#crossLink \"Lookat/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "Float32Array",
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 403,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "up",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/lookat.js",
            "line": 417,
            "description": "Distance from \"look\" to \"eye\".",
            "itemtype": "property",
            "name": "eyeLookDist",
            "type": "Number",
            "class": "Lookat",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 115,
            "description": "Scale factor for this Ortho's extents on X and Y axis.\n\nFires a {{#crossLink \"Ortho/scale:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "scale",
            "default": "1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 132,
            "description": "Fired whenever this Ortho's {{#crossLink \"Ortho/scale:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "scale",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 146,
            "description": "Position of this Ortho's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Ortho/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 163,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 177,
            "description": "Position of this Ortho's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Ortho/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/ortho.js",
            "line": 194,
            "description": "Fired whenever this Ortho's {{#crossLink \"Ortho/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 101,
            "description": "The field-of-view angle (FOV).\n\nFires a {{#crossLink \"Perspective/fov:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fov",
            "default": "50.0",
            "type": "Number",
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 120,
            "description": "Fired whenever this Perspective's {{#crossLink \"Perspective/fov:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fov",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 134,
            "description": "The FOV axis.\n\nOptions are \"x\", \"y\" or \"min\", to use the minimum axis.\n\nFires a {{#crossLink \"Perspective/fov:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fov",
            "default": "\"min\"",
            "type": "String",
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 166,
            "description": "Fired whenever this Perspective's {{#crossLink \"Perspective/fovAxis:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fovAxis",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 180,
            "description": "Position of this Perspective's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Perspective/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 199,
            "description": "Fired whenever this Perspective's   {{#crossLink \"Perspective/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 212,
            "description": "Position of this Perspective's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"Perspective/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/perspective.js",
            "line": 231,
            "description": "Fired whenever this Perspective's  {{#crossLink \"Perspective/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 107,
            "description": "The quaternion elements.\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyzw",
            "default": "[0,0,0,1]",
            "type": "{Float32Array}",
            "class": "Quaternion",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 127,
            "description": "Fired whenever this Quaternion's {{#crossLink \"Quaternion/xyzw:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyzw",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Quaternion",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/quaternion.js",
            "line": 142,
            "description": "Rotates this Quaternion.\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event to notify of update to the Quaternion elements.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angleAxis",
                    "description": "Rotation in angle-axis form.",
                    "type": "Float32Array"
                }
            ],
            "class": "Quaternion",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 119,
            "description": "Vector indicating the axis of rotation.\n\nFires an {{#crossLink \"Rotate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[0,1,0]",
            "type": "{Float32Array}",
            "class": "Rotate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 136,
            "description": "Fired whenever this Rotate's {{#crossLink \"Rotate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Rotate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 150,
            "description": "Angle of rotation in degrees.\n\nFires an {{#crossLink \"Rotate/angle:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "angle",
            "default": "0",
            "type": "{Number}",
            "class": "Rotate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/rotate.js",
            "line": 167,
            "description": "Fired whenever this Rotate's {{#crossLink \"Rotate/angle:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "angle",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Rotate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/scale.js",
            "line": 114,
            "description": "Vector indicating a scale factor for each axis.\nFires an {{#crossLink \"Scale/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[1,1,1]",
            "type": "{Float32Array}",
            "class": "Scale",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/scale.js",
            "line": 129,
            "description": "Fired whenever this Scale's {{#crossLink \"Scale/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Scale",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 206,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/leafMatrix:property\"}}{{/crossLink}} property changes.\n\nThis event does not carry the updated property value. Instead, subscribers will need to read\nthat property again to get its updated value (which may be lazy-computed then).",
            "itemtype": "event",
            "name": "updated",
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 274,
            "description": "The parent Transform.\n\nFires a {{#crossLink \"Transform/parent:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "parent",
            "type": "Transform",
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 310,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "parent",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 330,
            "description": "Flag that indicates whether this Transform is post-multiplied (default) or pre-multiplied by\nits {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} Transform.\n\nFires an {{#crossLink \"Transform/postMultiply:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "postMultiply",
            "default": "true",
            "type": "Boolean",
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 358,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/postMultiply:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "postMultiply",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 371,
            "description": "The Transform's local matrix.\n\nFires a {{#crossLink \"Transform/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Float32Array}",
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 390,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/transform.js",
            "line": 410,
            "description": "Returns the product of all {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}}'s on Transforms\non the path via {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} up to the root.\n\nThe value of this property will have a fresh value after each\n{{#crossLink \"Transform/updated:property\"}}{{/crossLink}} event, which is fired whenever any Transform\non the path receives an update for its {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} or\n{{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} property.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Float32Array}",
            "class": "Transform",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/translate.js",
            "line": 115,
            "description": "Vector indicating a translation amount for each axis.\nFires an {{#crossLink \"Translate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "Translate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/transforms/translate.js",
            "line": 130,
            "description": "Fired whenever this Translate's {{#crossLink \"Translate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "Translate",
            "module": "xeogl",
            "submodule": "transforms"
        },
        {
            "file": "src/component.js",
            "line": 197,
            "description": "The parent {{#crossLink \"Scene\"}}{{/crossLink}} that contains this Component.",
            "itemtype": "property",
            "name": "scene",
            "type": "{Scene}",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 256,
            "description": "Arbitrary, user-defined metadata on this component.",
            "itemtype": "property",
            "name": "metadata",
            "type": "Object",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 264,
            "description": "Indicates whether this is one of the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s built-in Components.",
            "itemtype": "property",
            "name": "isDefault",
            "type": "Boolean",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 272,
            "description": "Unique ID for this Component within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 281,
            "description": "True as soon as this Component has been destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 327,
            "description": "JavaScript class name for this Component.\n\nThis is used when <a href=\"Scene.html#savingAndLoading\">loading Scenes from JSON</a>, and is included in the JSON\nrepresentation of this Component, so that this class may be instantiated when loading it from the JSON representation.\n\nFor example: \"xeogl.AmbientLight\", \"xeogl.ColorTarget\", \"xeogl.Lights\" etc.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 341,
            "description": "An array of strings that indicates the chain of super-types within this component's inheritance hierarchy.\n\nFor example, if this component is a {{#crossLink \"Rotate\"}}{{/crossLink}}, which\nextends {{#crossLink \"Transform\"}}{{/crossLink}}, which in turn extends {{#crossLink \"Component\"}}{{/crossLink}},\nthen this property will have the value:\n\n````json\n[\"xeogl.Component\", \"xeogl.Transform\"]\n````\n\nNote that the chain is ordered downwards in the hierarchy, ie. from super-class down towards sub-class.",
            "itemtype": "property",
            "name": "superTypes",
            "type": "{Array of String}",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 360,
            "description": "Tests if this component is of the given type, or is a subclass of the given type.\n\nThe type may be given as either a string or a component constructor.\n\nThis method works by walking up the inheritance type chain, which this component provides in\nproperty {{#crossLink \"Component/superTypes:property\"}}{{/crossLink}}, returning true as soon as one of the type strings in\nthe chain matches the given type, of false if none match.\n\n#### Examples:\n\n````javascript\nvar myRotate = new xeogl.Rotate({ ... });\n\nmyRotate.isType(xeogl.Component); // Returns true for all xeogl components\nmyRotate.isType(\"xeogl.Component\"); // Returns true for all xeogl components\nmyRotate.isType(xeogl.Rotate); // Returns true\nmyRotate.isType(xeogl.Transform); // Returns true\nmyRotate.isType(\"xeogl.Transform\"); // Returns true\nmyRotate.isType(xeogl.Entity); // Returns false, because xeogl.Rotate does not (even indirectly) extend xeogl.Entity\n````",
            "itemtype": "method",
            "name": "isType",
            "params": [
                {
                    "name": "type",
                    "description": "Component type to compare with, eg \"xeogl.PhongMaterial\", or a xeogl component constructor.",
                    "type": "String|Function"
                }
            ],
            "return": {
                "description": "True if this component is of given type or is subclass of the given type.",
                "type": "Boolean"
            },
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 401,
            "description": "Initializes this component",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 409,
            "description": "Fires an event on this component.\n\nNotifies existing subscribers to the event, optionally retains the event to give to\nany subsequent notifications on the event as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event parameters",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 458,
            "description": "Subscribes to an event on this component.\n\nThe callback is be called with this component as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called fired on the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 501,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Component/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Component/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 526,
            "description": "Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is handled.\n\nThis is equivalent to calling {{#crossLink \"Component/on:method\"}}{{/crossLink}}, and then calling\n{{#crossLink \"Component/off:method\"}}{{/crossLink}} inside the callback function.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 547,
            "description": "Returns true if there are any subscribers to the given event on this component.",
            "itemtype": "method",
            "name": "hasSubs",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if there are any subscribers to the given event on this component.",
                "type": "Boolean"
            },
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 558,
            "description": "Logs a console debugging message for this component.\n\nThe console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/log:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 583,
            "description": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/warn:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 603,
            "description": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n\nAlso fires the message as an {{#crossLink \"Scene/error:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 623,
            "description": "Creates a clone of this component.\n\nThe clone will have the same properties as the original, except where\noverridden in the given optional configs.\n\nThe clone will share (by reference) the components of the original, unless overridden.\n\nFor example, if this component is an {{#crossLink \"Entity\"}}{{/crossLink}}, then the clone\nwill be attached to the **same** instances of {{#crossLink \"PhoneMaterial\"}}{{/crossLink}},\n{{#crossLink \"Camera\"}}{{/crossLink}} etc as this component, unless it supplies its own\ninstances for those via the configs.",
            "params": [
                {
                    "name": "cfg",
                    "description": "Configurations to override.",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "The shallow clone",
                "type": "Component"
            },
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 655,
            "description": "Adds a child component to this.\nWhen component not given, attaches the scene's default instance for the given name (if any).\nPublishes the new child component on this component, keyed to the given name.",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "*",
                    "props": [
                        {
                            "name": "name",
                            "description": "component name",
                            "type": "String"
                        },
                        {
                            "name": "component",
                            "description": "The component",
                            "type": "Component",
                            "optional": true
                        },
                        {
                            "name": "type",
                            "description": "Optional expected type of base type of the child; when supplied, will\ncause an exception if the given child is not the same type or a subtype of this.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "sceneDefault",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sceneSingleton",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "onAttached",
                            "description": "Optional callback called when component attached",
                            "type": "Function",
                            "optional": true,
                            "props": [
                                {
                                    "name": "callback",
                                    "description": "Callback function",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "scope",
                                    "description": "Optional scope for callback",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "onDetached",
                            "description": "Optional callback called when component is detached",
                            "type": "Function",
                            "optional": true,
                            "props": [
                                {
                                    "name": "callback",
                                    "description": "Callback function",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "scope",
                                    "description": "Optional scope for callback",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "recompiles",
                            "description": "When true, fires \"dirty\" events on this component",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "}",
                    "description": "[params.on] Callbacks to subscribe to properties on component",
                    "type": "String:Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 920,
            "description": "Convenience method for creating a Component within this Component's {{#crossLink \"Scene\"}}{{/crossLink}}.\n\nYou would typically use this method to conveniently instantiate components that you'd want to\nshare (ie. \"instance\") among your {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe method is given a component type, configuration and optional instance ID, like so:\n\n````javascript\nvar material = myComponent.create({\n     type: \"xeogl.PhongMaterial\",\n     diffuse: [1,0,0],\n     specular: [1,1,0]\n}, \"myMaterial\");\n````\n\nThe first time you call this method for the given ````type```` and ````instanceId````, this method will create the\n{{#crossLink \"PhongMaterial\"}}{{/crossLink}}, passing the given  attributes to the component's constructor.\n\nIf you call this method again, specifying the same ````type```` and ````instanceId````, the method will return the same\ncomponent instance that it returned the first time, and will ignore the new configuration:\n\n````javascript\nvar material2 = component.create({ type: \"xeogl.PhongMaterial\", specular: [1,1,0] }, \"myMaterial\");\n````\n\nSo in this example, our {{#crossLink \"PhongMaterial\"}}{{/crossLink}} will continue to have the red specular\nand diffuse color that we specified the first time.\n\nEach time you call this method with the same ````type```` and ````instanceId````, the Scene will internally increment a\nreference count for the component instance.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "cfg",
                    "description": "Configuration for the component instance - only used if this is the first time you are getting\nthe component, ignored when reusing an existing instance.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "instanceId",
                    "description": "Identifies the shared component instance. Note that this is not used as the ID of the\ncomponent - you can specify the component ID in the ````cfg```` parameter.",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 991,
            "description": "Protected method, called by sub-classes to queue a call to _update().",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "priority",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1007,
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1019,
            "description": "Protected virtual template method, optionally implemented\nby sub-classes to perform a scheduled task.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1027,
            "description": "Protected template method, implemented by sub-classes to compile\ntheir state into their Scene's xeogl.renderer.Renderer.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1038,
            "description": "JSON object containing the state of this Component.",
            "itemtype": "property",
            "name": "json",
            "type": "JSON",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1065,
            "description": "String containing the serialized JSON state of this Component.",
            "itemtype": "property",
            "name": "string",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1147,
            "description": "Experimental: string containing a JavaScript expression that would instantiate this Component.",
            "itemtype": "property",
            "name": "string",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1162,
            "description": "Destroys this component.\n\nFires a {{#crossLink \"Component/destroyed:event\"}}{{/crossLink}} event on this Component.\n\nAutomatically disassociates this component from other components, causing them to fall back on any\ndefaults that this component overrode on them.\n\nTODO: describe effect with respect to #create",
            "itemtype": "method",
            "name": "destroy",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1236,
            "description": "Fired when this Component is destroyed.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/component.js",
            "line": 1244,
            "description": "Protected template method, implemented by sub-classes\nto clean up just before the component is destroyed.",
            "access": "protected",
            "tagname": "",
            "class": "Component",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 189,
            "description": "Fired whenever a debug message logged on a component within this Scene.",
            "itemtype": "event",
            "name": "log",
            "params": [
                {
                    "name": "value",
                    "description": "The debug message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 195,
            "description": "Fired whenever an error is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "value",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 201,
            "description": "Fired whenever a warning is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "warn",
            "params": [
                {
                    "name": "value",
                    "description": "The warning message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 216,
            "description": "The epoch time (in milliseconds since 1970) when this Scene was instantiated.",
            "itemtype": "property",
            "name": "timeCreated",
            "type": "{Number}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 224,
            "description": "The {{#crossLink \"Component\"}}Component{{/crossLink}}s within\nthis Scene, mapped to their IDs.\n\nWill also contain the {{#crossLink \"Entity\"}}{{/crossLink}}s\ncontained in {{#crossLink \"Entity/components:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "components",
            "type": "{String:xeogl.Component}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 236,
            "description": "For each {{#crossLink \"Component\"}}Component{{/crossLink}} type, a map of\nIDs to instances.",
            "itemtype": "property",
            "name": "types",
            "type": "{String:{String:xeogl.Component}}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 245,
            "description": "The {{#crossLink \"Entity\"}}{{/crossLink}}s within\nthis Scene, mapped to their IDs.\n\nThe {{#crossLink \"Entity\"}}{{/crossLink}}s in this map\nwill also be contained in {{#crossLink \"Entity/components:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "entities",
            "type": "{String:xeogl.Entity}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 257,
            "description": "The {{#crossLink \"Model\"}}{{/crossLink}}s within\nthis Scene, mapped to their IDs.",
            "itemtype": "property",
            "name": "entities",
            "type": "{String:xeogl.Model}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 278,
            "description": "Configurations for this Scene. Set whatever properties on here\nthat will be useful to the components within the Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "configs",
            "type": "{Configs}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 287,
            "description": "Manages the HTML5 canvas for this Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "canvas",
            "type": "{Canvas}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 317,
            "description": "Publishes input events that occur on this Scene's canvas.",
            "final": 1,
            "itemtype": "property",
            "name": "input",
            "type": "{Input}",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 464,
            "description": "Fired whenever a component has been created within this Scene.",
            "itemtype": "event",
            "name": "componentCreated",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was created",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 515,
            "description": "Fired whenever a component within this Scene has been destroyed.",
            "itemtype": "event",
            "name": "componentDestroyed",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was destroyed",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 550,
            "description": "Renders a single frame of this Scene.\n\nThe Scene will automatically call this method on itself to render after any updates, but you\ncan call this method to force a render if required. This method is typically used when we want\nto synchronously take a snapshot of the canvas and need everything rendered right at that moment.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "forceRender",
                    "description": "Forces a render when true, otherwise only renders if something has changed in this Scene\nsince the last render.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 581,
            "description": "Fired when about to render a frame for a Scene.",
            "itemtype": "event",
            "name": "rendering",
            "params": [
                {
                    "name": "sceneID",
                    "description": "The ID of this Scene.",
                    "type": "String"
                },
                {
                    "name": "pass",
                    "description": "Index of the pass we are about to render (see {{#crossLink \"Scene/passes:property\"}}{{/crossLink}}).",
                    "type": "Number"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 594,
            "description": "Fired when we have just rendered a frame for a Scene.",
            "itemtype": "event",
            "name": "rendering",
            "params": [
                {
                    "name": "sceneID",
                    "description": "The ID of this Scene.",
                    "type": "String"
                },
                {
                    "name": "pass",
                    "description": "Index of the pass we rendered (see {{#crossLink \"Scene/passes:property\"}}{{/crossLink}}).",
                    "type": "Number"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 608,
            "description": "The number of {{#crossLink \"Scene/tick:property\"}}{{/crossLink}} that happen between each render or this Scene.\n\nFires a {{#crossLink \"Scene/ticksPerRender:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ticksPerRender",
            "default": "1",
            "type": "Number",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 638,
            "description": "Fired whenever this Scene's {{#crossLink \"Scene/ticksPerRender:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ticksPerRender",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 652,
            "description": "The number of times this Scene renders per frame.\n\nFires a {{#crossLink \"Scene/passes:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "passes",
            "default": "1",
            "type": "Number",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 684,
            "description": "Fired whenever this Scene's {{#crossLink \"Scene/passes:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "passes",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 698,
            "description": "When doing multiple passes per frame, specifies whether to clear the\ncanvas before each pass (true) or just before the first pass (false).\n\nFires a {{#crossLink \"Scene/clearEachPass:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clearEachPass",
            "default": "false",
            "type": "Boolean",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 722,
            "description": "Fired whenever this Scene's {{#crossLink \"Scene/clearEachPass:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clearEachPass",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 737,
            "description": "The default projection transform provided by this Scene, which is\na {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nThis {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} has an\n{{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to\n\"default.project\", with all other properties set to their default\nvalues.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene\nare attached to this {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}\nby default.",
            "itemtype": "property",
            "name": "project",
            "final": 1,
            "type": "Perspective",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 765,
            "description": "The default viewing transform provided by this Scene, which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nThis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.view\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "view",
            "final": 1,
            "type": "Lookat",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 788,
            "description": "The default {{#crossLink \"Camera\"}}Camera{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Camera\"}}Camera{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.camera\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Camera\"}}Camera{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "camera",
            "final": 1,
            "type": "Camera",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 813,
            "description": "The default modelling {{#crossLink \"Transform\"}}{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Transform\"}}{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.transform\",\nwith all other properties initialised to their default values (ie. an identity matrix).\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Transform\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "transform",
            "final": 1,
            "type": "Transform",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 837,
            "description": "The default {{#crossLink \"Clips\"}}Clips{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Clips\"}}Clips{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.clips\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Clips\"}}Clips{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "clips",
            "final": 1,
            "type": "Clips",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 860,
            "description": "The default geometry provided by this Scene, which is a {{#crossLink \"BoxGeometry\"}}BoxGeometry{{/crossLink}}.\n\nThis {{#crossLink \"BoxGeometry\"}}BoxGeometry{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.geometry\".\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Geometry\"}}Geometry{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "geometry",
            "final": 1,
            "type": "BoxGeometry",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 881,
            "description": "The default {{#crossLink \"Lights\"}}Lights{{/crossLink}} provided\nby this Scene.\n\nThis {{#crossLink \"Lights\"}}Lights{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to *````\"default.lights\"````*,\nwith all other properties initialised to their default values (ie. the default set of light sources for a {{#crossLink \"Lights\"}}Lights{{/crossLink}}).\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "lights",
            "final": 1,
            "type": "Lights",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 950,
            "description": "The {{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} provided as the default material by this Scene.\n\nThis {{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.material\", with all\nother properties initialised to their default values.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"PhongMaterial\"}}PhongMaterial{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "material",
            "final": 1,
            "type": "PhongMaterial",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 974,
            "description": "The default {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.morphTargets\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "morphTargets",
            "access": "private",
            "tagname": "",
            "final": 1,
            "type": "MorphTargets",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 997,
            "description": "The default {{#crossLink \"Viewport\"}}{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Viewport\"}}{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.viewport\" and\n{{#crossLink \"Viewport/autoBoundary:property\"}}{{/crossLink}} set ````true````.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Viewport\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "viewport",
            "final": 1,
            "type": "Viewport",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1022,
            "description": "The default {{#crossLink \"Outline\"}}{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Outline\"}}{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.outline\",\na {{#crossLink \"Outline/color:property\"}}color{{/crossLink}} set to ````[1,1,0]````\na {{#crossLink \"Outline/thickness:property\"}}thickness{{/crossLink}} set to ````15````.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"Outline\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "outline",
            "final": 1,
            "type": "Outline",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1048,
            "description": "The default {{#crossLink \"XRay\"}}{{/crossLink}} provided by this Scene.\n\n{{#crossLink \"Entity\"}}Entities{{/crossLink}} within this Scene are attached to this\n{{#crossLink \"XRay\"}}{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "xray",
            "final": 1,
            "type": "XRay",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1071,
            "description": "The World-space 3D boundary of this Scene.\n\nThe {{#crossLink \"Boundary3D\"}}{{/crossLink}} will be lazy-initialized the first time\nyou reference this property, and will persist on this Scene until you\ncall {{#crossLink \"Component/destroy:method\"}}{{/crossLink}} on the {{#crossLink \"Boundary3D\"}}{{/crossLink}}\nagain. The property will then be set to a fresh {{#crossLink \"Boundary3D\"}}{{/crossLink}} instance\nnext time you reference it.\n\n<h4>Performance</h4>\n\nTo minimize performance overhead, only reference this property if you need it, and destroy\nthe {{#crossLink \"Boundary3D\"}}{{/crossLink}} as soon as you don't need it anymore.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "final": 1,
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1154,
            "description": "Attempts to pick an {{#crossLink \"Entity\"}}Entity{{/crossLink}} in this Scene.\n\nIgnores {{#crossLink \"Entity\"}}Entities{{/crossLink}} with {{#crossLink \"Entity/pickable:property\"}}pickable{{/crossLink}}\nset *false*.\n\nPicking the {{#crossLink \"Entity\"}}{{/crossLink}} at the given canvas coordinates:\n\n````javascript\nvar hit = scene.pick({\n    canvasPos: [23, 131]\n });\n\nif (hit) { // Picked an Entity\n    var entity = hit.entity;\n}\n````\n\n**Usage:**\n\nPicking the {{#crossLink \"Entity\"}}{{/crossLink}} that intersects a ray cast through the canvas:\n\n````javascript\nvar hit = scene.pick({\n    pickSurface: true,\n    canvasPos: [23, 131]\n });\n\nif (hit) { // Picked an Entity\n\n    var entity = hit.entity;\n\n    // These properties are only on the hit result when we do a ray-pick:\n\n    var primitive = hit.primitive; // Type of primitive that was picked, usually \"triangles\"\n    var primIndex = hit.primIndex; // Position of triangle's first index in the picked Entity's Geometry's indices array\n    var indices = hit.indices; // UInt32Array containing the triangle's vertex indices\n    var localPos = hit.localPos; // Float32Array containing the picked Local-space position on the triangle\n    var worldPos = hit.worldPos; // Float32Array containing the picked World-space position on the triangle\n    var viewPos = hit.viewPos; // Float32Array containing the picked View-space position on the triangle\n    var bary = hit.bary; // Float32Array containing the picked barycentric position within the triangle\n    var normal = hit.normal; // Float32Array containing the interpolated normal vector at the picked position on the triangle\n    var uv = hit.uv; // Float32Array containing the interpolated UV coordinates at the picked position on the triangle\n}\n````\n\nPicking the {{#crossLink \"Entity\"}}{{/crossLink}} that intersects an arbitrarily-aligned World-space ray:\n\n````javascript\nvar hit = scene.pick({\n    pickSurface: true,       // Picking with arbitrarily-positioned ray\n    origin: [0,0,-5],    // Ray origin\n    direction: [0,0,1]   // Ray direction\n});\n\nif (hit) { // Picked an Entity with the ray\n\n    var entity = hit.entity;\n\n    var primitive = hit.primitive; // Type of primitive that was picked, usually \"triangles\"\n    var primIndex = hit.primIndex; // Position of triangle's first index in the picked Entity's Geometry's indices array\n    var indices = hit.indices; // UInt32Array containing the triangle's vertex indices\n    var localPos = hit.localPos; // Float32Array containing the picked Local-space position on the triangle\n    var worldPos = hit.worldPos; // Float32Array containing the picked World-space position on the triangle\n    var viewPos = hit.viewPos; // Float32Array containing the picked View-space position on the triangle\n    var bary = hit.bary; // Float32Array containing the picked barycentric position within the triangle\n    var normal = hit.normal; // Float32Array containing the interpolated normal vector at the picked position on the triangle\n    var uv = hit.uv; // Float32Array containing the interpolated UV coordinates at the picked position on the triangle\n    var origin = hit.origin; // Float32Array containing the World-space ray origin\n    var direction = hit.direction; // Float32Array containing the World-space ray direction\n}\n````",
            "itemtype": "method",
            "name": "pick",
            "params": [
                {
                    "name": "params",
                    "description": "Picking parameters.",
                    "type": "*",
                    "props": [
                        {
                            "name": "pickSurface",
                            "description": "Whether to find the picked position on the surface of the Entity.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "canvasPos",
                            "description": "Canvas-space coordinates. When ray-picking, this will override the\n**origin** and ** direction** parameters and will cause the ray to be fired through the canvas at this position,\ndirectly along the negative View-space Z-axis.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "World-space ray origin when ray-picking. Ignored when canvasPos given.",
                            "type": "Float32Array",
                            "optional": true
                        },
                        {
                            "name": "direction",
                            "description": "World-space ray direction when ray-picking. Also indicates the length of the ray. Ignored when canvasPos given.",
                            "type": "Float32Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Hit record, returned when an {{#crossLink \"Entity\"}}{{/crossLink}} is picked, else null. See\nmethod comments for description.",
                "type": "*"
            },
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1477,
            "description": "Resets this Scene to its default state.\n\nReferences to any components in this Scene will become invalid.",
            "itemtype": "method",
            "name": "clear",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1503,
            "description": "Convenience method for creating or reusing a Component within this Scene.\n\nYou would typically use this method to conveniently instantiate components that you'd want to\nshare (ie. \"instance\") among your {{#crossLink \"Entity\"}}Entities{{/crossLink}}.\n\nThe method is given a component type, share ID and constructor attributes, like so:\n\n````javascript\nvar material = myScene.getComponent(\"xeogl.PhongMaterial\", \"myMaterial\", { diffuse: [1,0,0] });\n````\n\nThe first time you call this method for the given ````type```` and ````instanceId````, this method will create the\n{{#crossLink \"PhongMaterial\"}}{{/crossLink}}, passing the given  attributes to the component's constructor.\n\nIf you call this method again, specifying the same ````type```` and ````instanceId````, the method will return the same\ncomponent instance that it returned the first time, and will ignore the attributes:\n\n````javascript\nvar material2 = myScene.getComponent(\"xeogl.PhongMaterial\", \"myMaterial\", { specular: [1,1,0] });\n````\n\nEach time you call this method with the same ````type```` and ````instanceId````, the Scene will internally increment a\nreference count for the component instance. You can release the shared component instance with a call to\n{{#crossLink \"Scene/putSharedComponent:method\"}}{{/crossLink}}, and once you have released it as many\ntimes as you got it, the Scene will destroy the component.",
            "itemtype": "method",
            "name": "_getSharedComponent",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cfg",
                    "description": "Attributes for the component instance - only used if this is the first time you are getting\nthe component, ignored when reusing an existing shared component.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "instanceId",
                    "description": "Identifies the shared component instance. Note that this is not used as the ID of the\ncomponent - you can specify the component ID in the ````cfg```` parameter.",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1617,
            "description": "Releases a shared component instance that was got earlier\nwith {{#crossLink \"Scene/getSharedComponent:method\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "component",
                    "description": "The shared component instance.",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/scene.js",
            "line": 1645,
            "description": "Compiles and renders this Scene",
            "access": "private",
            "tagname": "",
            "class": "Scene",
            "module": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 61,
            "description": "Semantic version number. The value for this is set by an expression that's concatenated to\nthe end of the built binary by the xeogl build script.",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 70,
            "description": "Information about available WebGL support",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 126,
            "description": "Tracks statistics within xeogl, such as numbers of\nscenes, textures, geometries etc.",
            "final": 1,
            "itemtype": "property",
            "name": "stats",
            "type": "{*}",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 187,
            "description": "Existing {{#crossLink \"Scene\"}}Scene{{/crossLink}}s , mapped to their IDs",
            "itemtype": "property",
            "name": "scenes",
            "type": "{{String:xeogl.Scene}}",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 198,
            "description": "For each component type, a list of its supertypes, ordered upwards in the hierarchy.",
            "type": "{{}}",
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 302,
            "description": "Fired on each game loop iteration.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "sceneID",
                    "description": "The ID of this Scene.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "The time in seconds since 1970 that this Scene was instantiated.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The time in seconds since 1970 of this \"tick\" event.",
                    "type": "Number"
                },
                {
                    "name": "prevTime",
                    "description": "The time of the previous \"tick\" event from this Scene.",
                    "type": "Number"
                },
                {
                    "name": "deltaTime",
                    "description": "The time in seconds since the previous \"tick\" event from this Scene.",
                    "type": "Number"
                }
            ],
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 358,
            "description": "The default {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nComponents created without an explicit parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will be created within this\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} by default.\n\nxeogl creates the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} as soon as you either\nreference this property for the first time, or create your first {{#crossLink \"Entity\"}}Entity{{/crossLink}} without\na specified {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "scene",
            "final": 1,
            "type": "Scene",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 387,
            "description": "Registers a scene on xeogl.\nThis is called within the xeogl.Scene constructor.",
            "itemtype": "method",
            "name": "_addScene",
            "params": [
                {
                    "name": "scene",
                    "description": "The scene",
                    "type": "Scene"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 442,
            "description": "Schedule a task for xeogl to run at the next frame.\n\nInternally, this pushes the task to a FIFO queue. Within each frame interval, xeogl processes the queue\nfor a certain period of time, popping tasks and running them. After each frame interval, tasks that did not\nget a chance to run during the task are left in the queue to be run next time.",
            "itemtype": "method",
            "name": "scheduleTask",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback that runs the task.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 491,
            "description": "Destroys all user-created {{#crossLink \"Scene\"}}Scenes{{/crossLink}} and\nclears the default {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "clear",
            "demo": "foo",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 520,
            "description": "Tests if the given object is an array",
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 528,
            "description": "Tests if the given value is a string",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 538,
            "description": "Tests if the given value is a number",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 548,
            "description": "Tests if the given value is an ID",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 558,
            "description": "Tests if the given components are the same, where the components can be either IDs or instances.",
            "params": [
                {
                    "name": "c1",
                    "description": ""
                },
                {
                    "name": "c2",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 577,
            "description": "Tests if the given value is a function",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 587,
            "description": "Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 600,
            "description": "Tests if the given component type is a subtype of another component supertype.",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "superType",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"xeogl.Component\""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 630,
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 636,
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 647,
            "description": "Add non-null/defined properties of o to o2",
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 662,
            "description": "Add properties of o to o2 where undefined or null on o2",
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 677,
            "description": "Returns true if the given map is empty.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 692,
            "description": "Returns the given ID as a string, in quotes if the ID was a string to begin with.\n\nThis is useful for logging IDs.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID",
                    "type": "Number| String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "src/xeogl.js",
            "line": 705,
            "description": "Returns the concatenation of two typed arrays.",
            "params": [
                {
                    "name": "a",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*|a"
            },
            "access": "private",
            "tagname": "",
            "class": "xeogl",
            "module": "xeogl",
            "namespace": "xeogl"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 149,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled by this CameraFollowAnimation.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraFollowAnimation. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"CameraFollowAnimation/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 169,
            "description": "Fired whenever this CameraFollowAnimation's\n{{#crossLink \"CameraFollowAnimation/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 184,
            "description": "The World-space {{#crossLink \"Boundary3D\"}}{{/crossLink}} followed by this CameraFollowAnimation.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CameraFollowAnimation. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} {{#crossLink \"Scene/worldBoundary:property\"}}{{/crossLink}}\nwhen set to a null or undefined value.\n\nFires a {{#crossLink \"CameraFollowAnimation/worldBoundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "worldBoundary",
            "type": "Boundary3D",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 200,
            "description": "Fired whenever this CameraFollowAnimation's {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "worldBoundary",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 227,
            "description": "Indicates whether this CameraFollowAnimation will either fly or jump to each updated position of the\ntarget {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}}.\n\nLeave this false if the worldBoundary updates continuously, otherwise leave it true\nif you want the camera to fly smoothly to each updated worldBoundary extents\nfor a less disorientating experience.\n\nFires a {{#crossLink \"CameraFollowAnimation/fly:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fly",
            "type": "Boolean",
            "default": "false",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 247,
            "description": "Fired whenever this CameraFollowAnimation's\n{{#crossLink \"CameraFollowAnimation/fly:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fly",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 262,
            "description": "When true, will ensure that this CameraFollowAnimation always adjusts the distance between the {{#crossLink \"CameraFollowAnimation/camera:property\"}}\ncamera{{/crossLink}}'s {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}} and {{#crossLink \"Lookat/look:property\"}}{{/crossLink}}\npositions so as to ensure that the {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}}\nis always filling the view volume.\n\nWhen false, the eye will remain at its current distance from the look position.\n\nFires a {{#crossLink \"CameraFollowAnimation/fit:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fit",
            "type": "Boolean",
            "default": "true",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 284,
            "description": "Fired whenever this CameraFollowAnimation's\n{{#crossLink \"CameraFollowAnimation/fit:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fit",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 298,
            "description": "When {{#crossLink \"CameraFollowAnimation/fit:property\"}}{{/crossLink}} is set, to fit the target\n{{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}} in view, this property indicates how much\nof the total field-of-view, in degrees, that\nthe {{#crossLink \"CameraFollowAnimation/worldBoundary:property\"}}{{/crossLink}} should fill.\n\nFires a {{#crossLink \"cameraFlightAnimation/fitFOV:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fitFOV",
            "default": "45",
            "type": "Number",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 318,
            "description": "Fired whenever this CameraFollowAnimation's\n{{#crossLink \"CameraFollowAnimation/fitFOV:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fitFOV",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 333,
            "description": "When true, will cause this CameraFollowAnimation to point the {{#crossLink \"CameraFollowAnimation/camera:property\"}}{{/crossLink}}\nin the direction that it is travelling.\n\nFires a {{#crossLink \"CameraFollowAnimation/trail:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "trail",
            "type": "Boolean",
            "default": "false",
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraFollowAnimation.js",
            "line": 349,
            "description": "Fired whenever this CameraFollowAnimation's {{#crossLink \"CameraFollowAnimation/trail:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "trail",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraFollowAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 27,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 51,
            "description": "The frames set on the constructor and added with {{#crossLink \"CameraPath/addFrame:method\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "frames",
            "type": "{[]}",
            "final": 1,
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 65,
            "description": "The {{#crossLink \"SplineCurve\"}}{{/crossLink}} which defines the path along which a\n{{#crossLink \"Camera/property:eye\"}}Camera's eye position{{/crossLink}} travels.\n\nThis property is read-only and is internally created and destroyed by this CameraPath.",
            "itemtype": "property",
            "name": "eyeCurve",
            "type": "{SplineCurve}",
            "final": 1,
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 82,
            "description": "The {{#crossLink \"SplineCurve\"}}{{/crossLink}} which defines the path along which a\n{{#crossLink \"Camera/property:eye\"}}Camera's look position{{/crossLink}} travels.\n\nThis property is read-only and is internally created and destroyed by this CameraPath.",
            "itemtype": "property",
            "name": "lookCurve",
            "type": "{SplineCurve}",
            "final": 1,
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 99,
            "description": "The {{#crossLink \"SplineCurve\"}}{{/crossLink}} which defines the path along which a\n{{#crossLink \"Camera/property:up\"}}Camera's up vector{{/crossLink}} travels.\n\nThis property is read-only and is internally created and destroyed by this CameraPath.",
            "itemtype": "property",
            "name": "upCurve",
            "type": "{SplineCurve}",
            "final": 1,
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 117,
            "description": "Adds a frame to this CameraPath, given as the current position of a {{#crossLink \"Camera\"}}{{/crossLink}}.\n\nThe {{#crossLink \"Camera/property:view\"}}Camera's view transform{{/crossLink}} must be a {{#crossLink \"Lookat\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant for the new frame.",
                    "type": "Number"
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}}.",
                    "type": "Camera"
                }
            ],
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 144,
            "description": "Adds a frame to this CameraPath, specified as values for eye, look and up vectors at a given time instant.",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant for the new frame;",
                    "type": "Number"
                },
                {
                    "name": "eye",
                    "description": "A three-element vector specifying the eye position for the new frame.",
                    "type": "Float32Array"
                },
                {
                    "name": "look",
                    "description": "A three-element vector specifying the look position for the new frame.",
                    "type": "Float32Array"
                },
                {
                    "name": "up",
                    "description": "A three-element vector specifying the up vector for the new frame.",
                    "type": "Float32Array"
                }
            ],
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 165,
            "description": "Adds multiple frames to this CameraPath, each frame specified as a set of values for eye, look and up\nvectors at a given time instant.",
            "params": [
                {
                    "name": "frames",
                    "description": "An array of frames.",
                    "type": "Array"
                }
            ],
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 179,
            "description": "Sets the position of a {{#crossLink \"Camera\"}}{{/crossLink}} to a position interpolated within this CameraPath\nat the given time instant.",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant.",
                    "type": "Number"
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to update.",
                    "type": "Camera"
                }
            ],
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 212,
            "description": "Gets eye, look and up vectors on this CameraPath at a given instant.",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant.",
                    "type": "Number"
                },
                {
                    "name": "eye",
                    "description": "The eye position to update.",
                    "type": "Float32Array"
                },
                {
                    "name": "look",
                    "description": "The look position to update.",
                    "type": "Float32Array"
                },
                {
                    "name": "up",
                    "description": "The up vector to update.",
                    "type": "Float32Array"
                }
            ],
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPath.js",
            "line": 227,
            "description": "Removes all frames from this CameraPath.",
            "class": "CameraPath",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 155,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 250,
            "description": "The {{#crossLink \"CameraPath\"}}{{/crossLink}} for this CameraPathAnimation.\n\nFires a {{#crossLink \"CameraPathAnimation/cameraPath:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "cameraPath",
            "type": "CameraPath",
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 274,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} for this CameraPathAnimation.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/camera:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"CameraPathAnimation/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 289,
            "description": "Fired whenever this CameraPathAnimation's {{#crossLink \"CameraPathAnimation/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 302,
            "description": "The rate at which this CameraPathAnimation plays.",
            "itemtype": "property",
            "name": "rate",
            "type": "Number",
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 320,
            "description": "Begins playing this CameraPathAnimation from the current time.",
            "itemtype": "method",
            "name": "play",
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 333,
            "description": "Begins playing this CameraPathAnimation from the current time to the given time.",
            "itemtype": "method",
            "name": "playToT",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant.",
                    "type": "Number"
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 354,
            "description": "Begins playing this CameraPathAnimation from the current time to the time at the given frame.",
            "itemtype": "method",
            "name": "playToFrame",
            "params": [
                {
                    "name": "frameIdx",
                    "description": "Index of the frame to play to.",
                    "type": "Number"
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 380,
            "description": "Flies this CameraPathAnimation's {{#crossLink \"Camera\"}}{{/crossLink}} to the time at the given frame.",
            "itemtype": "method",
            "name": "flyToFrame",
            "params": [
                {
                    "name": "frameIdx",
                    "description": "Index of the frame to play to.",
                    "type": "Number"
                },
                {
                    "name": "ok",
                    "description": "Callback to fire when playing is complete.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 406,
            "description": "Scrubs (sets) this CameraPathAnimation to the the given time.",
            "itemtype": "method",
            "name": "scrubToT",
            "params": [
                {
                    "name": "t",
                    "description": "Time instant.",
                    "type": "Number"
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 433,
            "description": "Scrubs this CameraPathAnimation to the given frame.",
            "itemtype": "method",
            "name": "scrubToFrame",
            "params": [
                {
                    "name": "frameIdx",
                    "description": "Index of the frame to scrub to.",
                    "type": "Number"
                }
            ],
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/animation/cameraPathAnimation.js",
            "line": 467,
            "description": "Stops playing this CameraPathAnimation.",
            "itemtype": "method",
            "name": "stop",
            "class": "CameraPathAnimation",
            "module": "xeogl",
            "submodule": "animation"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 249,
            "description": "Fired whenever the mouse is clicked on this Annotation's {{#crossLink \"Annotation/pin:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "pinClicked",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 259,
            "description": "Short piece of text to show inside the pin for the Annotation.\n\nUsually this would be a single number or letter.\n\nAutomatically truncated to 2 characters.\n\nFires a {{#crossLink \"Annotation/glyph:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "glyph",
            "default": "\"\"",
            "type": "{String}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 282,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/glyph:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "glyph",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 295,
            "description": "Title text for the Annotation's label.\n\nAutomatically truncated to 64 characters.\n\nFires a {{#crossLink \"Annotation/title:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "title",
            "default": "\"\"",
            "type": "{String}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 316,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/title:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "title",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 329,
            "description": "Description text for the Annotation's label.\n\nAutomatically truncated to 1025 characters.\n\nFires a {{#crossLink \"Annotation/desc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "desc",
            "default": "\"\"",
            "type": "{String}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 350,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/desc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "desc",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 363,
            "description": "Position of the eye when looking at the Annotation.\n\nFires a {{#crossLink \"Annotation/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,10]",
            "type": "{Float32Array}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 383,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/eye:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "eye",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 396,
            "description": "Point-of-interest when looking at the Annotation.\n\nFires a {{#crossLink \"Annotation/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 416,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "look",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 429,
            "description": "\"Up\" vector when looking at the Annotation.\n\nFires a {{#crossLink \"Annotation/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "{Float32Array}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 449,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/up:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "up",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 462,
            "description": "Specifies whether a UI element is shown at the Annotation's pin position (typically a circle).\n\nFires a {{#crossLink \"Annotation/pinShown:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pinShown",
            "default": "true",
            "type": "{Boolean}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 484,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/pinShown:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pinShown",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 497,
            "description": "Specifies whether the label is shown for the Annotation.\n\nFires a {{#crossLink \"Annotation/labelShown:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "labelShown",
            "default": "true",
            "type": "{Boolean}",
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/annotation.js",
            "line": 518,
            "description": "Fired whenever this Annotation's {{#crossLink \"Annotation/labelShown:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "labelShown",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Annotation",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 289,
            "description": "The {{#crossLink \"Entity\"}}{{/crossLink}} this Pin is attached to.\n\nYou can attach a Pin to a different {{#crossLink \"Entity\"}}{{/crossLink}} at any time.\n\nNote that {{#crossLink \"Pin/primIndex:property\"}}{{/crossLink}} should always\nbe within the {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} of the {{#crossLink \"Geometry\"}}{{/crossLink}} belonging to the {{#crossLink \"Entity\"}}Entity{{/crossLink}}.\n\nFires an {{#crossLink \"Pin/entity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "entity",
            "type": "{Number | String | xeogl.Entity}",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 306,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/entity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "entity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 326,
            "description": "Index of the triangle containing this pin.\n\nWithin the {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} of the {{#crossLink \"Geometry\"}}{{/crossLink}} attached to the {{#crossLink \"Entity\"}}{{/crossLink}}, this is the index of the first element for that triangle.\n\nFires a {{#crossLink \"Pin/primIndex:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "primIndex",
            "default": "0",
            "type": "Number",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 351,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/primIndex:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "primIndex",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 365,
            "description": "Barycentric coordinates of this Pin within its triangle.\n\nA value of ````[0.3, 0.3, 0.3]```` is the center of the triangle.\n\nFires a {{#crossLink \"Pin/bary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bary",
            "default": "[0.3,0.3,0.3]",
            "type": "Float32Array",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 382,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/bary:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bary",
            "params": [
                {
                    "name": "value",
                    "description": "Float32Array The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 395,
            "description": "How far the Pin is lifted out of its triangle, along the surface normal vector.\n\nThis is used when occlusion culling, to ensure that the Pin is not lost inside\nthe surface it's attached to.\n\nFires a {{#crossLink \"Pin/offset:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "offset",
            "default": "0.2",
            "type": "Number",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 413,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/offset:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "offset",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 427,
            "description": "Indicates whether occlusion testing is performed for this Pin.\n\nWhen this is true, then {{#crossLink \"Pin/visible:property\"}}{{/crossLink}} will\nbe false whenever the Pin is hidden behind something else in the 3D view.\n\nSet this false if the Pin is to remain visible when hidden behind things while\nbeing within the canvas.\n\nFires a {{#crossLink \"Pin/occludable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "occludable",
            "default": "false",
            "type": "Float32Array",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 466,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/occludable:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "occludable",
            "params": [
                {
                    "name": "value",
                    "description": "Float32Array The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 479,
            "description": "Local-space 3D coordinates of this Pin.\n\nThis is read-only and is automatically calculated.\n\nFires a {{#crossLink \"Pin/localPos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "localPos",
            "default": "[0,0,0]",
            "type": "Float32Array",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 499,
            "description": "World-space 3D coordinates of this Pin.\n\nThis is read-only and is automatically calculated.\n\nFires a {{#crossLink \"Pin/worldPos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "worldPos",
            "default": "[0,0,0]",
            "type": "Float32Array",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 519,
            "description": "View-space 3D coordinates of this Pin.\n\nThis is read-only and is automatically calculated.",
            "itemtype": "property",
            "name": "viewPos",
            "default": "[0,0]",
            "type": "Float32Array",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 538,
            "description": "Canvas-space 2D coordinates of this Pin.\n\nThis is read-only and is automatically calculated.",
            "itemtype": "property",
            "name": "canvasPos",
            "default": "[0,0]",
            "type": "Float32Array",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 571,
            "description": "World-space normal vector of this Pin.\n\nThis is read-only and is automatically calculated.\n\nFires a {{#crossLink \"Pin/worldNormal:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "worldNormal",
            "default": "[0,0,1]",
            "type": "Float32Array",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 591,
            "description": "Indicates if this Pin is currently visible.\n\nThis is read-only and is automatically calculated.\n\nThe Pin is invisible whenever:\n\n* {{#crossLink \"Pin/canvasPos:property\"}}{{/crossLink}} is currently outside the canvas, or\n* {{#crossLink \"Pin/occludable:property\"}}{{/crossLink}} is true and the Pin is currently occluded by something in the 3D view.\n\nFires a {{#crossLink \"Pin/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "final": 1,
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 663,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/localPos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "localPos",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 672,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/worldPos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "worldPos",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 678,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/worldNormal:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "worldNormal",
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/pin.js",
            "line": 787,
            "description": "Fired whenever this Pin's {{#crossLink \"Pin/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "Float32Array The property's new value"
                }
            ],
            "class": "Pin",
            "module": "xeogl",
            "submodule": "annotations"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 134,
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 259,
            "description": "Origin Pin.\nFires an {{#crossLink \"Region/origin:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "origin",
            "type": "{Pin}",
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 272,
            "description": "Target Pin.\nFires an {{#crossLink \"Region/target:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "target",
            "type": "{Pin}",
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 285,
            "description": "Length of this Region.\nFires an {{#crossLink \"Region/dist:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dist",
            "default": "0",
            "type": "{Number}",
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 299,
            "description": "Indicates whether this Region is visible or not.\n\nFires a {{#crossLink \"Region/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/region.js",
            "line": 323,
            "description": "Fired whenever this helper's {{#crossLink \"Region/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Region",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 147,
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 286,
            "description": "Origin Pin.\nFires an {{#crossLink \"Ruler/origin:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "origin",
            "type": "{Pin}",
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 299,
            "description": "Target Pin.\nFires an {{#crossLink \"Ruler/target:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "target",
            "type": "{Pin}",
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 312,
            "description": "Length of this Ruler.\nFires an {{#crossLink \"Ruler/dist:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dist",
            "default": "0",
            "type": "{Number}",
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 326,
            "description": "Indicates whether this Ruler is visible or not.\n\nFires a {{#crossLink \"Ruler/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/annotations/ruler.js",
            "line": 350,
            "description": "Fired whenever this helper's {{#crossLink \"Ruler/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Ruler",
            "module": "xeogl"
        },
        {
            "file": "examples/js/controls/BIMPickingControl.js",
            "line": 1,
            "description": "Mouse picking control.",
            "params": [
                {
                    "name": "viewer",
                    "description": ""
                },
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "MousePickControl",
            "module": "xeogl"
        },
        {
            "file": "examples/js/controls/BIMPickingControl.js",
            "line": 168,
            "description": "Subscribes to an event on this BIMPickingControl.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "The event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called fired on the event",
                    "type": "Function"
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl"
        },
        {
            "file": "examples/js/controls/BIMPickingControl.js",
            "line": 183,
            "description": "Fires an event on this BIMPickingControl.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event parameters",
                    "type": "Object"
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl"
        },
        {
            "file": "examples/js/controls/bimCameraControl.js",
            "line": 5,
            "description": "Controls camera with mouse and keyboard, handles selection of entities and rotation point.",
            "class": "MousePickControl",
            "module": "xeogl"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 28,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 79,
            "description": "Fired whenever this MousePickControl hovers off an entity.",
            "itemtype": "event",
            "name": "hoverOut",
            "params": [
                {
                    "name": "pickedEntityId",
                    "description": "The entity ID"
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 98,
            "description": "Fired whenever this MousePickControl hovers over the surface of an entity.",
            "itemtype": "event",
            "name": "hoverSurface",
            "params": [
                {
                    "name": "hit",
                    "description": ""
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 149,
            "description": "Fired whenever this MousePickControl clicks the surface of an entity.",
            "itemtype": "event",
            "name": "clickedSurface",
            "params": [
                {
                    "name": "hit",
                    "description": ""
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 160,
            "description": "Fired whenever this MousePickControl clicks empty space.",
            "itemtype": "event",
            "name": "clickedNothing",
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 189,
            "description": "Fired whenever this MousePickControl double-clicks an entity.",
            "itemtype": "event",
            "name": "clickedSurface",
            "params": [
                {
                    "name": "pickedEntityId",
                    "description": ""
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 197,
            "description": "Fired whenever this MousePickControl double-clicks an entity surface.",
            "itemtype": "event",
            "name": "clickedSurface",
            "params": [
                {
                    "name": "hit",
                    "description": ""
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 206,
            "description": "Fired whenever this MousePickControl double-clicks empty space",
            "itemtype": "event",
            "name": "doubleClickedNothing",
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 222,
            "description": "Flag which indicates whether this MousePickControl is active or not.\n\nFires an {{#crossLink \"MousePickControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/controls/mousePickControl.js",
            "line": 242,
            "description": "Fired whenever this MousePickControl's {{#crossLink \"MousePickControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePickControl",
            "module": "xeogl",
            "submodule": "controls"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 99,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} attached to this CardboardEffect.\n\nThis CardboardEffect will attach a {{#crossLink \"Frustum\"}}{{/crossLink}} to its\n{{#crossLink \"Camera\"}}{{/crossLink}} if the {{#crossLink \"Camera\"}}Camera{{/crossLink}} does not have\none already, replacing the projection transform component that was already attached.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CardboardEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 117,
            "description": "Fired whenever this CardboardEffect's {{#crossLink \"CardboardEffect/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 146,
            "description": "The {{#crossLink \"Viewport\"}}{{/crossLink}} attached to this CardboardEffect.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this CardboardEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/viewport:property\"}}Viewport{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "Viewport",
            "type": "Viewport",
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 160,
            "description": "Fired whenever this CardboardEffect's {{#crossLink \"CardboardEffect/Viewport:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "Viewport",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 182,
            "description": "fov angle in degrees.\n\nFires an {{#crossLink \"CardboardEffect/fov:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fov",
            "type": "Number",
            "default": "45",
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 203,
            "description": "Fired whenever this CardboardEffect's {{#crossLink \"CardboardEffect/fov:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fov",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 216,
            "description": "Flag which indicates whether this CardboardEffect is active or not.\n\nFires an {{#crossLink \"CardboardEffect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/cardboardEffect.js",
            "line": 239,
            "description": "Fired whenever this CardboardEffect's {{#crossLink \"CardboardEffect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CardboardEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 98,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} attached to this StereoEffect.\n\nThis StereoEffect will attach a {{#crossLink \"Frustum\"}}{{/crossLink}} to its\n{{#crossLink \"Camera\"}}{{/crossLink}} if the {{#crossLink \"Camera\"}}Camera{{/crossLink}} does not have\none already, replacing the projection transform component that was already attached.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this StereoEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 116,
            "description": "Fired whenever this StereoEffect's {{#crossLink \"StereoEffect/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 145,
            "description": "The {{#crossLink \"Viewport\"}}{{/crossLink}} attached to this StereoEffect.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this StereoEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/viewport:property\"}}Viewport{{/crossLink}} when set to\na null or undefined value.",
            "itemtype": "property",
            "name": "Viewport",
            "type": "Viewport",
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 159,
            "description": "Fired whenever this StereoEffect's {{#crossLink \"StereoEffect/Viewport:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "Viewport",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 179,
            "description": "Field-of-view angle in degrees.\n\nFires an {{#crossLink \"StereoEffect/fov:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fov",
            "type": "Number",
            "default": "45",
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 200,
            "description": "Fired whenever this StereoEffect's {{#crossLink \"StereoEffect/fov:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fov",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 213,
            "description": "Flag which indicates whether this StereoEffect is active or not.\n\nFires an {{#crossLink \"StereoEffect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/effects/stereoEffect.js",
            "line": 236,
            "description": "Fired whenever this StereoEffect's {{#crossLink \"StereoEffect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "StereoEffect",
            "module": "xeogl",
            "submodule": "effects"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 112,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 135,
            "description": "Starting point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v0",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 148,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 162,
            "description": "First control point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v1",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 175,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v1:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v1",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 189,
            "description": "Second control point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v2",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 202,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v2:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v2",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 216,
            "description": "End point on this CubicBezierCurve.\n\nFires a {{#crossLink \"CubicBezierCurve/v3:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v3",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 229,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/v3:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v3",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 243,
            "description": "Current position of progress along this CubicBezierCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"CubicBezierCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 261,
            "description": "Fired whenever this CubicBezierCurve's\n{{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 275,
            "description": "Point on this CubicBezierCurve at position {{#crossLink \"CubicBezierCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/cubicBezierCurve.js",
            "line": 289,
            "description": "Returns point on this CubicBezierCurve at the given position.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "CubicBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 34,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 50,
            "description": "Progress along this Curve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"Curve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 69,
            "description": "Fired whenever this Curve's\n{{#crossLink \"Curve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 84,
            "description": "Tangent on this Curve at position {{#crossLink \"Curve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "tangent",
            "type": "{{Array of Number}}",
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 98,
            "description": "Length of this Curve.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 112,
            "description": "Returns a normalized tangent vector on this Curve at the given position.",
            "itemtype": "method",
            "name": "getTangent",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get tangent at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Normalized tangent vector",
                "type": "Array of Number"
            },
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/curve.js",
            "line": 154,
            "description": "Samples points on this Curve, at the given number of equally-spaced divisions.",
            "itemtype": "method",
            "name": "getPoints",
            "params": [
                {
                    "name": "divisions",
                    "description": "The number of divisions.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Array of sampled 3D points.",
                "type": "Array of Array"
            },
            "class": "Curve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 122,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 156,
            "description": "Adds a {{#crossLink \"Curve\"}}{{/crossLink}} to this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "params": [
                {
                    "name": "curve",
                    "description": "The {{#crossLink \"Curve\"}}{{/crossLink}} to add.",
                    "type": "Curve"
                }
            ],
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 169,
            "description": "Fired whenever this Path's\n{{#crossLink \"Path/curves:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "curves",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 180,
            "description": "The {{#crossLink \"Curve\"}}Curves{{/crossLink}} in this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "curves",
            "default": "[]",
            "type": "{{Array of Spline, Path, QuadraticBezierCurve or CubicBezierCurve}}",
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 290,
            "description": "Current point of progress along this Path.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"Path/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 308,
            "description": "Fired whenever this Path's\n{{#crossLink \"Path/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 322,
            "description": "Point on this Path corresponding to the current value of {{#crossLink \"Path/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 335,
            "description": "Length of this Path, which is the cumulative length of all {{#crossLink \"Curve/t:property\"}}Curves{{/crossLink}}\ncurrently in {{#crossLink \"Path/curves:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/path.js",
            "line": 351,
            "description": "Gets a point on this Path corresponding to the given progress position.",
            "params": [
                {
                    "name": "t",
                    "description": "Indicates point of progress along this curve, in the range [0..1].",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "Path",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 112,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 134,
            "description": "Starting point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v0",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 147,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v0:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v0",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 161,
            "description": "Middle control point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v1",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 174,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v1:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v1",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 188,
            "description": "End point on this QuadraticBezierCurve.\n\nFires a {{#crossLink \"QuadraticBezierCurve/v2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "v2",
            "default": "[0.0, 0.0, 0.0]",
            "type": "Float32Array",
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 201,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/v2:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "v2",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 215,
            "description": "Progress along this QuadraticBezierCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"QuadraticBezierCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 233,
            "description": "Fired whenever this QuadraticBezierCurve's\n{{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 248,
            "description": "Point on this QuadraticBezierCurve at position {{#crossLink \"QuadraticBezierCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/quadraticBezierCurve.js",
            "line": 262,
            "description": "Returns point on this QuadraticBezierCurve at the given position.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "QuadraticBezierCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 111,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 131,
            "description": "Control points on this SplineCurve.\n\nFires a {{#crossLink \"SplineCurve/points:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "points",
            "default": "[]",
            "type": "Float32Array",
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 146,
            "description": "Fired whenever this SplineCurve's\n{{#crossLink \"SplineCurve/points:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "points",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 160,
            "description": "Progress along this SplineCurve.\n\nAutomatically clamps to range [0..1].\n\nFires a {{#crossLink \"SplineCurve/t:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "t",
            "default": "0",
            "type": "Number",
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 178,
            "description": "Fired whenever this SplineCurve's\n{{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "t",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 192,
            "description": "Point on this SplineCurve at position {{#crossLink \"SplineCurve/t:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "point",
            "type": "{{Array of Number}}",
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/curves/splineCurve.js",
            "line": 206,
            "description": "Returns point on this SplineCurve at the given position.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "t",
                    "description": "Position to get point at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "}",
                "type": "Array of Number"
            },
            "class": "SplineCurve",
            "module": "xeogl",
            "submodule": "curves"
        },
        {
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 95,
            "description": "Sets the shape that will be added to this GeometryBuilder on each subsequent call to {{#crossLink \"GeometryBuilder/addShape:method\"}}addShape(){{/crossLink}}.\n\nThe shape can be either a {{#crossLink \"Geometry\"}}{{/crossLink}} or a JavaScript object containing vertex and index arrays.",
            "itemtype": "method",
            "name": "setShape",
            "params": [
                {
                    "name": "shape",
                    "description": "The shape to add.",
                    "type": "Geometry|*"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "GeometryBuilder",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 109,
            "description": "Sets the modeling transform matrix to apply to each shape added with subsequent calls to {{#crossLink \"GeometryBuilder/addShape:method\"}}addShape(){{/crossLink}}.",
            "itemtype": "method",
            "name": "setMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "a 16-element transform matrix.",
                    "type": "Float32Array"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "GeometryBuilder",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 121,
            "description": "Adds a shape to this GeometryBuilder. The shape geometry is the one last added\nby {{#crossLink \"GeometryBuilder/addShape:method\"}}addShape(){{/crossLink}}, and will be transformed by the\nmatrix that was set by the last call to {{#crossLink \"GeometryBuilder/build:method\"}}setMatrix(){{/crossLink}}.\n\nA subsequent call to {{#crossLink \"GeometryBuilder/build:method\"}}build(){{/crossLink}} will add all the\naccumulated transformed shapes to a target {{#crossLink \"Geometry\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addShape",
            "return": {
                "description": "this"
            },
            "class": "GeometryBuilder",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 214,
            "description": "Adds the accumulated state from previous calls to {{#crossLink \"GeometryBuilder/setMatrix:method\"}}setMatrix(){{/crossLink}} and\n{{#crossLink \"GeometryBuilder/setShape:method\"}}setShape(){{/crossLink}} to a target {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\nRetains all that state afterwards, so that you can continue to call this method to add the state to\nother {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}.",
            "itemtype": "method",
            "name": "build",
            "params": [
                {
                    "name": "geometry",
                    "description": "The target {{#crossLink \"Geometry\"}}{{/crossLink}}.",
                    "type": "Geometry"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "GeometryBuilder",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/geometryBuilder.js",
            "line": 235,
            "description": "Resets this GeometryBuilder, clearing all the state previously accumulated with {{#crossLink \"GeometryBuilder/setMatrix:method\"}}setMatrix(){{/crossLink}} and\n {{#crossLink \"GeometryBuilder/setShape:method\"}}setShape(){{/crossLink}}.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "this"
            },
            "class": "GeometryBuilder",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/voxelGeometryBuilder.js",
            "line": 107,
            "description": "Sets the shape that the {{#crossLink \"VoxelGeometryBuilder/build:method\"}}method(){{/crossLink}} will add\nto target {{#crossLink \"Geometry\"}}Geometries{{/crossLink}} for each voxel.\n\nThe shape can be either a {{#crossLink \"Geometry\"}}{{/crossLink}} or a JavaScript object containing vertex\nand index arrays.",
            "itemtype": "method",
            "name": "setShape",
            "params": [
                {
                    "name": "shape",
                    "description": "The shape to add.",
                    "type": "Geometry|*"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/voxelGeometryBuilder.js",
            "line": 123,
            "description": "Writes a voxel.\n\nIgnored if the voxel is already written, or if the given position\nfalls outside this VoxelGeometryBuilder's voxel space extents.\n\nIt's OK to just blindly write voxels that have already been written, there is little performance penalty.",
            "itemtype": "method",
            "name": "writeVoxel",
            "params": [
                {
                    "name": "pos",
                    "description": "3D Voxel position.",
                    "type": "Float32Array"
                }
            ],
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/voxelGeometryBuilder.js",
            "line": 139,
            "description": "Clears a voxel.\n\nIgnored if the voxel is already clear, or if the given position\nfalls outside this VoxelGeometryBuilder's voxel space extents.\n\nIt's OK to just blindly clear voxels that are already clear, there is little performance penalty.",
            "itemtype": "method",
            "name": "clearVoxel",
            "params": [
                {
                    "name": "pos",
                    "description": "3D Voxel position.",
                    "type": "Float32Array"
                }
            ],
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/voxelGeometryBuilder.js",
            "line": 180,
            "description": "Loads all the voxels accumulated from previous calls to {{#crossLink \"VoxelGeometryBuilder/writeVoxel:method\"}}writeVoxel(){{/crossLink}} into\na target {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\nRetains all that state afterwards, so that you can continue to call this method to add the state to\nother {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}.",
            "itemtype": "method",
            "name": "build",
            "params": [
                {
                    "name": "geometry",
                    "description": "The target {{#crossLink \"Geometry\"}}{{/crossLink}}.",
                    "type": "Geometry"
                }
            ],
            "return": {
                "description": "this"
            },
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/generation/voxelGeometryBuilder.js",
            "line": 224,
            "description": "Resets this VoxelGeometryBuilder, clearing all the state previously accumulated with\n {{#crossLink \"VoxelGeometryBuilder/setVoxel:method\"}}setVoxel(){{/crossLink}} and\n {{#crossLink \"VoxelGeometryBuilder/setShape:method\"}}setShape(){{/crossLink}}.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "this"
            },
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "generation"
        },
        {
            "file": "examples/js/skyboxes/skybox.js",
            "line": 184,
            "description": "Size of this Skybox, given as the distance from the center at [0,0,0] to each face.\n\nFires an {{#crossLink \"Skybox/size:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "size",
            "default": "1000",
            "type": "{Number}",
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "skyboxes"
        },
        {
            "file": "examples/js/skyboxes/skybox.js",
            "line": 201,
            "description": "Fired whenever this Skybox's {{#crossLink \"Skybox/size:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "size",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "skyboxes"
        },
        {
            "file": "examples/js/skyboxes/skybox.js",
            "line": 215,
            "description": "Indicates whether this Skybox is visible or not.\n\nFires a {{#crossLink \"Skybox/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "default": "false",
            "type": "Boolean",
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "skyboxes"
        },
        {
            "file": "examples/js/skyboxes/skybox.js",
            "line": 230,
            "description": "Fired whenever this Skybox's {{#crossLink \"Skybox/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Skybox",
            "module": "xeogl",
            "submodule": "skyboxes"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 113,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 288,
            "description": "Fired whenever this HeightmapGeometry has rebuilt itself after an update to the\n{{#crossLink \"Heightmap/src:property\"}}{{/crossLink}} or {{#crossLink \"Heightmap/image:property\"}}{{/crossLink}} properties.",
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "value",
                    "description": "This Heightmap",
                    "type": "Heightmap"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 332,
            "description": "Fired whenever this Heightmap's  {{#crossLink \"Heightmap/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 373,
            "description": "The Heightmap's level-of-detail factor.\n\nFires a {{#crossLink \"Heightmap/lod:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lod",
            "default": "1",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 403,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/lod:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lod",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 417,
            "description": "Indicates an HTML DOM Image object to source this Heightmap from.\n\nAlternatively, you could indicate the source via the\n{{#crossLink \"Heightmap/src:property\"}}{{/crossLink}} property.\n\nFires an {{#crossLink \"Heightmap/image:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Heightmap/src:property\"}}{{/crossLink}} to null.",
            "itemtype": "property",
            "name": "image",
            "default": "null",
            "type": "{HTMLImageElement}",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 444,
            "description": "Fired whenever this Heightmap's  {{#crossLink \"Heightmap/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 457,
            "description": "Indicates a path to an image file to source this Heightmap from.\n\nAlternatively, you could indicate the source via the\n{{#crossLink \"Heightmap/image:property\"}}{{/crossLink}} property.\n\nFires a {{#crossLink \"Heightmap/src:event\"}}{{/crossLink}} event on change.\n\nSets the {{#crossLink \"Heightmap/image:property\"}}{{/crossLink}} to null.",
            "itemtype": "property",
            "name": "src",
            "default": "null",
            "type": "String",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 488,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 502,
            "description": "3D point indicating the center position of this HeightmapGeometry.\n\nFires an {{#crossLink \"HeightmapGeometry/center:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "center",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 527,
            "description": "Fired whenever this HeightmapGeometry's {{#crossLink \"HeightmapGeometry/center:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "center",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 540,
            "description": "The Heightmap's dimension on the X-axis.\n\nFires a {{#crossLink \"Heightmap/xSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSize",
            "default": "1",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 570,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/xSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 584,
            "description": "The Heightmap's dimension on the Y-axis.\n\nFires a {{#crossLink \"Heightmap/ySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ySize",
            "default": "0.25",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 614,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/ySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ySize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 628,
            "description": "The Heightmap's dimension (height) on the Z-axis.\n\nFires a {{#crossLink \"Heightmap/zSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSize",
            "default": "1.0",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 658,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/zSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSize",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 672,
            "description": "The Heightmap's number of segments on the X-axis.\n\nFires a {{#crossLink \"Heightmap/xSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xSegments",
            "default": "100",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 702,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/xSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 716,
            "description": "The Heightmap's number of segments on the Z-axis.\n\nFires a {{#crossLink \"Heightmap/zSegments:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "zSegments",
            "default": "100",
            "type": "Number",
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/heightmapGeometry.js",
            "line": 746,
            "description": "Fired whenever this Heightmap's {{#crossLink \"Heightmap/zSegments:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "zSegments",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "HeightmapGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/nintendo3DSGeometry.js",
            "line": 90,
            "description": "Path to the .OBJ file.\n\nFires a {{#crossLink \"Nintendo3DSGeometry/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "Nintendo3DSGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/nintendo3DSGeometry.js",
            "line": 156,
            "description": "Fired whenever this Nintendo3DSGeometry's  {{#crossLink \"Nintendo3DSGeometry/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Nintendo3DSGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/objGeometry.js",
            "line": 88,
            "description": "Path to the .OBJ file.\n\nFires a {{#crossLink \"OBJGeometry/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "OBJGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/objGeometry.js",
            "line": 172,
            "description": "Fired whenever this OBJGeometry's  {{#crossLink \"OBJGeometry/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBJGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 69,
            "description": "Implement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "access": "protected",
            "tagname": "",
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 175,
            "description": "The text for this VectorText\n\nFires a {{#crossLink \"VectorTextGeometry/text:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "text",
            "default": "\"\"",
            "type": "String",
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 198,
            "description": "Fired whenever this VectorTextGeometry's {{#crossLink \"VectorTextGeometry/text:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "text",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 212,
            "description": "3D point indicating the top left corner this VectorTextGeometry.\n\nFires an {{#crossLink \"VectorTextGeometry/origin:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "origin",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 229,
            "description": "Fired whenever this VectorTextGeometry's {{#crossLink \"VectorTextGeometry/origin:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "origin",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 242,
            "description": "Size of each character cell.\n\nFires a {{#crossLink \"VectorText/size:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "size",
            "default": "1",
            "type": "Number",
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/geometry/vectorTextGeometry.js",
            "line": 270,
            "description": "Fired whenever this VectorText's {{#crossLink \"VectorText/size:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "size",
            "type": "Number",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "VectorTextGeometry",
            "module": "xeogl",
            "submodule": "geometry"
        },
        {
            "file": "examples/js/marking/pointMarkings.js",
            "line": 92,
            "description": "Draws a mark on this PointMarkings.\n\nThe point that we're drawing at is given as a hit record that was previously returned from a call to the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Scene/pick:method\"}}pick(){{/crossLink}} method. Performing the\npick externally, instead of encapsulating within this draw() method, allows us to intercept the\npick result and perform other tasks with it, in addition to drawing.",
            "params": [
                {
                    "name": "hit",
                    "description": "A hit record previously obtained from {{#crossLink \"Scene/pick:method\"}}{{/crossLink}}.",
                    "type": "*"
                }
            ],
            "class": "PointMarkings",
            "module": "xeogl",
            "submodule": "marking"
        },
        {
            "file": "examples/js/marking/pointMarkings.js",
            "line": 135,
            "description": "Clears this PointMarkings.",
            "class": "PointMarkings",
            "module": "xeogl",
            "submodule": "marking"
        },
        {
            "file": "examples/js/marking/pointMarkings.js",
            "line": 146,
            "description": "Saves this PointMarkings.",
            "return": {
                "description": "Data that may be loaded again with {{#crossLink \"PointMarkings/load:method\"}}save(){{/crossLink}}.",
                "type": "*"
            },
            "class": "PointMarkings",
            "module": "xeogl",
            "submodule": "marking"
        },
        {
            "file": "examples/js/marking/pointMarkings.js",
            "line": 165,
            "description": "Loads data into this PointMarkings.\nClears this PointMarkings first.",
            "params": [
                {
                    "name": "data",
                    "description": "Data that was previously saved with {{#crossLink \"PointMarkings/save:method\"}}save(){{/crossLink}}.",
                    "type": "*"
                }
            ],
            "class": "PointMarkings",
            "module": "xeogl",
            "submodule": "marking"
        },
        {
            "file": "examples/js/models/OBJModel.js",
            "line": 135,
            "description": "Path to a Wavefront OBJ file.\n\nYou can set this to a new file path at any time, which will cause the OBJModel to load components from\nthe new file (after first destroying any components loaded from a previous file path).\n\nAlso loads materials from any MTL files referenced in the OBJ.\n\nFires a {{#crossLink \"OBJModel/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "OBJModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/OBJModel.js",
            "line": 163,
            "description": "Fired whenever this OBJModel has finished loading components from the OBJ file\nspecified by {{#crossLink \"OBJModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "loaded",
            "class": "OBJModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/OBJModel.js",
            "line": 179,
            "description": "Fired whenever this OBJModel's {{#crossLink \"OBJModel/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "OBJModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/OBJModel.js",
            "line": 209,
            "description": "Loads OBJ and MTL from file(s) into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to load into.",
                    "type": "Model"
                },
                {
                    "name": "src",
                    "description": "Path to OBJ file.",
                    "type": "String"
                },
                {
                    "name": "ok",
                    "description": "Completion callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "OBJModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/OBJModel.js",
            "line": 239,
            "description": "Parses OBJ and MTL text strings into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to load into.",
                    "type": "Model"
                },
                {
                    "name": "objText",
                    "description": "OBJ text string.",
                    "type": "String"
                },
                {
                    "name": "mtlText",
                    "description": "MTL text string.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "Base path for external resources.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "OBJModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 98,
            "description": "Adds an asset to this BuildableModel.\n\nThe asset is given as a configuration object, to be lazy-instantiated as soon as an entity is built from\nit with {{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.\n\n#### Usage\n\nAdding a {{#crossLink \"PhongMaterial\"}}{{/crossLink}} asset with ID \"gridMaterial\":\n\n````javascript\nbuildableModel.asset(\"gridMaterial\", {\n    type: \"xeogl.PhongMaterial\",\n    ambient: [0.9, 0.3, 0.9],\n    shininess: 30,\n    diffuseMap: {\n        src: \"textures/diffuse/uvGrid2.jpg\"\n    }\n});\n````\n\nAdding a {{#crossLink \"BoxGeometry\"}}{{/crossLink}} asset with ID \"boxGeometry\":\n\n````javascript\nbuildableModel.asset(\"boxGeometry\", {\n    type: \"xeogl.BoxGeometry\",\n    xSize: 1.0,\n    ySize: 1.0,\n    zSize: 1.0\n});\n````",
            "itemtype": "method",
            "name": "asset",
            "params": [
                {
                    "name": "assetId",
                    "description": "A unique ID for the asset.",
                    "type": "String|Number"
                },
                {
                    "name": "cfg",
                    "description": "Configuration object for the asset.",
                    "type": "*"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 139,
            "description": "Selects the {{#crossLink \"Geometry\"}}{{/crossLink}} asset that will be added to\neach {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created with\n{{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.\n\nThe given ID must belong to a {{#crossLink \"Geometry\"}}{{/crossLink}} asset that was added previously with\n{{#crossLink \"BuildableModel/asset:method\"}}asset(){{/crossLink}}.",
            "itemtype": "method",
            "name": "geometry",
            "params": [
                {
                    "name": "assetId",
                    "description": "The asset ID.",
                    "type": "String|Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 154,
            "description": "Selects the {{#crossLink \"Material\"}}{{/crossLink}} asset that will be added to\neach {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created with\n{{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.\n\nThe given ID must belong to a {{#crossLink \"Material\"}}{{/crossLink}} asset that was added previously with\n{{#crossLink \"BuildableModel/asset:method\"}}asset(){{/crossLink}}.",
            "itemtype": "method",
            "name": "material",
            "params": [
                {
                    "name": "assetId",
                    "description": "The asset ID.",
                    "type": "String|Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 169,
            "description": "Sets the 3D position of each {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created with\n{{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.",
            "itemtype": "method",
            "name": "pos",
            "params": [
                {
                    "name": "x",
                    "description": "Position on X-axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position on Y-axis.",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Position on Z-axis.",
                    "type": "Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 184,
            "description": "Sets the 3D scale of each {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created with\n{{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "Scale on X-axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Scale on Y-axis.",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Scale on Z-axis.",
                    "type": "Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 199,
            "description": "Sets the 3D Euler rotation angles for each {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created\nwith {{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.",
            "itemtype": "method",
            "name": "angles",
            "params": [
                {
                    "name": "x",
                    "description": "Angle on X-axis in degrees.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Angle on Y-axis in degrees.",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "Angle on Z-axis in degrees.",
                    "type": "Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 214,
            "description": "Sets the order of 3D rotations for each {{#crossLink \"Entity\"}}{{/crossLink}} subsequently created\nwith {{#crossLink \"BuildableModel/entity:method\"}}entity(){{/crossLink}}.\n\n#### Usage\n\nThe X, Y and Z axis are identified as ````0, 1, 2```` respectively.\n\n````Javascript\nbuildableModel.axis(0,1,2); // X, Y, Z\nbuildableModel.axis(2,0,1); // Z, X, Y\nbuildableModel.axis(1,2,0); // Y, Z, X\n````",
            "itemtype": "method",
            "name": "axis",
            "params": [
                {
                    "name": "a",
                    "description": "Indicates the first rotation axis.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "Indicates the second rotation axis.",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "Indicates the third rotation axis.",
                    "type": "Number"
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 239,
            "description": "Creates an {{#crossLink \"Entity\"}}{{/crossLink}} with whatever assets and states are currently\nset on this BuildableModel.",
            "itemtype": "method",
            "name": "entity",
            "params": [
                {
                    "name": "id",
                    "description": "A unique ID for the new {{#crossLink \"Entity\"}}{{/crossLink}}.",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 281,
            "description": "Removes all assets and {{#crossLink \"Entity\"}}Entities{{/crossLink}} from this BuildableModel.",
            "itemtype": "method",
            "name": "clear",
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/buildableModel.js",
            "line": 290,
            "description": "Resets the state of this BuildableModel to defaults.",
            "itemtype": "method",
            "name": "reset",
            "class": "BuildableModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 154,
            "description": "Path to a glTF file.\n\nYou can set this to a new file path at any time (except while loading), which will cause the GLTFModel to load components from\nthe new file (after first destroying any components loaded from a previous file path).\n\nFires a {{#crossLink \"GLTFModel/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 180,
            "description": "Fired whenever this GLTFModel has finished loading components from the glTF file\nspecified by {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "loaded",
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 195,
            "description": "Fired whenever this GLTFModel's {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 222,
            "description": "Loads glTF from a URL into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to load into.",
                    "type": "Model"
                },
                {
                    "name": "src",
                    "description": "Path to glTF file.",
                    "type": "String"
                },
                {
                    "name": "ok",
                    "description": "Completion callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 252,
            "description": "Fired whenever this GLTFModel fails to load the glTF file\nspecified by {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "msg",
                    "description": "Description of the error",
                    "type": "String"
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel.js",
            "line": 263,
            "description": "Parses glTF JSON into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to parse into.",
                    "type": "Model"
                },
                {
                    "name": "gltf",
                    "description": "The glTF JSON.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Parsing options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "basePath",
                            "description": "Base path path to find external resources on, if any.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "loadBuffer",
                            "description": "Callback to load buffer files.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 154,
            "description": "Path to a glTF file.\n\nYou can set this to a new file path at any time (except while loading), which will cause the GLTFModel to load components from\nthe new file (after first destroying any components loaded from a previous file path).\n\nFires a {{#crossLink \"GLTFModel/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 180,
            "description": "Fired whenever this GLTFModel has finished loading components from the glTF file\nspecified by {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "loaded",
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 195,
            "description": "Fired whenever this GLTFModel's {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 222,
            "description": "Loads glTF from a URL into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to load into.",
                    "type": "Model"
                },
                {
                    "name": "src",
                    "description": "Path to glTF file.",
                    "type": "String"
                },
                {
                    "name": "ok",
                    "description": "Completion callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 252,
            "description": "Fired whenever this GLTFModel fails to load the glTF file\nspecified by {{#crossLink \"GLTFModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "msg",
                    "description": "Description of the error",
                    "type": "String"
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/glTFModel2.js",
            "line": 263,
            "description": "Parses glTF JSON into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "model",
                    "description": "Model to parse into.",
                    "type": "Model"
                },
                {
                    "name": "gltf",
                    "description": "The glTF JSON.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Parsing options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "basePath",
                            "description": "Base path path to find external resources on, if any.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "loadBuffer",
                            "description": "Callback to load buffer files.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "GLTFModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 247,
            "description": "Selects which xeogl material type to create from each SceneJS Phong material.\n\nCauses the SceneJSModel to attempt a best-effort conversion.\n\nUpdate this at any time to reconvert the materials.\n\nFires a {{#crossLink \"SceneJSModel/materialWorkFlow:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "materialWorkflow",
            "type": "{*}",
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 282,
            "description": "Fired whenever this SceneJSModel's  {{#crossLink \"SceneJSModel/materialWorkflow:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "materialWorkflow",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 295,
            "description": "Path to the SceneJS JSON scene description file.\n\nUpdate this at any time to clear and re-import content.\n\nFires a {{#crossLink \"SceneJSModel/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 320,
            "description": "Fired whenever this SceneJSModel has finished loading the SceneJS JSON file\nspecified by {{#crossLink \"SceneJSModel/src:property\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "loaded",
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 366,
            "description": "Fired whenever this SceneJSModel's  {{#crossLink \"SceneJSModel/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 379,
            "description": "A SceneJS POJO scene definition.\n\nUpdate this at any time to clear and re-import content.\n\nFires a {{#crossLink \"SceneJSModel/data:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "data",
            "type": "{*}",
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/models/sceneJSModel.js",
            "line": 411,
            "description": "Fired whenever this SceneJSModel's  {{#crossLink \"SceneJSModel/data:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "data",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SceneJSModel",
            "module": "xeogl",
            "submodule": "models"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 263,
            "description": "Notifies whether or not zSpace is supported in this browser.",
            "itemtype": "event",
            "name": "supported",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether or not zSpace is supported."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 316,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} attached to this ZSpaceEffect.\n\nThe ZSpaceEffect will attach a {{#crossLink \"Projection\"}}{{/crossLink}} to its\n{{#crossLink \"Camera\"}}{{/crossLink}} if the {{#crossLink \"Camera\"}}Camera{{/crossLink}} does not have\none already, replacing whatever projection transform component was already attached.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this ZSpaceEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nNo other component should modify the state of the {{#crossLink \"Camera\"}}{{/crossLink}} while\nit's attached to this ZSpaceEffect. There is no prevention or check for that, so if that\nhappens you'll get unexpected results.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 338,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 358,
            "description": "The offset of the canvas' corner from the edge of the screen - needed for correct tracking of glasses and stylus.\n\nLeave this at it's default value of ````[0,0]```` if the canvas is to fill the entire screen.\n\nFires a {{#crossLink \"ZSpaceEffect/canvasOffset:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "canvasOffset",
            "default": "[0, 0]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 377,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/canvasOffset:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "canvasOffset",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 391,
            "description": "Position of this ZSpaceEffect's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"ZSpaceEffect/nearClip:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "nearClip",
            "default": "0.1",
            "type": "Number",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 408,
            "description": "Fired whenever this ZSpaceEffect's   {{#crossLink \"ZSpaceEffect/nearClip:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "nearClip",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 421,
            "description": "Position of this ZSpaceEffect's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"ZSpaceEffect/farClip:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "farClip",
            "default": "10000.0",
            "type": "Number",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 438,
            "description": "Fired whenever this ZSpaceEffect's  {{#crossLink \"ZSpaceEffect/farClip:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "farClip",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 452,
            "description": "The display resolution.\n\nFires a {{#crossLink \"ZSpaceEffect/displayResolution:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "displayResolution",
            "default": "[1920, 1080]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 469,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/displayResolution:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "displayResolution",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 483,
            "description": "The display size.\n\nFires a {{#crossLink \"ZSpaceEffect/displaySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "displaySize",
            "default": "[0.521, 0.293]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 500,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/displaySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "displaySize",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 514,
            "description": "The current World-space position of the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusPos",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 529,
            "description": "The current World-space direction of the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusOrientation",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 544,
            "description": "The current camera matrix for the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusCameraMatrix",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 559,
            "description": "The current world matrix for the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusCameraMatrix",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 574,
            "description": "Whether or not the first button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton0",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 590,
            "description": "Whether or not the second button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton1",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 606,
            "description": "Whether or not the third button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton2",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 622,
            "description": "The current viewer scale factor.\n\nThe ZSpaceEffect automatically calculates this from the distance between\nthe eye and the point of interest.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "viewerScale",
            "default": "1",
            "type": "Number",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 642,
            "description": "Flag which indicates whether this ZSpaceEffect is active or not.\n\nNote that this ZSpaceEffect can still be activated when the browser does not support ZSpace.\n\nFires an {{#crossLink \"ZSpaceEffect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 668,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 865,
            "description": "Fired whenever this ZSpaceEffect's stylus moves.",
            "itemtype": "event",
            "name": "stylusMoved",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 875,
            "description": "Fired whenever this ZSpaceEffect's first button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton0",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 886,
            "description": "Fired whenever this ZSpaceEffect's second button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton1",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect.js",
            "line": 897,
            "description": "Fired whenever this ZSpaceEffect's third button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton2",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 272,
            "description": "Notifies whether or not zSpace is supported in this browser.",
            "itemtype": "event",
            "name": "supported",
            "type": "Boolean",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether or not zSpace is supported."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 379,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} attached to this ZSpaceEffect.\n\nThe ZSpaceEffect will attach a {{#crossLink \"Projection\"}}{{/crossLink}} to its\n{{#crossLink \"Camera\"}}{{/crossLink}} if the {{#crossLink \"Camera\"}}Camera{{/crossLink}} does not have\none already, replacing whatever projection transform component was already attached.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this ZSpaceEffect. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nNo other component should modify the state of the {{#crossLink \"Camera\"}}{{/crossLink}} while\nit's attached to this ZSpaceEffect. There is no prevention or check for that, so if that\nhappens you'll get unexpected results.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 401,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/camera:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 421,
            "description": "The offset of the canvas' corner from the edge of the screen - needed for correct tracking of glasses and stylus.\n\nLeave this at it's default value of ````[0,0]```` if the canvas is to fill the entire screen.\n\nFires a {{#crossLink \"ZSpaceEffect/canvasOffset:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "canvasOffset",
            "default": "[0, 0]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 440,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/canvasOffset:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "canvasOffset",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 454,
            "description": "Position of this ZSpaceEffect's near plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"ZSpaceEffect/nearClip:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "nearClip",
            "default": "0.1",
            "type": "Number",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 471,
            "description": "Fired whenever this ZSpaceEffect's   {{#crossLink \"ZSpaceEffect/nearClip:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "nearClip",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 484,
            "description": "Position of this ZSpaceEffect's far plane on the positive View-space Z-axis.\n\nFires a {{#crossLink \"ZSpaceEffect/farClip:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "farClip",
            "default": "10000.0",
            "type": "Number",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 501,
            "description": "Fired whenever this ZSpaceEffect's  {{#crossLink \"ZSpaceEffect/farClip:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "farClip",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 515,
            "description": "The display resolution.\n\nFires a {{#crossLink \"ZSpaceEffect/displayResolution:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "displayResolution",
            "default": "[1920, 1080]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 532,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/displayResolution:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "displayResolution",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 546,
            "description": "The display size.\n\nFires a {{#crossLink \"ZSpaceEffect/displaySize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "displaySize",
            "default": "[0.521, 0.293]",
            "type": "Float32Array",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 563,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/displaySize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "displaySize",
            "type": "Float32Array",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 577,
            "description": "The current World-space position of the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusPos",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 592,
            "description": "The current World-space direction of the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusOrientation",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 607,
            "description": "The current camera matrix for the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusCameraMatrix",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 622,
            "description": "The current world matrix for the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusMoved:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusCameraMatrix",
            "type": "Float32Array",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 637,
            "description": "Whether or not the first button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton0:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton0",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 653,
            "description": "Whether or not the second button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton1:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton1",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 669,
            "description": "Whether or not the third button is down on the stylus.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stylusButton2",
            "default": "false",
            "type": "Boolean",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 685,
            "description": "The current viewer scale factor.\n\nThe ZSpaceEffect automatically calculates this from the distance between\nthe eye and the point of interest.\n\nFires a {{#crossLink \"ZSpaceEffect/stylusButton2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "viewerScale",
            "default": "1",
            "type": "Number",
            "final": 1,
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 705,
            "description": "Flag which indicates whether this ZSpaceEffect is active or not.\n\nNote that this ZSpaceEffect can still be activated when the browser does not support ZSpace.\n\nFires an {{#crossLink \"ZSpaceEffect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 731,
            "description": "Fired whenever this ZSpaceEffect's {{#crossLink \"ZSpaceEffect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 1166,
            "description": "Fired whenever this ZSpaceEffect's stylus moves.",
            "itemtype": "event",
            "name": "stylusMoved",
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 1176,
            "description": "Fired whenever this ZSpaceEffect's first button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton0",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 1187,
            "description": "Fired whenever this ZSpaceEffect's second button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton1",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceEffect_complete.js",
            "line": 1198,
            "description": "Fired whenever this ZSpaceEffect's third button is pressed or released.",
            "itemtype": "event",
            "name": "stylusButton2",
            "params": [
                {
                    "name": "value",
                    "description": "True if the button is down."
                }
            ],
            "class": "ZSpaceEffect",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControl.js",
            "line": 99,
            "description": "The {{#crossLink \"ZSpaceEffect\"}}{{/crossLink}} attached to this ZSpaceStylusControl.",
            "itemtype": "property",
            "name": "zspaceEffect",
            "type": "ZSpaceEffect",
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControl.js",
            "line": 109,
            "description": "Fired whenever this ZSpaceStylusControl's {{#crossLink \"ZSpaceStylusControl/zspaceEffect:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "zspaceEffect",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControl.js",
            "line": 129,
            "description": "Flag which indicates whether this ZSpaceStylusControl is active or not.\n\nFires an {{#crossLink \"ZSpaceStylusControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControl.js",
            "line": 153,
            "description": "Fired whenever this ZSpaceStylusControl's {{#crossLink \"ZSpaceStylusControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 99,
            "description": "The {{#crossLink \"ZSpaceEffect\"}}{{/crossLink}} attached to this ZSpaceStylusControl.\n\nThe ZSpaceStylusControl will attach a {{#crossLink \"Projection\"}}{{/crossLink}} to its\n{{#crossLink \"ZSpaceEffect\"}}{{/crossLink}} if the {{#crossLink \"ZSpaceEffect\"}}ZSpaceEffect{{/crossLink}} does not have\none already, replacing whatever projection transform component was already attached.\n\nMust be within the same {{#crossLink \"Scene\"}}{{/crossLink}} as this ZSpaceStylusControl. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/zspaceEffect:property\"}}zspaceEffect{{/crossLink}} when set to\na null or undefined value.\n\nNo other component should modify the state of the {{#crossLink \"ZSpaceEffect\"}}{{/crossLink}} while\nit's attached to this ZSpaceStylusControl. There is no prevention or check for that, so if that\nhappens you'll get unexpected results.",
            "itemtype": "property",
            "name": "zspaceEffect",
            "type": "ZSpaceEffect",
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 121,
            "description": "Fired whenever this ZSpaceStylusControl's {{#crossLink \"ZSpaceStylusControl/zspaceEffect:property\"}}{{/crossLink}}\nproperty changes.",
            "itemtype": "event",
            "name": "zspaceEffect",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 141,
            "description": "Flag which indicates whether this ZSpaceStylusControl is active or not.\n\nFires an {{#crossLink \"ZSpaceStylusControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "true",
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/zspace/zSpaceStylusControlV2.js",
            "line": 165,
            "description": "Fired whenever this ZSpaceStylusControl's {{#crossLink \"ZSpaceStylusControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ZSpaceStylusControl",
            "module": "xeogl",
            "submodule": "zspace"
        },
        {
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 42,
            "description": "A {{#crossLink \"Boundary3D\"}}{{/crossLink}} whose {{#crossLink \"Boundary3D/aabb:property\"}}AABB{{/crossLink}} we'll\ndynamically fit this OBBGeometry to.\n\nFires a {{#crossLink \"AABBHelper/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "boundary",
            "type": "Boundary3D",
            "class": "AABBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 62,
            "description": "Emissive color of this AABBHelper.\n\nFires an {{#crossLink \"AABBHelper/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0,1,0]",
            "type": "{Float32Array}",
            "class": "AABBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 77,
            "description": "Fired whenever this AABBHelper's {{#crossLink \"AABBHelper/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "AABBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 90,
            "description": "Indicates whether this AABBHelper is visible or not.\n\nFires a {{#crossLink \"AABBHelper/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "AABBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/aabbHelper.js",
            "line": 107,
            "description": "Fired whenever this helper's {{#crossLink \"AABBHelper/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "AABBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/axisHelper.js",
            "line": 343,
            "params": [
                {
                    "name": "visible",
                    "description": ""
                }
            ],
            "class": "AxisHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 42,
            "description": "The {{#crossLink \"Clip\"}}Clip{{/crossLink}} attached to this ClipHelper.\n\nFires an {{#crossLink \"ClipHelper/Clip:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clip",
            "type": "Clip",
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 83,
            "description": "The width and height of the ClipHelper plane indicator.\n\nWhen no value is specified, will automatically size to fit within the\n{{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.\n\nFires an {{#crossLink \"ClipHelper/planeSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "planeSize",
            "default": "Fitted to scene boundary",
            "type": "{Float32Array}",
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 101,
            "description": "Fired whenever this ClipHelper's {{#crossLink \"ClipHelper/planeSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "planeSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 114,
            "description": "Indicates whether this ClipHelper's {{#crossLink \"ClipHelper/planeSize:property\"}}{{/crossLink}} is automatically\ngenerated or not.\n\nWhen auto-generated, {{#crossLink \"ClipHelper/planeSize:property\"}}{{/crossLink}} will automatically size\nto fit within the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.\n\nFires an {{#crossLink \"ClipHelper/autoPlaneSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "autoPlaneSize",
            "default": "false",
            "type": "{Boolean}",
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 133,
            "description": "Fired whenever this ClipHelper's {{#crossLink \"ClipHelper/autoPlaneSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "autoPlaneSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 146,
            "description": "Indicates whether this ClipHelper's plane is filled or just wireframe.\n\nFires a {{#crossLink \"ClipHelper/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "solid",
            "default": "true",
            "type": "Boolean",
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 161,
            "description": "Fired whenever this helper's {{#crossLink \"ClipHelper/solid:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "solid",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 175,
            "description": "Indicates whether this ClipHelper is visible or not.\n\nFires a {{#crossLink \"ClipHelper/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/clipHelper.js",
            "line": 190,
            "description": "Fired whenever this helper's {{#crossLink \"ClipHelper/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "ClipHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/mousePickHelper.js",
            "line": 21,
            "description": "The {{#crossLink \"MousePickControl\"}}{{/crossLink}} attached to this MousePickHelper.\n\nFires an {{#crossLink \"mousePickControl/mousePickControl:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "mousePickControl",
            "type": "mousePickControl",
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/obbHelper.js",
            "line": 42,
            "description": "A {{#crossLink \"Boundary3D\"}}{{/crossLink}} whose {{#crossLink \"Boundary3D/aabb:property\"}}AABB{{/crossLink}} we'll\ndynamically fit this OBBGeometry to.\n\nFires a {{#crossLink \"OBBHelper/boundary:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "boundary",
            "type": "Boundary3D",
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/obbHelper.js",
            "line": 62,
            "description": "Emissive color of this OBBHelper.\n\nFires an {{#crossLink \"OBBHelper/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0,1,0]",
            "type": "{Float32Array}",
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/obbHelper.js",
            "line": 77,
            "description": "Fired whenever this OBBHelper's {{#crossLink \"OBBHelper/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/obbHelper.js",
            "line": 90,
            "description": "Indicates whether this OBBHelper is visible or not.\n\nFires a {{#crossLink \"OBBHelper/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/obbHelper.js",
            "line": 107,
            "description": "Fired whenever this helper's {{#crossLink \"OBBHelper/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "OBBHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 155,
            "description": "World-space position of this PlaneHelper.\nFires an {{#crossLink \"PlaneHelper/worldPos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "worldPos",
            "default": "[0,0,0]",
            "type": "{Float32Array}",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 172,
            "description": "Fired whenever this PlaneHelper's {{#crossLink \"PlaneHelper/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 185,
            "description": "World-space direction of this PlaneHelper.\nFires an {{#crossLink \"PlaneHelper/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[0,0,1]",
            "type": "{Float32Array}",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 209,
            "description": "Fired whenever this PlaneHelper's {{#crossLink \"PlaneHelper/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 223,
            "description": "The width and height of the PlaneHelper plane indicator.\n\nValues assigned to this property will be overridden by an auto-computed value when\n{{#crossLink \"PlaneHelper/autoPlaneSize:property\"}}{{/crossLink}} is true.\n\nFires an {{#crossLink \"PlaneHelper/planeSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "planeSize",
            "default": "[1,1]",
            "type": "{Float32Array}",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 243,
            "description": "Fired whenever this PlaneHelper's {{#crossLink \"PlaneHelper/planeSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "planeSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 256,
            "description": "Indicates whether this PlaneHelper's {{#crossLink \"PlaneHelper/planeSize:property\"}}{{/crossLink}} is automatically\ngenerated or not.\n\nWhen auto-generated, {{#crossLink \"PlaneHelper/planeSize:property\"}}{{/crossLink}} will automatically size\nto fit within the {{#crossLink \"Scene/worldBoundary:property\"}}Scene's worldBoundary{{/crossLink}}.\n\nFires an {{#crossLink \"PlaneHelper/autoPlaneSize:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "autoPlaneSize",
            "default": "false",
            "type": "{Boolean}",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 296,
            "description": "Fired whenever this PlaneHelper's {{#crossLink \"PlaneHelper/autoPlaneSize:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "autoPlaneSize",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 309,
            "description": "Emmissive color of this PlaneHelper.\n\nFires an {{#crossLink \"PlaneHelper/color:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.4,0.4,0.4]",
            "type": "{Float32Array}",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 327,
            "description": "Fired whenever this PlaneHelper's {{#crossLink \"PlaneHelper/color:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "color",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Float32Array"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 340,
            "description": "Indicates whether this PlaneHelper is filled with color or just wireframe.\n\nFires a {{#crossLink \"PlaneHelper/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "solid",
            "default": "true",
            "type": "Boolean",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 357,
            "description": "Fired whenever this helper's {{#crossLink \"PlaneHelper/solid:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "solid",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 371,
            "description": "Indicates whether this PlaneHelper is visible or not.\n\nFires a {{#crossLink \"PlaneHelper/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/planeHelper.js",
            "line": 391,
            "description": "Fired whenever this helper's {{#crossLink \"PlaneHelper/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "PlaneHelper",
            "module": "xeogl"
        },
        {
            "file": "examples/js/helpers/pointLightHelper.js",
            "line": 53,
            "description": "The {{#crossLink \"PointLight\"}}PointLight{{/crossLink}} attached to this PointLightHelper.\n\nFires an {{#crossLink \"PointLightHelper/pointLight:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pointLight",
            "type": "PointLight",
            "class": "PointLightHelper",
            "module": "xeogl",
            "submodule": "entities"
        },
        {
            "file": "examples/js/helpers/splineCurveHelper.js",
            "line": 67,
            "description": "The SplineCurve for this SplineCurveHelper.\n\nFires a {{#crossLink \"SplineCurveHelper/splineCurve:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "splinecurve",
            "type": "{Splinecurve}",
            "class": "SplineCurveHelper",
            "module": "entities"
        },
        {
            "file": "examples/js/helpers/splineCurveHelper.js",
            "line": 87,
            "description": "Fired whenever this CameraPaths's {{#crossLink \"CameraPath/path:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "path",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "SplineCurveHelper",
            "module": "entities"
        },
        {
            "file": "examples/js/helpers/viewCube.js",
            "line": 5,
            "description": "Programmatically-generated cube map.\n\nProvides the region markings on the ViewCube surface and is able to map UV coordinates from\npick results to the regions that were picked.",
            "class": "ViewCube",
            "module": "entities"
        },
        {
            "file": "examples/js/helpers/viewCube.js",
            "line": 660,
            "params": [
                {
                    "name": "visible",
                    "description": ""
                }
            ],
            "class": "ViewCube",
            "module": "entities"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/canvas/canvas.js:547"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:32"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:65"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:88"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:99"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:751"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1588"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:1638"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2171"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2237"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/math/math.js:2340"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/component.js:360"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/component.js:623"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/component.js:920"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/scene.js:1154"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/scene.js:1503"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/xeogl.js:491"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:528"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:538"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:548"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:577"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:587"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:600"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:677"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:692"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/xeogl.js:705"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/cubicBezierCurve.js:289"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/curve.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/curve.js:154"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/path.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/quadraticBezierCurve.js:262"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/curves/splineCurve.js:206"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/geometryBuilder.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/geometryBuilder.js:109"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/geometryBuilder.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/geometryBuilder.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/geometryBuilder.js:235"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/voxelGeometryBuilder.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/voxelGeometryBuilder.js:180"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/generation/voxelGeometryBuilder.js:224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " examples/js/marking/pointMarkings.js:146"
        },
        {
            "message": "Missing item type\nA chunk of WebGL state changes to render a xeogl.renderer.State.",
            "line": " src/_renderer/chunks/chunk.js:5"
        },
        {
            "message": "Missing item type\nInitialises the chunk.",
            "line": " src/_renderer/chunks/chunk.js:13"
        },
        {
            "message": "Missing item type\nManages creation, reuse and destruction of {@link xeogl.renderer.Chunk}s.",
            "line": " src/_renderer/chunks/chunkFactory.js:5"
        },
        {
            "message": "Missing item type\nSub-classes of {@link xeogl.renderer.Chunk} provided by this factory",
            "line": " src/_renderer/chunks/chunkFactory.js:12"
        },
        {
            "message": "Missing item type\nCreates a chunk type.",
            "line": " src/_renderer/chunks/chunkFactory.js:17"
        },
        {
            "message": "Missing item type\nGets a chunk from this factory.",
            "line": " src/_renderer/chunks/chunkFactory.js:53"
        },
        {
            "message": "Missing item type\nReleases a chunk back to this factory.",
            "line": " src/_renderer/chunks/chunkFactory.js:97"
        },
        {
            "message": "Missing item type\nRestores the chunks in this factory after a WebGL context recovery.",
            "line": " src/_renderer/chunks/chunkFactory.js:123"
        },
        {
            "message": "Missing item type\nCreate display state chunk type for draw and pick render of geometry",
            "line": " src/_renderer/chunks/geometryChunk.js:5"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/chunks/viewportChunk.js:5"
        },
        {
            "message": "Missing item type\nBuffer for vertices and indices",
            "line": " src/_renderer/webgl/arrayBuffer.js:5"
        },
        {
            "message": "Missing item type\nTrue when this buffer is allocated and ready to go",
            "line": " src/_renderer/webgl/arrayBuffer.js:17"
        },
        {
            "message": "Missing item type\nAllocates this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:73"
        },
        {
            "message": "Missing item type\nUpdates data within this buffer, reallocating if needed.",
            "line": " src/_renderer/webgl/arrayBuffer.js:102"
        },
        {
            "message": "Missing item type\nBinds this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:138"
        },
        {
            "message": "Missing item type\nUnbinds this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:150"
        },
        {
            "message": "Missing item type\nDestroys this buffer",
            "line": " src/_renderer/webgl/arrayBuffer.js:162"
        },
        {
            "message": "Missing item type\nAn attribute within a {@link xeogl.renderer.webgl.Shader}",
            "line": " src/_renderer/webgl/attribute.js:5"
        },
        {
            "message": "Missing item type\nWrapper for a WebGL program",
            "line": " src/_renderer/webgl/program.js:22"
        },
        {
            "message": "Missing item type\nTrue when successfully allocated",
            "line": " src/_renderer/webgl/program.js:36"
        },
        {
            "message": "Missing item type\nTrue when successfully compiled",
            "line": " src/_renderer/webgl/program.js:42"
        },
        {
            "message": "Missing item type\nTrue when successfully linked",
            "line": " src/_renderer/webgl/program.js:48"
        },
        {
            "message": "Missing item type\nTrue when successfully validated",
            "line": " src/_renderer/webgl/program.js:54"
        },
        {
            "message": "Missing item type\nContains error log on failure to allocate, compile, validate or link",
            "line": " src/_renderer/webgl/program.js:60"
        },
        {
            "message": "Missing item type\nTrue as soon as this buffer is allocated and ready to go",
            "line": " src/_renderer/webgl/renderBuffer.js:9"
        },
        {
            "message": "Missing item type\nThe HTMLCanvasElement",
            "line": " src/_renderer/webgl/renderBuffer.js:14"
        },
        {
            "message": "Missing item type\nWebGL context",
            "line": " src/_renderer/webgl/renderBuffer.js:19"
        },
        {
            "message": "Missing item type\nBuffer resources, set up in #_touch",
            "line": " src/_renderer/webgl/renderBuffer.js:24"
        },
        {
            "message": "Missing item type\nTrue while this buffer is bound",
            "line": " src/_renderer/webgl/renderBuffer.js:29"
        },
        {
            "message": "Missing item type\nOptional explicit buffer size - when omitted, buffer defaults to canvas size",
            "line": " src/_renderer/webgl/renderBuffer.js:34"
        },
        {
            "message": "Missing item type\nSets custom dimensions for this buffer.\n\nBuffer dynamically re-sizes to canvas when size is null.",
            "line": " src/_renderer/webgl/renderBuffer.js:40"
        },
        {
            "message": "Missing item type\nCalled after WebGL context is restored.",
            "line": " src/_renderer/webgl/renderBuffer.js:51"
        },
        {
            "message": "Missing item type\nBinds this buffer",
            "line": " src/_renderer/webgl/renderBuffer.js:61"
        },
        {
            "message": "Missing item type\nClears this renderbuffer",
            "line": " src/_renderer/webgl/renderBuffer.js:184"
        },
        {
            "message": "Missing item type\nReads buffer pixel at given coordinates",
            "line": " src/_renderer/webgl/renderBuffer.js:195"
        },
        {
            "message": "Missing item type\nUnbinds this renderbuffer",
            "line": " src/_renderer/webgl/renderBuffer.js:206"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/renderBuffer.js:214"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/renderBuffer.js:242"
        },
        {
            "message": "Missing item type\nA vertex/fragment shader in a program",
            "line": " src/_renderer/webgl/shader.js:5"
        },
        {
            "message": "Missing item type\nTrue if this shader successfully allocated. When false,\n#error will contain WebGL the error log.",
            "line": " src/_renderer/webgl/shader.js:14"
        },
        {
            "message": "Missing item type\nTrue if this shader successfully compiled. When false,\n#error will contain WebGL the error log.",
            "line": " src/_renderer/webgl/shader.js:21"
        },
        {
            "message": "Missing item type\nSaves the WebGL error log when this shader failed to allocate or compile.",
            "line": " src/_renderer/webgl/shader.js:28"
        },
        {
            "message": "Missing item type\nThe GLSL for this shader.",
            "line": " src/_renderer/webgl/shader.js:34"
        },
        {
            "message": "Missing item type\nWebGL handle to this shader's GPU resource",
            "line": " src/_renderer/webgl/shader.js:40"
        },
        {
            "message": "Missing item type",
            "line": " src/_renderer/webgl/webgl.js:7"
        },
        {
            "message": "Missing item type\nAn object within a xeogl.renderer.Renderer",
            "line": " src/_renderer/object.js:5"
        },
        {
            "message": "Missing item type\nID for this object, unique among all objects in the Renderer",
            "line": " src/_renderer/object.js:10"
        },
        {
            "message": "Missing item type\nHash code for this object, unique among all objects in the Renderer",
            "line": " src/_renderer/object.js:15"
        },
        {
            "message": "Missing item type\nState sort key, computed from #layer, #program and #material",
            "line": " src/_renderer/object.js:20"
        },
        {
            "message": "Missing item type\nSequence of state chunks applied to render this object",
            "line": " src/_renderer/object.js:26"
        },
        {
            "message": "Missing item type\nShader programs that render this object, also used for (re)computing #sortKey",
            "line": " src/_renderer/object.js:31"
        },
        {
            "message": "Missing item type\nState for the xeogl.renderer.Stage that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "line": " src/_renderer/object.js:36"
        },
        {
            "message": "Missing item type\nState for the xeogl.renderer.Modes that this object was compiled from, used for visibility cull",
            "line": " src/_renderer/object.js:41"
        },
        {
            "message": "Missing item type\nState for the xeogl.renderer.Layer that this object was compiled from, used for (re)computing #sortKey and visibility cull",
            "line": " src/_renderer/object.js:46"
        },
        {
            "message": "Missing item type\nState for the xeogl.renderer.Material that this object was compiled from, used for (re)computing #sortKey",
            "line": " src/_renderer/object.js:51"
        },
        {
            "message": "Missing item type\nTrue once the object has been compiled within the renderer display list.",
            "line": " src/_renderer/object.js:56"
        },
        {
            "message": "Missing item type\nVertex and fragment shaders for pick and draw",
            "line": " src/_renderer/program.js:7"
        },
        {
            "message": "Missing item type\nHash code for this program's capabilities, same as the hash on {@link #source}",
            "line": " src/_renderer/program.js:19"
        },
        {
            "message": "Missing item type\nSource code for this program's shaders",
            "line": " src/_renderer/program.js:25"
        },
        {
            "message": "Missing item type\nWebGL context on which this program's shaders are allocated",
            "line": " src/_renderer/program.js:31"
        },
        {
            "message": "Missing item type\nThe drawing program",
            "line": " src/_renderer/program.js:37"
        },
        {
            "message": "Missing item type\nThe object picking program",
            "line": " src/_renderer/program.js:43"
        },
        {
            "message": "Missing item type\nThe primitive picking program",
            "line": " src/_renderer/program.js:49"
        },
        {
            "message": "Missing item type\nThe outline program",
            "line": " src/_renderer/program.js:55"
        },
        {
            "message": "Missing item type\nThe count of display objects using this program",
            "line": " src/_renderer/program.js:61"
        },
        {
            "message": "Missing item type\nTrue when successfully allocated",
            "line": " src/_renderer/program.js:67"
        },
        {
            "message": "Missing item type\nTrue when successfully compiled",
            "line": " src/_renderer/program.js:73"
        },
        {
            "message": "Missing item type\nTrue when successfully linked",
            "line": " src/_renderer/program.js:79"
        },
        {
            "message": "Missing item type\nTrue when successfully validated",
            "line": " src/_renderer/program.js:85"
        },
        {
            "message": "Missing item type\nContains error log on failure to allocate, compile, validate or link",
            "line": " src/_renderer/program.js:91"
        },
        {
            "message": "Missing item type\nCreates the render and pick programs.\n This is also re-called to re-create them after WebGL context loss.",
            "line": " src/_renderer/program.js:101"
        },
        {
            "message": "Missing item type\nDestroys this program.",
            "line": " src/_renderer/program.js:230"
        },
        {
            "message": "Missing item type\nManages {@link xeogl.renderer.ProgramState} instances.",
            "line": " src/_renderer/programFactory.js:5"
        },
        {
            "message": "Missing item type\nGet a program that fits the given set of states.\nReuses any free program in the pool that matches the given hash.",
            "line": " src/_renderer/programFactory.js:20"
        },
        {
            "message": "Missing item type\nRelease a program back to the pool.",
            "line": " src/_renderer/programFactory.js:53"
        },
        {
            "message": "Missing item type\nRebuild all programs in the pool after WebGL context was lost and restored.",
            "line": " src/_renderer/programFactory.js:72"
        },
        {
            "message": "Missing item type\nSource code for pick and draw shader programs, to be compiled into one or more {@link xeogl.renderer.Program}s",
            "line": " src/_renderer/programSource.js:5"
        },
        {
            "message": "Missing item type\nHash code identifying the capabilities of the {@link xeogl.renderer.Program} that is compiled from this source",
            "line": " src/_renderer/programSource.js:27"
        },
        {
            "message": "Missing item type\nVertex shader source for object picking",
            "line": " src/_renderer/programSource.js:33"
        },
        {
            "message": "Missing item type\nFragment shader source for object picking.",
            "line": " src/_renderer/programSource.js:39"
        },
        {
            "message": "Missing item type\nVertex shader source for primitive picking.",
            "line": " src/_renderer/programSource.js:45"
        },
        {
            "message": "Missing item type\nFragment shader source for primitive picking.",
            "line": " src/_renderer/programSource.js:51"
        },
        {
            "message": "Missing item type\nVertex shader source for drawing.",
            "line": " src/_renderer/programSource.js:57"
        },
        {
            "message": "Missing item type\nFragment shader source for drawing.",
            "line": " src/_renderer/programSource.js:63"
        },
        {
            "message": "Missing item type\nVertex shader source for rendering shadow buffer.",
            "line": " src/_renderer/programSource.js:69"
        },
        {
            "message": "Missing item type\nFragment shader source for rendering shadow buffer.",
            "line": " src/_renderer/programSource.js:75"
        },
        {
            "message": "Missing item type\nVertex shader source for rendering outlines.",
            "line": " src/_renderer/programSource.js:81"
        },
        {
            "message": "Missing item type\nFragment shader source for rendering outlines.",
            "line": " src/_renderer/programSource.js:87"
        },
        {
            "message": "Missing item type\nCount of {@link xeogl.renderer.Program}s compiled from this program source code",
            "line": " src/_renderer/programSource.js:93"
        },
        {
            "message": "Missing item type\nManages creation, sharing and recycle of {@link xeogl.renderer.ProgramSource} instances",
            "line": " src/_renderer/programSourceFactory.js:5"
        },
        {
            "message": "Missing item type\nGet source code for a program to render the given states.\nAttempts to reuse cached source code for the given hash.",
            "line": " src/_renderer/programSourceFactory.js:30"
        },
        {
            "message": "Missing item type\nReleases program source code back to this factory.",
            "line": " src/_renderer/programSourceFactory.js:134"
        },
        {
            "message": "Missing item type\nOptional callback to fire when renderer wants to\nbind an output framebuffer. This is useful when we need to bind a stereo output buffer for WebVR.\n\nWhen this is missing, the renderer will implicitly bind\nWebGL's default framebuffer.\n\nThe callback takes one parameter, which is the index of the current\nrendering pass in which the buffer is to be bound.\n\nUse like this: myRenderer.bindOutputFramebuffer = function(pass) { .. });",
            "line": " src/_renderer/renderer.js:27"
        },
        {
            "message": "Missing item type\nOptional callback to fire when renderer wants to\nunbind any output drawing framebuffer that was\npreviously bound with #bindOutputFramebuffer.\n\nThe callback takes one parameter, which is the index of the current\nrendering pass in which the buffer is to be bound.\n\nUse like this: myRenderer.unbindOutputFramebuffer = function(pass) { .. });\n\nCallback takes no parameters.",
            "line": " src/_renderer/renderer.js:41"
        },
        {
            "message": "Missing item type\nReallocates WebGL resources for objects within this renderer.",
            "line": " src/_renderer/renderer.js:97"
        },
        {
            "message": "Missing item type\nInternally creates (or updates) a {@link xeogl.renderer.Object} of the given\nID from whatever component state cores are currently set on this {@link xeogl.Renderer}.\nThe object is created if it does not already exist in the display, otherwise\nit is updated with the current states, possibly replacing states already\nreferenced by the object.",
            "line": " src/_renderer/renderer.js:110"
        },
        {
            "message": "Missing item type\nAttempts to pick an object.",
            "line": " src/_renderer/renderer.js:691"
        },
        {
            "message": "Missing item type\nReads the colors of some pixels in the current image.",
            "line": " src/_renderer/renderer.js:893"
        },
        {
            "message": "Missing item type\nRenderer states",
            "line": " src/_renderer/states.js:1"
        },
        {
            "message": "Missing item type\nGeneric map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "line": " src/_utils/map.js:7"
        },
        {
            "message": "Missing item type\nItems in this map",
            "line": " src/_utils/map.js:13"
        },
        {
            "message": "Missing item type\nAdds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "line": " src/_utils/map.js:21"
        },
        {
            "message": "Missing item type\nRemoves the item of the given ID from the map and returns it",
            "line": " src/_utils/map.js:53"
        },
        {
            "message": "Missing item type\nAttributes for the WebGL context",
            "line": " src/canvas/canvas.js:183"
        },
        {
            "message": "Missing item type\nCreates a default canvas in the DOM.",
            "line": " src/canvas/canvas.js:391"
        },
        {
            "message": "Missing item type\nCreates a image element behind the canvas, for purpose of showing a custom background.",
            "line": " src/canvas/canvas.js:421"
        },
        {
            "message": "Missing item type\nCreates an invisible DIV over the canvas, for purpose of catching\ninput events without interfering with app-lever UI bits floating underneath.",
            "line": " src/canvas/canvas.js:448"
        },
        {
            "message": "Missing item type",
            "line": " src/canvas/canvas.js:475"
        },
        {
            "message": "Missing item type\nInitialises the WebGL context",
            "line": " src/canvas/canvas.js:505"
        },
        {
            "message": "Missing item type\nReads colors of pixels from the last rendered frame.\n\n<p>Call this method like this:</p>\n\n````JavaScript\n\n// Ignore transparent pixels (default is false)\nvar opaqueOnly = true;\n\nvar colors = new Float32Array(8);\n\nmyCanvas.readPixels([ 100, 22, 12, 33 ], colors, 2, opaqueOnly);\n````\n\nThen the r,g,b components of the colors will be set to the colors at those pixels.",
            "line": " src/canvas/canvas.js:628"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/boxGeometry.js:74"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/cylinderGeometry.js:87"
        },
        {
            "message": "Missing item type\nProtected method, called by sub-classes to queue a call to _update(), to rebuild geometry data arrays.",
            "line": " src/geometry/geometry.js:313"
        },
        {
            "message": "Missing item type\nSets this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}}.",
            "line": " src/geometry/geometry.js:1033"
        },
        {
            "message": "Missing item type\nFast method to insert elements into this Geometry's {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}}.",
            "line": " src/geometry/geometry.js:1113"
        },
        {
            "message": "Missing item type\nFast method to insert elements into this Geometry's {{#crossLink \"Geometry/uvs:property\"}}{{/crossLink}}.",
            "line": " src/geometry/geometry.js:1179"
        },
        {
            "message": "Missing item type\nFast method to insert elements into this Geometry's {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}}.",
            "line": " src/geometry/geometry.js:1245"
        },
        {
            "message": "Missing item type\nSets this Geometry's {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}}.",
            "line": " src/geometry/geometry.js:1311"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/latheGeometry.js:73"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/pathGeometry.js:70"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/planeGeometry.js:89"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/sphereGeometry.js:79"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " src/geometry/torusGeometry.js:86"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:111"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:117"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:123"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:135"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:141"
        },
        {
            "message": "Missing item type",
            "line": " src/input/input.js:147"
        },
        {
            "message": "Missing item type\nEnable or disable all input handlers",
            "line": " src/input/input.js:605"
        },
        {
            "message": "Missing item type\nClamps a value to the given range.",
            "line": " src/math/math.js:157"
        },
        {
            "message": "Missing item type\nCreates a three-element vector from the rotation part of a sixteen-element matrix.",
            "line": " src/math/math.js:764"
        },
        {
            "message": "Missing item type\nConverts an n-element vector to a JSON-serializable\narray with values rounded to two decimal places.",
            "line": " src/math/math.js:797"
        },
        {
            "message": "Missing item type\nEfficiently post-concatenates a translation to the given matrix.",
            "line": " src/math/math.js:1369"
        },
        {
            "message": "Missing item type\nEfficiently post-concatenates a translation to the given matrix.",
            "line": " src/math/math.js:1378"
        },
        {
            "message": "Missing item type\nCreates a matrix from a quaternion rotation and vector translation",
            "line": " src/math/math.js:1588"
        },
        {
            "message": "Missing item type\nGets Euler angles from a 4x4 matrix.",
            "line": " src/math/math.js:1638"
        },
        {
            "message": "Missing item type\nInitializes a quaternion from Euler angles.",
            "line": " src/math/math.js:2340"
        },
        {
            "message": "Missing item type\nBoundary math functions.",
            "line": " src/math/mathBoundaries.js:1"
        },
        {
            "message": "Missing item type\nReturns a new, uninitialized 3D axis-aligned bounding box.",
            "line": " src/math/mathBoundaries.js:10"
        },
        {
            "message": "Missing item type\nReturns a new, uninitialized 2D axis-aligned bounding box.",
            "line": " src/math/mathBoundaries.js:19"
        },
        {
            "message": "Missing item type\nReturns a new, uninitialized 3D oriented bounding box (OBB).",
            "line": " src/math/mathBoundaries.js:28"
        },
        {
            "message": "Missing item type\nReturns a new, uninitialized 2D oriented bounding box (OBB).",
            "line": " src/math/mathBoundaries.js:37"
        },
        {
            "message": "Missing item type\nTransforms an OBB3 by a 4x4 matrix.",
            "line": " src/math/mathBoundaries.js:47"
        },
        {
            "message": "Missing item type\nGets the diagonal size of an AABB3 given as minima and maxima.",
            "line": " src/math/mathBoundaries.js:95"
        },
        {
            "message": "Missing item type\nGet a diagonal boundary size that is symmetrical about the given point.",
            "line": " src/math/mathBoundaries.js:122"
        },
        {
            "message": "Missing item type\nGets the center of an AABB.",
            "line": " src/math/mathBoundaries.js:160"
        },
        {
            "message": "Missing item type\nGets the center of a 2D AABB.",
            "line": " src/math/mathBoundaries.js:175"
        },
        {
            "message": "Missing item type\nCollapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\nCreates new AABB if none supplied.",
            "line": " src/math/mathBoundaries.js:189"
        },
        {
            "message": "Missing item type\nConverts an axis-aligned 3D boundary into an oriented boundary consisting of\nan array of eight 3D positions, one for each corner of the boundary.",
            "line": " src/math/mathBoundaries.js:209"
        },
        {
            "message": "Missing item type\nFinds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.",
            "line": " src/math/mathBoundaries.js:262"
        },
        {
            "message": "Missing item type\nFinds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.",
            "line": " src/math/mathBoundaries.js:321"
        },
        {
            "message": "Missing item type\nFinds the minimum axis-aligned 3D boundary enclosing the given 3D points.",
            "line": " src/math/mathBoundaries.js:380"
        },
        {
            "message": "Missing item type\nFinds the minimum boundary sphere enclosing the given 3D points.",
            "line": " src/math/mathBoundaries.js:439"
        },
        {
            "message": "Missing item type\nFinds the minimum boundary sphere enclosing the given 3D points.",
            "line": " src/math/mathBoundaries.js:487"
        },
        {
            "message": "Missing item type\nGets the center of a bounding sphere.",
            "line": " src/math/mathBoundaries.js:541"
        },
        {
            "message": "Missing item type\nExpands the first axis-aligned 3D boundary to enclose the second, if required.",
            "line": " src/math/mathBoundaries.js:556"
        },
        {
            "message": "Missing item type\nExpands an axis-aligned 3D boundary to enclose the given point, if needed.",
            "line": " src/math/mathBoundaries.js:590"
        },
        {
            "message": "Missing item type\nCollapses a 2D axis-aligned boundary, ready to expand to fit 2D points.\nCreates new AABB if none supplied.",
            "line": " src/math/mathBoundaries.js:624"
        },
        {
            "message": "Missing item type\nFinds the minimum 2D projected axis-aligned boundary enclosing the given 3D points.",
            "line": " src/math/mathBoundaries.js:642"
        },
        {
            "message": "Missing item type\nExpands the first axis-aligned 2D boundary to enclose the second, if required.",
            "line": " src/math/mathBoundaries.js:697"
        },
        {
            "message": "Missing item type\nExpands an axis-aligned 2D boundary to enclose the given point, if required.",
            "line": " src/math/mathBoundaries.js:723"
        },
        {
            "message": "Missing item type\nCurve math functions.",
            "line": " src/math/mathCurves.js:1"
        },
        {
            "message": "Missing item type\nGeometry math functions.",
            "line": " src/math/mathGeometry.js:1"
        },
        {
            "message": "Missing item type\nCalculates the normal vector of a triangle.",
            "line": " src/math/mathGeometry.js:10"
        },
        {
            "message": "Missing item type\nFinds the intersection of a 3D ray with a 3D triangle.",
            "line": " src/math/mathGeometry.js:45"
        },
        {
            "message": "Missing item type\nFinds the intersection of a 3D ray with a plane defined by 3 points.",
            "line": " src/math/mathGeometry.js:94"
        },
        {
            "message": "Missing item type\nGets barycentric coordinates from cartesian coordinates within a triangle.",
            "line": " src/math/mathGeometry.js:130"
        },
        {
            "message": "Missing item type\nReturns true if the given barycentric coordinates are within their triangle.",
            "line": " src/math/mathGeometry.js:177"
        },
        {
            "message": "Missing item type\nGets cartesian coordinates from barycentric coordinates within a triangle.",
            "line": " src/math/mathGeometry.js:190"
        },
        {
            "message": "Missing item type\nBoundary math functions.",
            "line": " src/math/mathGeometryBuild.2.js:1"
        },
        {
            "message": "Missing item type\nBuilds normal vectors from positions and indices.",
            "line": " src/math/mathGeometryBuild.2.js:10"
        },
        {
            "message": "Missing item type\nBuilds vertex tangent vectors from positions, UVs and indices.",
            "line": " src/math/mathGeometryBuild.2.js:200"
        },
        {
            "message": "Missing item type\nBuilds vertex and index arrays needed by color-indexed triangle picking.",
            "line": " src/math/mathGeometryBuild.2.js:275"
        },
        {
            "message": "Missing item type\nBoundary math functions.",
            "line": " src/math/mathGeometryBuild.js:1"
        },
        {
            "message": "Missing item type\nBuilds normal vectors from positions and indices.",
            "line": " src/math/mathGeometryBuild.js:10"
        },
        {
            "message": "Missing item type\nBuilds vertex tangent vectors from positions, UVs and indices.",
            "line": " src/math/mathGeometryBuild.js:103"
        },
        {
            "message": "Missing item type\nBuilds vertex and index arrays needed by color-indexed triangle picking.",
            "line": " src/math/mathGeometryBuild.js:178"
        },
        {
            "message": "Missing item type\nKD-tree functions",
            "line": " src/math/mathKDTree.js:1"
        },
        {
            "message": "Missing item type\nReturns a KD-tree that contains the triangles of the given mesh",
            "line": " src/math/mathKDTree.js:13"
        },
        {
            "message": "Missing item type\nRay casting support functions.",
            "line": " src/math/mathRays.js:1"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look', around the 'up' vector",
            "line": " src/transforms/lookat.js:102"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/transforms/lookat.js:130"
        },
        {
            "message": "Missing item type\nRotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "line": " src/transforms/lookat.js:159"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/transforms/lookat.js:190"
        },
        {
            "message": "Missing item type\nPans the camera along X and Y axis.",
            "line": " src/transforms/lookat.js:219"
        },
        {
            "message": "Missing item type\nIncrements/decrements zoom factor, ie. distance between eye and look.",
            "line": " src/transforms/lookat.js:271"
        },
        {
            "message": "Missing item type\nInitializes this component",
            "line": " src/component.js:401"
        },
        {
            "message": "Missing item type\nCreates a clone of this component.\n\nThe clone will have the same properties as the original, except where\noverridden in the given optional configs.\n\nThe clone will share (by reference) the components of the original, unless overridden.\n\nFor example, if this component is an {{#crossLink \"Entity\"}}{{/crossLink}}, then the clone\nwill be attached to the **same** instances of {{#crossLink \"PhoneMaterial\"}}{{/crossLink}},\n{{#crossLink \"Camera\"}}{{/crossLink}} etc as this component, unless it supplies its own\ninstances for those via the configs.",
            "line": " src/component.js:623"
        },
        {
            "message": "Missing item type\nAdds a child component to this.\nWhen component not given, attaches the scene's default instance for the given name (if any).\nPublishes the new child component on this component, keyed to the given name.",
            "line": " src/component.js:655"
        },
        {
            "message": "Missing item type\nProtected method, called by sub-classes to queue a call to _update().",
            "line": " src/component.js:991"
        },
        {
            "message": "Missing item type",
            "line": " src/component.js:1007"
        },
        {
            "message": "Missing item type\nProtected virtual template method, optionally implemented\nby sub-classes to perform a scheduled task.",
            "line": " src/component.js:1019"
        },
        {
            "message": "Missing item type\nProtected template method, implemented by sub-classes to compile\ntheir state into their Scene's xeogl.renderer.Renderer.",
            "line": " src/component.js:1027"
        },
        {
            "message": "Missing item type\nProtected template method, implemented by sub-classes\nto clean up just before the component is destroyed.",
            "line": " src/component.js:1244"
        },
        {
            "message": "Missing item type\nReleases a shared component instance that was got earlier\nwith {{#crossLink \"Scene/getSharedComponent:method\"}}{{/crossLink}}.",
            "line": " src/scene.js:1617"
        },
        {
            "message": "Missing item type\nCompiles and renders this Scene",
            "line": " src/scene.js:1645"
        },
        {
            "message": "Missing item type\nInformation about available WebGL support",
            "line": " src/xeogl.js:70"
        },
        {
            "message": "Missing item type\nFor each component type, a list of its supertypes, ordered upwards in the hierarchy.",
            "line": " src/xeogl.js:198"
        },
        {
            "message": "Missing item type\nTests if the given object is an array",
            "line": " src/xeogl.js:520"
        },
        {
            "message": "Missing item type\nTests if the given value is a string",
            "line": " src/xeogl.js:528"
        },
        {
            "message": "Missing item type\nTests if the given value is a number",
            "line": " src/xeogl.js:538"
        },
        {
            "message": "Missing item type\nTests if the given value is an ID",
            "line": " src/xeogl.js:548"
        },
        {
            "message": "Missing item type\nTests if the given components are the same, where the components can be either IDs or instances.",
            "line": " src/xeogl.js:558"
        },
        {
            "message": "Missing item type\nTests if the given value is a function",
            "line": " src/xeogl.js:577"
        },
        {
            "message": "Missing item type\nTests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.",
            "line": " src/xeogl.js:587"
        },
        {
            "message": "Missing item type\nTests if the given component type is a subtype of another component supertype.",
            "line": " src/xeogl.js:600"
        },
        {
            "message": "Missing item type",
            "line": " src/xeogl.js:630"
        },
        {
            "message": "Missing item type",
            "line": " src/xeogl.js:636"
        },
        {
            "message": "Missing item type\nAdd non-null/defined properties of o to o2",
            "line": " src/xeogl.js:647"
        },
        {
            "message": "Missing item type\nAdd properties of o to o2 where undefined or null on o2",
            "line": " src/xeogl.js:662"
        },
        {
            "message": "Missing item type\nReturns true if the given map is empty.",
            "line": " src/xeogl.js:677"
        },
        {
            "message": "Missing item type\nReturns the given ID as a string, in quotes if the ID was a string to begin with.\n\nThis is useful for logging IDs.",
            "line": " src/xeogl.js:692"
        },
        {
            "message": "Missing item type\nReturns the concatenation of two typed arrays.",
            "line": " src/xeogl.js:705"
        },
        {
            "message": "Missing item type\nAdds a frame to this CameraPath, given as the current position of a {{#crossLink \"Camera\"}}{{/crossLink}}.\n\nThe {{#crossLink \"Camera/property:view\"}}Camera's view transform{{/crossLink}} must be a {{#crossLink \"Lookat\"}}{{/crossLink}}.",
            "line": " examples/js/animation/cameraPath.js:117"
        },
        {
            "message": "Missing item type\nAdds a frame to this CameraPath, specified as values for eye, look and up vectors at a given time instant.",
            "line": " examples/js/animation/cameraPath.js:144"
        },
        {
            "message": "Missing item type\nAdds multiple frames to this CameraPath, each frame specified as a set of values for eye, look and up\nvectors at a given time instant.",
            "line": " examples/js/animation/cameraPath.js:165"
        },
        {
            "message": "Missing item type\nSets the position of a {{#crossLink \"Camera\"}}{{/crossLink}} to a position interpolated within this CameraPath\nat the given time instant.",
            "line": " examples/js/animation/cameraPath.js:179"
        },
        {
            "message": "Missing item type\nGets eye, look and up vectors on this CameraPath at a given instant.",
            "line": " examples/js/animation/cameraPath.js:212"
        },
        {
            "message": "Missing item type\nRemoves all frames from this CameraPath.",
            "line": " examples/js/animation/cameraPath.js:227"
        },
        {
            "message": "Missing item type",
            "line": " examples/js/annotations/region.js:134"
        },
        {
            "message": "Missing item type",
            "line": " examples/js/annotations/ruler.js:147"
        },
        {
            "message": "Missing item type\nMouse picking control.",
            "line": " examples/js/controls/BIMPickingControl.js:1"
        },
        {
            "message": "Missing item type\nControls camera with mouse and keyboard, handles selection of entities and rotation point.",
            "line": " examples/js/controls/bimCameraControl.js:5"
        },
        {
            "message": "Missing item type\nAdds a {{#crossLink \"Curve\"}}{{/crossLink}} to this Path.\n\nFires a {{#crossLink \"Path/curves:event\"}}{{/crossLink}} event on change.",
            "line": " examples/js/curves/path.js:156"
        },
        {
            "message": "Missing item type\nGets a point on this Path corresponding to the given progress position.",
            "line": " examples/js/curves/path.js:351"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " examples/js/geometry/heightmapGeometry.js:113"
        },
        {
            "message": "Missing item type\nImplement protected virtual template method {{#crossLink \"Geometry/method:_update\"}}{{/crossLink}},\nto generate geometry data arrays.",
            "line": " examples/js/geometry/vectorTextGeometry.js:69"
        },
        {
            "message": "Missing item type\nDraws a mark on this PointMarkings.\n\nThe point that we're drawing at is given as a hit record that was previously returned from a call to the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Scene/pick:method\"}}pick(){{/crossLink}} method. Performing the\npick externally, instead of encapsulating within this draw() method, allows us to intercept the\npick result and perform other tasks with it, in addition to drawing.",
            "line": " examples/js/marking/pointMarkings.js:92"
        },
        {
            "message": "Missing item type\nClears this PointMarkings.",
            "line": " examples/js/marking/pointMarkings.js:135"
        },
        {
            "message": "Missing item type\nSaves this PointMarkings.",
            "line": " examples/js/marking/pointMarkings.js:146"
        },
        {
            "message": "Missing item type\nLoads data into this PointMarkings.\nClears this PointMarkings first.",
            "line": " examples/js/marking/pointMarkings.js:165"
        },
        {
            "message": "Missing item type\nLoads OBJ and MTL from file(s) into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/OBJModel.js:209"
        },
        {
            "message": "Missing item type\nParses OBJ and MTL text strings into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/OBJModel.js:239"
        },
        {
            "message": "Missing item type\nLoads glTF from a URL into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/glTFModel.js:222"
        },
        {
            "message": "Missing item type\nParses glTF JSON into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/glTFModel.js:263"
        },
        {
            "message": "Missing item type\nLoads glTF from a URL into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/glTFModel2.js:222"
        },
        {
            "message": "Missing item type\nParses glTF JSON into a {{#crossLink \"Model\"}}{{/crossLink}}.",
            "line": " examples/js/models/glTFModel2.js:263"
        },
        {
            "message": "Missing item type",
            "line": " examples/js/helpers/axisHelper.js:343"
        },
        {
            "message": "Missing item type\nProgrammatically-generated cube map.\n\nProvides the region markings on the ViewCube surface and is able to map UV coordinates from\npick results to the regions that were picked.",
            "line": " examples/js/helpers/viewCube.js:5"
        },
        {
            "message": "Missing item type",
            "line": " examples/js/helpers/viewCube.js:660"
        }
    ]
}